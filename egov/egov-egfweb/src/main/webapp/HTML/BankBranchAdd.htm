#-------------------------------------------------------------------------------
# eGov suite of products aim to improve the internal efficiency,transparency, 
#      accountability and the service delivery of the government  organizations.
#   
#       Copyright (C) <2015>  eGovernments Foundation
#   
#       The updated version of eGov suite of products as by eGovernments Foundation 
#       is available at http://www.egovernments.org
#   
#       This program is free software: you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation, either version 3 of the License, or
#       any later version.
#   
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#   
#       You should have received a copy of the GNU General Public License
#       along with this program. If not, see http://www.gnu.org/licenses/ or 
#       http://www.gnu.org/licenses/gpl.html .
#   
#       In addition to the terms of the GPL license to be adhered to in using this
#       program, the following additional terms are to be complied with:
#   
#   	1) All versions of this program, verbatim or modified must carry this 
#   	   Legal Notice.
#   
#   	2) Any misrepresentation of the origin of the material is prohibited. It 
#   	   is required that all modified versions of this material be marked in 
#   	   reasonable ways as different from the original version.
#   
#   	3) This license does not grant any rights to any user of the program 
#   	   with regards to rights under trademark law for use of the trade names 
#   	   or trademarks of eGovernments Foundation.
#   
#     In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
#-------------------------------------------------------------------------------
<!doctype html public "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>


<script LANGUAGE="javascript">
var pageOper=1;
var sameWindow=0;
var rowActType;
var occurance=0;
var isExh=0;
var fromChequeNo=0;
//var bankAccountid;





function loadCOAId(obj){
	//var accId=PageManager.DataService.getControlInBranch(obj.parentNode.parentNode.parentNode,'accountHead_id');
	//var accType=PageManager.DataService.getControlInBranch(obj.parentNode.parentNode,'bankAccount_accountType');
	var table=document.getElementById('bankAccountGrid');
	var rowIdx=PageManager.DataService.getRow(obj).rowIndex;
	var accId=PageManager.DataService.getControlInBranch(table.rows[rowIdx],'accountHead_id');
	var accType=PageManager.DataService.getControlInBranch(table.rows[rowIdx],'bankAccount_accountType');
	var pay_To=PageManager.DataService.getControlInBranch(table.rows[rowIdx],'pay_To');

	if(obj.selectedIndex==-1) return;
	accId.value=obj.options[obj.selectedIndex].value;
	accType.value=obj.options[obj.selectedIndex].text;
	//alert(accId.value+" "+accType.value);
	//alert('accType.value'+accType.value);
	//alert('accId.value'+accId.value);
}
function openSearch(obj){
		 var a = new Array(2);
         var sRtn = showModalDialog("Search.html?tableNameForCode=chartOfAccounts","","dialogLeft=300;dialogTop=210;dialogWidth=305pt;dialogHeight=300pt;status=no;");
         if ( sRtn != '' )
	       {
			 a = sRtn.split(",");
			  var x = PageManager.DataService.getControlInBranch(obj.parentNode.parentNode,'chartOfAccounts_glCode');
			  x.value = a[0];
			  PageManager.DataService.setQueryField("keyValue",a[0]);
			  PageManager.DataService.callDataService("accountHeadID");
		   }
         }
function addNewRowButton()
{
		//   ***1 only FO***,  ***2 FO***,  ***Admin, 3 All***    //
		//This will check if new Account has to add/modify if so prevent from adding new accountgrid
		if(document.getElementById('screenName').innerHTML=="New Account")
		if(document.getElementById('bankBranch_branchId').value)
		  return false;
		if(!isValidUser(2, CookieManager.getCookie('userRole')) ) return false;
		var index, inIndex, rowLength;
		var table = document.getElementById('bankAccountGrid');

		if(!table || !table.rows) return false;

		table.removeAttribute("rowsToClone");
		rowLength = table.rows.length;
		var result=addNewRow('bankAccountGrid','bankAccount_accountNumber,bankAccount_accountTypeID');
//		alert(result);

		if(!result)return false;

		PageManager.DataService.getControlInBranch(table.rows[rowLength],'bankAccount_id').value="";
		PageManager.DataService.getControlInBranch(table.rows[rowLength],'bankAccount_accountNumber').value="";
		PageManager.DataService.getControlInBranch(table.rows[rowLength],'bankAccount_accountNumber').removeAttribute('exilMustEnter');
		PageManager.DataService.getControlInBranch(table.rows[rowLength],'bankAccount_narration').value="";
		PageManager.DataService.getControlInBranch(table.rows[rowLength],'fund_id').value="";
		PageManager.DataService.getControlInBranch(table.rows[rowLength],'bankAccount_accountTypeID').value="";
		PageManager.DataService.getControlInBranch(table.rows[rowLength],'bankAccount_accountNumber').focus();

		return true;
}
function chkAccountGrid()
{//alert('outside');

  table=document.getElementById('bankAccountGrid');
  //alert("Length:"+table.length);
  var isPresent=false;
  for(var i=1;i<table.rows.length;i++)
  {
  	  rowObj=PageManager.DataService.getControlInBranch(table.rows[i]);
  	  //alert(rowObj);
  	  accNo=PageManager.DataService.getControlInBranch(table.rows[i],'bankAccount_accountNumber');
	  if(accNo.value=="" || accNo==null){
	  //alert("accNo.value"+accNo.value);

	       //rowObj.rows[i].disabled=true;
	       }
	  else
	  {
	  		isPresent=true;
		  	var acctType=PageManager.DataService.getControlInBranch(table.rows[i],'bankAccount_accountTypeID');
		  	loadCOAId(acctType);
      }


  }
  if(!isPresent)
  	return false;

  return true;
}
function branchCode()
{
   bankName=document.getElementById('bankBranch_branchName').value;
   bank=bankName.split(" ");
   var branchCode="";
   for(i=0;i<bank.length;i++)
   {
     branchCode=branchCode+bank[i];
   }
   var brCode= document.getElementById('bankBranch_branchCode').value;
   if(!brCode)
  	 document.getElementById('bankBranch_branchCode').value=branchCode;
 // alert(document.getElementById('bankBranch_branchCode').value);
}
function chkAccountNumber()
{
   table=document.getElementById('bankAccountGrid');
  //alert(table.length);
  for(var i=1;i<table.rows.length;i++)
  {

  	  rowObj=PageManager.DataService.getControlInBranch(table.rows[i]);
  	  accNo=PageManager.DataService.getControlInBranch(table.rows[i],'bankAccount_accountNumber');
  	  //alert("Acc no:"+accNo+"**"+accNo.value);
  	  accNo=accNo.value;
	  accNo=accNo.toLowerCase();
  	  for(var j=i+1;j<table.rows.length;j++)
  	  {
		 var accNo2=PageManager.DataService.getControlInBranch(table.rows[j],'bankAccount_accountNumber');
		 if(accNo2.length>0){
		 	accNo2=accNo2.value;
		 	accNo2=accNo2.toLowerCase();
		 	if((accNo==accNo2) && (accNo!=null || accNo.value!=""))
	  	 	       return false;
	  	 }

      }
  }
  return true;

}

function chkAlldata()
{
   table=document.getElementById('bankAccountGrid');
  //alert(table.length);
  for(var i=1;i<table.rows.length;i++)
  {
  	  rowObj=PageManager.DataService.getControlInBranch(table.rows[i]);
  	  accNo=PageManager.DataService.getControlInBranch(table.rows[i],'bankAccount_accountNumber');
  	  fundname=PageManager.DataService.getControlInBranch(table.rows[i],'fund_id');
  	  acctype=PageManager.DataService.getControlInBranch(table.rows[i],'bankAccount_accountType');
  	  //alert("accNo"+(accNo.value)+"fundname"+(fundname.value)+"acctype"+(acctype.value));
  	   if((accNo.value.length>0) && (fundname.value.length==0 || acctype.value.length==0))
	  	 	       return false;


  }
  return true;

}

function ButtonPress(name){
	
	branchCode();
	if(!PageValidator.validateForm())return false;
	//if(!validateChequeNumberTable())return false;
	//chkAccountGrid();
	var micr = document.getElementById('bankBranch_branchMICR').value;
	if(micr.length!=9 && micr.length!=0){
		alert('MICR must be 9 digit');
		return false;
	}
	if((document.getElementById('bankBranch_addAccount').checked) || (document.getElementById('bankBranch_modifyAccount').checked)){
		if(!chkAccountGrid()){
				alert('Atleast one account needs to be present.');
				return false;
		}
	}
	if(!chkAccountNumber()){
		alert('Duplicate Account Numbers are not allowed');
		return false;
	}
	//alert("Comming here");
	if(!chkAlldata()){
		alert("Enter the required fields");
		return false;}

	if(name.toLowerCase()=='savenew')
	sameWindow=1;
	//   ***1 only FO***,  ***2 FO***,  ***Admin, 3 All***    //
	if(!isValidUser(2, CookieManager.getCookie('userRole')) ) return false;
	var table=document.getElementById('bankAccountGrid');
	if(!table)	return false;
   	for(var i=1;i<table.rows.length;i++){
   		var chkBoxVal=PageManager.DataService.getControlInBranch(table.rows[i],"bankAccount_isActiveCB");
		var status=PageManager.DataService.getControlInBranch(table.rows[i],"bankAccount_isActive");
		if(chkBoxVal.checked)	status.value="ON";
		else	status.value="OFF";

   	}

	//if(document.getElementById('submitButton').innerHTML=='Insert')
	if(pageOper==1){
		if(checkNarration('bankBranch_narration'))
		if(PageValidator.validateForm()){

			doInsert();
		}
	}
	else if(pageOper==2){//if(document.getElementById('submitButton').innerHTML=='Modify')
		if(checkNarration('bankBranch_narration'))
		if(PageValidator.validateForm()){
				doUpdate();
		}
	}
	else alert('Problem With HTML Screen');
}
function doInsert(){
//PageManager.UpdateService.submitForm('departmentInsert');
	PageManager.UpdateService.submitForm('newBankBranchInsert');
}

function checkRange(obj)
{
		if((document.getElementById('fromChequeNo').value *1) >= (document.getElementById('toChequeNo').value *1))
						{
						alert("From Cheque No  should be less than ToCheque No");
						return false;
						}
}
function doUpdate(){
	/* var table=document.getElementById('chequetableGrid');
		 for(i=1;i<table.rows.length;i++)
       {
            getControlInBranch(table.rows[i],"fromChequeNo").disabled=false;
            getControlInBranch(table.rows[i],"toChequeNo").disabled=false;
            getControlInBranch(table.rows[i],"ReceivedDate").disabled=false;
            getControlInBranch(table.rows[i],"isAllottedTo").disabled=false;
        } */

	PageManager.UpdateService.submitForm('newBankBranchUpdate');
}
function getDataOnLoad(){
	document.getElementById('bankAccountGrid').style.display='none';
	/*PageManager.DataService.addNewRow("bankAccountGrid");
	var table=document.getElementById('bankAccountGrid');
	var fundid=PageManager.DataService.getControlInBranch(table.rows[2],'fund_id');
	fundid.setAttribute('exilListSource','fundNameList');*/
	PageManager.ListService.callListService();
	//Commented by sumit
	//var acType=document.getElementById('bankAccount_accountTypeID');
	//acType.setAttribute('exilListSource',"bankAccount_accountTypeID");

	var fund = PageManager.DataService.getQueryField('fund');	//added by sumit
		var accNo = PageManager.DataService.getQueryField('bankAccount_accountNumber');	//added by sumit
		//alert('acc num:'+accNo);
	PageManager.DataService.setQueryField('accN',accNo);
	var bank_code = PageManager.DataService.getQueryField('bank_code');
/*	if(new_Ban.toLowerCase()=='yes')
	{

	}
	else

	*/	var bankBranch_branchId = PageManager.DataService.getQueryField('bankBranch_branchId');
		if (bankBranch_branchId && bank_code){
			if(fund)//added by sumit
			{
				//alert('Iside IF');
				//alert(fund);
				onloadFund(fund);
			}
			pageOper=2;
			if(!accNo )
			{

				PageManager.DataService.callDataService('NewAccBranchEnquiry');
				document.getElementById('screenName').innerHTML="New Account";
				document.getElementById('trModify').style.display='block';
				document.getElementById('trNewAcc').style.display='none';
				document.getElementById('trNew').style.display='none';
				document.getElementById('trModifyAcc').style.display='none';
				var	addAccountDisp=	PageManager.DataService.getQueryField('addAccDisp');
			  
				if(addAccountDisp==0)
				{
					document.getElementById('bankAccountGrid').style.display='none';
				}else
				{
					document.getElementById('bankAccountGrid').style.display='inline';
					document.getElementById('bankBranch_modifyAccount').checked=true;
				}	
				document.getElementById('bankBranch_branchName').focus();
				//document.getElementById()'chequetableGrid').style.display='block';

			}
			else{
				var acNo=document.getElementById('bankAccount_accountNumber');
					//Commented by sumit
				//acType.setAttribute("exilMustEnter","true");

				acNo.setAttribute("exilMustEnter","true");


		/*if(fund)//added by sumit
		{
			//alert('Iside IF');
			//alert(fund);
			onloadFund(fund);
		}	*/
		//var bankAccount_id = PageManager.DataService.getQueryField('bankAccount_id');
			PageManager.DataService.callDataService('branchEnquiry');
			//alert("on load  ...bankAccountid----"+bankAccountid);
		//	PageManager.DataService.setQueryField('bankaccountid',bankAccountid);
		//	PageManager.DataService.callDataService('ChequeRangeDetail');
			//document.getElementById('submitButton').innerHTML="Modify";
			document.getElementById('screenName').innerHTML="Bank Branch - Modify";
			document.getElementById('trModify').style.display='block';
			document.getElementById('trModifyAcc').style.display='none';
			document.getElementById('trNew').style.display='none';
			document.getElementById('trNewAcc').style.display='none';
			document.getElementById('bankAccountGrid').style.display='inline';
			document.getElementById('bankBranch_modifyAccount').checked=true;
			//document.getElementById('chequetableGrid').style.display='block';
			document.getElementById('bankBranch_branchName').focus();

			}
	}
	else if(bank_code){
		pageOper=1;
		//commented by sumit
		//var acType=document.getElementById('bankAccount_accountTypeID');
		//"&bank_name="+bankName+"&bank_Narration="+narration+"&bank_active="+active+"&newBank=yes";
		var new_Bank=PageManager.DataService.getQueryField('newBank');
		document.getElementById('new_bank').value=PageManager.DataService.getQueryField('newBank');
		if(fund)//added by sumit
		{
			//alert('Iside IF');
			//alert(fund);
			onloadFund(fund);
		}
		if(new_Bank.toLowerCase()=='1')
		{
		  document.getElementById('bank_code').value=PageManager.DataService.getQueryField('bank_code');
		  document.getElementById('bank_name').value=PageManager.DataService.getQueryField('bank_name');
		  document.getElementById('bank_narration').value=PageManager.DataService.getQueryField('bank_Narration');
		  document.getElementById('bank_active').value=PageManager.DataService.getQueryField('bank_active');
		  document.getElementById('bankCode').style.display='none';
		  document.getElementById('bank_code').style.display='none';
		}
		else
			PageManager.DataService.callDataService('getBankDetail');

		//document.getElementById('submitButton').innerHTML="Insert";
		//document.getElementById('chequetableGrid').style.display='none';
		document.getElementById('screenName').innerHTML="Bank Branch - New";
		document.getElementById('trModify').style.display='none';
		document.getElementById('trModifyAcc').style.display='none';
		document.getElementById('trNew').style.display='block';
		document.getElementById('trNewAcc').style.display='block';
		document.getElementById('bankBranch_branchName').focus();
	}
	hideColumn(5);
	document.getElementById('egUser_id').value = CookieManager.getCookie('currentUserId');

}

function beforeRefreshPage(dc){
	return true;
}
function afterRefreshPage(dc){
var bankAccountid='';
	if(('accountTypeId'==dc.values['serviceID'] )&& (!(document.getElementById('screenName').innerHTML=="Bank Branch - Modify") ))//&& !(occurance==0)
	{occurance=1;
	  //alert(dc.values['serviceID']);
	 	//PageManager.DataService.getControlInBranch(curRow, 'acc_entityId').value = dc.values['accEntityId'];
		//var accEntity = PageManager.DataService.getControlInBranch(curRow, 'acc_entity');
		//clearCombo(accEntity);
		tempList=dc.grids['bankAccount_accountTypeID'];
		var table=document.getElementById('bankAccountGrid');
		var acctType=PageManager.DataService.getControlInBranch(table.rows[rowActType],'bankAccount_accountTypeID');
		var option;
		//for(var i=0; i<accEntityList.length; i++)
		if(tempList!=null && tempList.length>0)
		{
			for(var i=0;i<tempList.length;i++)
			{
				option = document.createElement('OPTION');
				option.value=tempList[i][0];
				option.text = tempList[i][1];
				acctType.add(option);
			}
		}
	}
occurance=1;
	if(dc.values['bankBranch_isActive']=='0')
		document.getElementById('bankBranch_isActive').checked=false;
	else
		document.getElementById('bankBranch_isActive').checked=true;

	var table=document.getElementById('bankAccountGrid');
	var accGrid=dc.grids['bankAccountGrid'];
	if(accGrid && accGrid.length!=0){
   	for(var i=1;i<table.rows.length;i++){
   		bankAccountid=accGrid[i][0];

   		obj=PageManager.DataService.getControlInBranch(table.rows[i],"bankAccount_isActiveCB");
   		if(accGrid[i][4]=='1'){
   			obj.checked=true;
   		}
   		else	obj.checked=false;

		}

	}

	//if(document.getElementById('fromChequeNo').value.length==0 && bankAccountid.length>0){
	if(bankAccountid.length>0){
		PageManager.DataService.removeQueryField("pay_To");
		PageManager.DataService.setQueryField('bankaccountid',bankAccountid);
		PageManager.DataService.callDataService('ChequeRangeDetail');}
	if(dc.values['serviceID']=='ChequeRangeDetail')
	PageManager.DataService.addNewRow('chequetableGrid');
	//isExhausted();
	selectDefaults();
	return true;
}
function  selectDefaults(){
	var table=document.getElementById('bankAccountGrid');
	for(var i=1;i<table.rows.length;i++){
		var accType=PageManager.DataService.getControlInBranch(table.rows[i],'bankAccount_accountType');
		var accTypeId=PageManager.DataService.getControlInBranch(table.rows[i],'bankAccount_accountTypeID');
		for(var j=0;j<accTypeId.length;j++){
		 try{
			if(accTypeId.options[j].text==accType.value){
				accTypeId.options[j].setAttribute('selected',true);
			}
		 }catch(e){}
		}
	}
}
function hideColumn(index){
	var table=document.getElementById('bankAccountGrid');
   	for(var i=0;i<table.rows.length;i++){
   		table.rows[i].cells[index].style.display="none";
   	}
}
function reset(){
	//PageManager.DataService.refreshPage(window.lastRefreshedData);
}
function afterUpdateService(dc){
    if(sameWindow == 1){
	  window.location="BankBranchAdd.htm?bank_code="+dc.values['bank_code']+"&newBank=0";
      }else{
	window.location="BankBranchEnquiry.htm?bankBranch_branchId="+dc.values['bankBranch_branchId']+"&bank_code="+dc.values['bank_code'];
	}
	sameWindow=0;
	return true;
}
function afterUpdateServiceFailed(dc){
	//isExhausted();
	selectDefaults();
}

function onClickCancel(){
	window.location="BankEnquiry.htm?";
}
function verifyBranchCode(evnt){
	PageManager.DescService.onblur(evnt);
}
/**
	Method by sumit
*/
function onChangeFund(obj){
	rowActType=PageManager.DataService.getRow(obj).rowIndex;
	//row=row.rowIndex;
	var table=document.getElementById('bankAccountGrid');
	var fund=PageManager.DataService.getControlInBranch(table.rows[rowActType],'fund_id');
	var acctType=PageManager.DataService.getControlInBranch(table.rows[rowActType],'bankAccount_accountTypeID');
	//var fundType1=fund.options[obj.selectedIndex].text;
	var fundType=fund.options[obj.selectedIndex].value;
	//alert(fundType1);
	var acntType=document.getElementById('bankAccount_accountTemp');
	clearCombo(acctType);
	clearCombo(acntType);
	removeProperty('exilListSource');
	PageManager.DataService.setQueryField('type',fundType);
	acntType.setAttribute('exilListSource','bankAccount_accountTypeID');
	PageManager.DataService.callDataService('accountTypeId');
	//loadCOAId(acctType);
}
function removeProperty(property)
{
   var table=document.getElementById('bankAccountGrid');
   for(i=0;i<table.length;i++)
   {
   	  var acctType=PageManager.DataService.getControlInBranch(table.rows[i],"bankAccount_accountTypeID");
   	  acctType.removeAttribute(property);
   }
}
function onloadFund(obj){
	//clearCombo('bankAccount_accountTypeID');
	var fundType = obj;
	//alert(fundType);
	var table=document.getElementById('bankAccountGrid');
	//var acctType=PageManager.DataService.getControlInBranch(table.rows[2],"bankAccount_accountTypeID");
	PageManager.DataService.setQueryField('type',fundType);
	document.getElementById('bankAccount_accountTypeID').setAttribute('exilListSource','bankAccount_accountTypeID');
	//acctType.setAttribute('exilListSource','bankAccount_accountTypeID');

	PageManager.DataService.callDataService('accountTypeId');
}
function clearCombo(obj)
{
	//var accCtrl=document.getElementById(obj);
	var accCtrl=obj
	//alert(obj.options.length);
	for(var i=accCtrl.options.length-1;i>=0;i--){
		accCtrl.remove(i);}
}
// End
function validateAccountTable(){
		var accGrid=document.getElementById('bankAccountGrid');
		var acNo=null;
		var acType=null;
		for(var i=1;i<accGrid.rows.length;i++){
			acType=PageManager.DataService.getControlInBranch(accGrid.rows[i],'bankAccount_accountTypeID');
			acNo=PageManager.DataService.getControlInBranch(accGrid.rows[i],'bankAccount_accountNumber');
			if(acType.selectedIndex!=0 && acNo.value.length==0){//if accounttype is selected ask for account number
				alert('Select Account Number For Row '+i);
				return false;
			}else if(acType.selectedIndex==0 && acNo.value.length>0){
				alert('Select Account Type For Row '+i);
				return false;
			}
		}
		return true;
}

function isExhausted()
{
   var table=document.getElementById('chequetableGrid');
   for(i=1;i<table.rows.length;i++)
   {
		var isExh = getControlInBranch(table.rows[i],"isExh").value;
        var nxtChequeNo = getControlInBranch(table.rows[i],"nxtChqNo").value;
        if(isExh==1)
			getControlInBranch(table.rows[i],"isExh1").checked=true;
		else
			getControlInBranch(table.rows[i],"isExh1").checked=false;
		getControlInBranch(table.rows[i],"isExh1").disabled=true;

         if((isExh==1) || (nxtChequeNo !=""))
        {
                getControlInBranch(table.rows[i],"fromChequeNo").disabled=true;
                getControlInBranch(table.rows[i],"toChequeNo").disabled=true;
                getControlInBranch(table.rows[i],"ReceivedDate").disabled=true;
                getControlInBranch(table.rows[i],"isAllottedTo").disabled=true;
        }
    }
}


function print(obj)
{
  alert(obj.options.length);
}

// Function to Display AccountDetails or not.
function loadAccountDetails(obj)
{
	if(obj.checked)
		document.getElementById('bankAccountGrid').style.display='inline';
	else
		document.getElementById('bankAccountGrid').style.display='none';
}


// added by yashodha --- To Check fromChequeNo & ToChequeNo length are same in the ChequeTableGrid
function validateChequeNumberTable()
{
   //alert( "I am inside cheque validate");
   var cheGrid = document.getElementById('chequetableGrid');
   for(var i=1;i<cheGrid.rows.length;i++)
   {
    var fromCheNo = PageManager.DataService.getControlInBranch(cheGrid.rows[i],"fromChequeNo").value;
    var toCheNo = PageManager.DataService.getControlInBranch(cheGrid.rows[i],"toChequeNo").value;
    var length1 = fromCheNo.length;
    var length2 = toCheNo.length;

  var deptId = PageManager.DataService.getControlInBranch(cheGrid.rows[i],"isAllottedTo").value;
	
   // alert(length1);
    //alert(length2);
    	if(length1 != length2)
        {
         alert("From Cheque No. and To Cheque No. length should be same");
         return false;
        }else if(deptId == "" && length1 !=0 &&  length1 == length2){
		 alert("Please select a department in row number "+ i);
         return false;
		
	}
     }
	
      return true;
  }
</script>
</head>
<input type="hidden" name="addAccDisp" id="addAccDisp">
<body bgcolor="#ffffff" onKeyDown ="CloseWindow(event);" bottommargin="0" topmargin="0" rightmargin="0" leftmargin="0" marginheight="0" marginwidth="0" onLoad="getDataOnLoad()">  <!------------------ Header Begins Begins--------------------->

<form name="BankBranchAdd">
<input type="hidden" name="egUser_id" id="egUser_id">
<input type="hidden" name="new_bank" id="new_bank" value="0">
	<table width="100%" border=0 cellpadding="3" cellspacing="0">
		<tr class=tableheader style="Display:none">
			<td  colspan="4"><span  id="screenName">&nbsp;</span></td>
		</tr>

		<tr class="row2">
			<td align="right"><div align="right" class="labelcell">Bank&nbsp;Name</div></td>
			<td>
				<div class="fieldcell"><input type="hidden" name="bank_id" id="bank_id" Dispaly:"style=none">
				<input readOnly class="fieldinput" name="bank_name" id="bank_name" exilDataType="exilAnyChar">&nbsp;</div>
			</td>
			<td align=right><div align="right" class="labelcell" id="bankCode" style="Display:none">Bank&nbsp;Code</div></td>
			<td>
				<div class="fieldcell"><input class="fieldinput" readOnly name="bank_code" id="bank_code" exilDatType="exilAlphaNumeric" style="Display:none">&nbsp;</div>
				<input type =hidden name="bank_narration" id="bank_narration">
				<input type=hidden name="bank_active" id="bank_active">
			</td>
		</tr>

		<tr class="row2">
			<td style="Display:none" align="right"><div align="right"  class="labelcell">Branch&nbsp;Code<span class="leadon">*</span></div></td>
			<td style="Display:none">
				<input type="hidden" name="bankBranch_branchId" id="bankBranch_branchId">
				<input type="hidden" name="fund" id="fund">
				<input type="hidden" name="branch_codeCheck" id="branch_codeCheck">
				<div class="fieldcell"><input name="bankBranch_branchCode" class="fieldinput" id="bankBranch_branchCode" MaxLength="50" onBlurr="verifyBranchCode(event);" exilDataType1="exilAlphaNumeric" exilDescField1="branch_codeCheck" exilDataSource1="branchCodeVerification" exilMustEnter1="true" ></div>
			</td>
			<td align=right><div align="right" class="labelcell">Branch&nbsp;Name<span class="leadon">*</span></div></td>
			<td>
				<div class="fieldcell"><input name="bankBranch_branchName" class="fieldinput" id="bankBranch_branchName" MaxLength="50" exilDataType="exilAnyChar" exilMustEnter="true" ></div>
			</td>
			<td></td>
			<td></td>
		</tr>

		<tr class="row2">
			<td align="right"><div align="right" class="labelcell">Address<span class="leadon">*</span></div></td>
			<td>
				<div class="fieldcell"><input name="bankBranch_branchAddress1" class="fieldinput" id="bankBranch_branchAddress1"  MaxLength="50" exilDataType="exilAnyChar" exilMustEnter="true" ></div>
			</td>
			<td><div align="right" class="labelcell">&nbsp;</div></td>
			<td class="fieldinput">&nbsp;</td>
		</tr>

		<tr class="row2">
			<td>&nbsp;</td>
			<td>
				<div class="fieldcell"><input name="bankBranch_branchAddress2" class="fieldinput" id="bankBranch_branchAddress2"  MaxLength="50" exilDataType="exilAnyChar" ></div>
			</td>
			<td align="right"><div align="right" class="labelcell">MICR</div></td>
			<td>
				<div class="fieldcell"><input name="bankBranch_branchMICR" class="fieldinput" id="bankBranch_branchMICR" MaxLength="9" exilDataType="exilUnsignedInt" ></div>
			</td>
		</tr>

		<tr class="row2">
			<td align="right"><div align="right"  class="labelcell">City</div></td>
			<td class="fieldinput">
				<div class="fieldcell"><input name="bankBranch_branchCity" class="fieldinput" id="bankBranch_branchCity" MaxLength="50" exilDataType="exilAnyChar" ></div>
			</td>
			<td align="right"><div align="right" class="labelcell">Pin</div></td>
			<td>
				<div class="fieldcell"><input name="bankBranch_branchPin" class="fieldinput" id="bankBranch_branchPin" MaxLength="50" exilDataType="exilUnsignedInt" ></div>
			</td>
		</tr>

		<tr class="row2">
			<td align="right"><div align="right" class="labelcell">Phone</div></td>
			<td>
				<div class="fieldcell"><input name="bankBranch_branchPhone" class="fieldinput" id="bankBranch_branchPhone" MaxLength="15" exilDataType="exilAnyChar" ></div>
			</td>
			<td align="right" valign="center"><div align="right" class="labelcell">Fax</div></td>
			<td>
				<div class="fieldcell"><input name="bankBranch_branchFax" class="fieldinput" id="bankBranch_branchFax" MaxLength="15" exilDataType="exilAnyChar" ></div>
			</td>
		</tr>

		<tr class="row2">
			<td align="right"><div align="right"  class="labelcell">Contact&nbsp;Person</div></td>
			<td>
				<div class="fieldcell"><input name="bankBranch_contactPerson" class="fieldinput" id="bankBranch_contactPerson" MaxLength="50" exilDataType="exilAnyChar" ></div>
			</td>
		<td align="right"><div align="right" class="labelcell">Narration</div></td>
			<td><TEXTAREA class=narrationfieldinput id=bankBranch_narration name=bankBranch_narration rows=3 cols=40 exilDataType="exilAnyChar"></TEXTAREA>
			</td>
		</tr>

		<tr class="row2">
			<td align="right"><div align="right" class="labelcell">Active</div></td>
			<td>
				<input type=checkbox name="bankBranch_isActive" id="bankBranch_isActive" checked value="1">
			</td>
			<td>
			<select  ID="bankAccount_accountTemp" NAME="bankAccount_accountTemp" MaxLength="25" style="WIDTH: 50; height:21" style="Display:none" ></td>
			<td>&nbsp;</td>
		</tr>
		
	
		<tr class="row2" name="trNewAcc" id="trNewAcc">
			<td align="right"><div align="right" class="labelcell">Add Account</div></td>
			<td>
				<input type=checkbox name="bankBranch_addAccount" id="bankBranch_addAccount" onclick=loadAccountDetails(this)>
			</td>
		</tr>
		
		<tr class="row2" name="trModifyAcc" id="trModifyAcc">
			<td align="right"><div align="right" class="labelcell">Modify Account</div></td>
			<td>
				<input type=checkbox name="bankBranch_modifyAccount" id="bankBranch_modifyAccount" onclick=loadAccountDetails(this)>
			</td>
		</tr>
		
		<tr class="row2" >
			<td  colspan=4>
			<div  id="hdiv" style="width:795px;overflow-x:scroll">
				<table  border="1" cellpadding="0" cellspacing="0" name="bankAccountGrid" ID="bankAccountGrid" >
       			 <TBODY>
					<tr class="thStlyle">
						<td><div align="center" >Account No<span class="leadon">*</span></div></div></td>
						<td><div align="center" >Fund<span class="leadon">*</span></div></div></td>
						<td><div align="center" >Account Type<span class="leadon">*</span></div></div></td>
						<td><div align="center" >Description</div></td>
						<td><div align="center" >Pay To</div></td>
						<td><div align="center" >&nbsp;</div></td>
						<td><div align="center" >Type</div></td>
						<td style="DISPLAY: none"><div align="center" >AccountCode</div></td>

						<td align="center"><div align="center" >Active</div></td>
					</tr>
					<tr class="smallfieldcell">
						<td><span><input
            type="hidden" name="bankAccount_id"
            id="bankAccount_id" style="WIDTH: 1px; HEIGHT: 22px" size=1>
						<input size=25
            ID="bankAccount_accountNumber" NAME="bankAccount_accountNumber" MaxLength="20" style="WIDTH: 90; HEIGHT: 22" exilDataType="exilAlphaNumeric"></span></td><!-- Changed by sumit-->

			<td width="10%"><select onChange="onChangeFund(this);" id="fund_id" name="fund_id" class="fieldinput"   exilListSource="fundNameList" ></select> </td>
			<td><span>
			<input type="hidden" ID="bankAccount_accountType" NAME="bankAccount_accountType">
			 <select onchange="loadCOAId(this);"    ID="bankAccount_accountTypeID"
            NAME="bankAccount_accountTypeID" MaxLength="25" style="WIDTH: 275; height:17" exilDataType="exilAlphaNumeric"   ></select></span></td></SPAN></td>
			<td >
			<input
            align="right" size=21 ID="bankAccount_narration"
            NAME="bankAccount_narration"
            MaxLength="250"
            style="WIDTH: 100; HEIGHT: 22" exilDataType="exilAnyChar" onKeyDown ="addNewRowButton(); "></td>

             <td>
	            <span>
						<input ID="pay_To" NAME="pay_To" style="WIDTH: 100; HEIGHT: 22" exilDataType="exilAnyChar"></span>
            </td>
					<td >
					<td>
					<select id="bankAccount_type" class="fieldInput"
											name="bankAccount_type">
											<option value="RECEIPTS_PAYMENTS">
												Receipts & Payments
											</option>
											<option value="RECEIPTS">
												Receipts
											</option>
											<option value="PAYMENTS">
												Payments
											</option>
										</select>
					</td>
					<input  type="hidden" name="bankAccount_isActive" id="bankAccount_isActive"
            style="WIDTH: 1px; HEIGHT: 22px" size=1></td>


            <td style="DISPLAY: none">

					<INPUT id=accountHead_id style="WIDTH: 1px; HEIGHT: 22px" size=1
						 type="hidden"
            name=accountHead_id> <!--<input
					name="chartOfAccounts_glCode"
					id="chartOfAccounts_glCode" size =2
		            style="WIDTH: 128px;
				    HEIGHT: 22px" onBlur="PageManager.DescService.onblur(event)"
					exilDescField="accountHead_id" exilDataSource="accountHeadID"
					exilInGrid="true"><IMG id=IMG1 style="WIDTH: 25px; HEIGHT: 22px"
					onclick=openSearch(this) height=22 src="/egi/resources/erp2/images/plus1.gif"
					align=top border=0>-->

		   </td>


						<td align="center"><span>
						<input
            type=checkbox name="bankAccount_isActiveCB"
        id="bankAccount_isActiveCB" checked value="ON"  style="WIDTH: 20;" >
           <INPUT id=accountDetailKey_id style="WIDTH: 1px; HEIGHT: 22px" size=1 type="hidden"
			 name=accountDetailKey_id>
           </span></td>
			</tr>
				</TBODY></table>
				</div>
				</TD></TR>
		<tr class="row2" >
			<td colspan="4" align="middle">
    <!--   <TABLE  cellSpacing=0 cellPadding=0 width="56%" align=center border=1 ID="chequetableGrid" NAME="chequetableGrid">

        <TR class=thStlyle >
          <TD  width="28%"><DIV align=center>From ChequeNo</DIV></TD>
          <TD  width="28%"><DIV align=center>To ChequeNo</DIV></TD>
           <td  width="35%"><DIV align=center>Received Date</DIV>
	<td  width="35%"><DIV align=center>Department</DIV>
            <td  width="35%"><DIV align=center>Is Exhausted</DIV>
			
			</td>

          </TR>
        <TR class="smallfieldcell" >
           <TD  exilRetainValue="true">
            <DIV><INPUT class=fieldinput-right id="fromChequeNo" style="WIDTH: 172px; HEIGHT: 22px"  size=35 name="fromChequeNo" exilDataType="exilUnsignedInt" ></DIV></TD>
          <TD  exilRetainValue="true">
            <DIV><INPUT class=fieldinput-right id="toChequeNo"  style="WIDTH: 172px; HEIGHT: 22px"  size=35 name="toChequeNo" exilDataType="exilUnsignedInt" ></DIV></TD>
            <td >
					<input name="ReceivedDate" class="smallfieldcell" id="ReceivedDate" style="WIDTH: 168px; HEIGHT: 19px"  onKeyDown ="addNewRow('chequetableGrid','fromChequeNo'); " onkeyup="DateFormat(this,this.value,event,false,'3')" exilDataType="exilAnyDate"  exilCalendar="true" >
			</td>
			<td align="left" width="260" class="smallfieldcell">
			<SELECT class="fieldinput" id="isAllottedTo" name="isAllottedTo" exilListSource="departmentNameList"  ></SELECT>
		</td>
			  	<td>
					<input type=checkbox name="isExh1" id="isExh1"  style="WIDTH: 20;" readOnly tabIndex="-1">
					<input type="hidden" name="isExh" id="isExh">

				</td>


			<input type="hidden" name="nxtChqNo" id="nxtChqNo">
			

            </TR></TABLE> -->
            </td>
            <tr>
		<tr class="row2">
			<td height="25" colspan="4" valign="bottom" class="smalltext" ><p class="smalltext"><span class="leadon">*</span>
			- Mandatory Fields</p>
			</td>
		</tr>

		<tr class="row2" >
			<td colspan="4" align="middle">
				<table border="0" cellpadding="0" cellspacing="0">
					<tr name="trModify" id="trModify">
	 						<td width=100% align=center>
		 						<input type="button"  id="revsave" value="Submit" class="button" onclick="ButtonPress('saveclose')"/>
		 						<input type="button" id="revclose" value="Cancel" class="button" onclick="onClickCancel();" />
		 						<input type="button" id="revclose" value="Close" class="button" onclick="window.close();" />
	 						</td>
					</tr>
					<tr name="trNew" id="trNew">
						 <td>
						 <input  id="savenNew" type="button" class="button" value="Save & New" onclick="ButtonPress('savenew');"/>
						 <input   type="button" class="button" value="Save & Close" onclick="return ButtonPress('saveclose');" />
						 <input   type="button" class="button" value="Cancel" onclick=onClickCancel(); />
						 <input   type="button" class="button" value="Close" onclick=window.close(); />
						 </td>
					</tr>

				</table>
			</td>
		</tr></TABLE>
</form>

</body>
</html>
