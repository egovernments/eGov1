#-------------------------------------------------------------------------------
# eGov suite of products aim to improve the internal efficiency,transparency, 
#      accountability and the service delivery of the government  organizations.
#   
#       Copyright (C) <2015>  eGovernments Foundation
#   
#       The updated version of eGov suite of products as by eGovernments Foundation 
#       is available at http://www.egovernments.org
#   
#       This program is free software: you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation, either version 3 of the License, or
#       any later version.
#   
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#   
#       You should have received a copy of the GNU General Public License
#       along with this program. If not, see http://www.gnu.org/licenses/ or 
#       http://www.gnu.org/licenses/gpl.html .
#   
#       In addition to the terms of the GPL license to be adhered to in using this
#       program, the following additional terms are to be complied with:
#   
#   	1) All versions of this program, verbatim or modified must carry this 
#   	   Legal Notice.
#   
#   	2) Any misrepresentation of the origin of the material is prohibited. It 
#   	   is required that all modified versions of this material be marked in 
#   	   reasonable ways as different from the original version.
#   
#   	3) This license does not grant any rights to any user of the program 
#   	   with regards to rights under trademark law for use of the trade names 
#   	   or trademarks of eGovernments Foundation.
#   
#     In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
#-------------------------------------------------------------------------------
<!doctype html public "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
	<head>
	<script language="javascript">
		 var discountName;
		 var discountCode;
		 var discountPc;
		 var noOfCess=0;
		 var cgn;
		 var editChq=0;
		 var sIndex,sValue,sText;
		 function showSplitUp(){
			 var tableObj=document.getElementById("calcTable");
			 //PageManager.DataService.callDataService("getSplitUpGrid");
			 tableObj.style.display="block";
			 tableObj=document.getElementById("debitList");
			 tableObj.style.display="block";
			 clearAmount();
			 calcSubTaxes(false);
			 var textObj=document.getElementById("splitText");
			 textObj.value="Refresh Splitup";
		 }
		 function clearContents()
		 {
		    document.getElementById('chequeDetail_chequeNumber').value="";
		    document.getElementById('chequeDetail_chequeDate').value="";
		    table=document.getElementById('chequeGrid');
		    row=table.rows.length;
		    for(var i=1;i<row;i++)
		    {
		      PageManager.DataService.getControlInBranch(table.rows[i],'chequeGrid_chequeNo').value="";
		      PageManager.DataService.getControlInBranch(table.rows[i],'chequeGrid_chequeAmount').value="";
		      PageManager.DataService.getControlInBranch(table.rows[i],'chequeGrid_chequeDate').value="";
		    }
		 }
		function disableChequeDetails()
		{
		   var modeOfCln=getSelectedRadioValue(document.getElementsByName('modeOfCollection'));

		   //var chqNo=document.getElementById('chequeDetail_chequeNumber');
		   //var chqDate=document.getElementById('chequeDetail_chequeDate');
		   var dbListObj=document.getElementById('debitList');
		   if(modeOfCln.toLowerCase()=="cash")
		   {
		   		clearContents();
				/*chqNo.removeAttribute("exilMustEnter");
				chqDate.removeAttribute("exilMustEnter");
			    chqNo.setAttribute("exilMustEnter",false);
			    chqDate.setAttribute("exilMustEnter",false);
			    chqNo.disabled=true;
			    chqDate.disabled=true;*/
			    chequeFieldTableDisable(true,true);
			    //hide a row in debitlist table
			    if(dbListObj.rows.length==4)
			    {
			    	dbListObj.rows[3].style.display='none';
					dbListObj.rows[2].style.display='block';
			    }
		   }
		   else if(modeOfCln.toLowerCase()=="others")
		   {
		   		clearContents();
			  /*  chqNo.disabled=false;
			    chqDate.disabled=false;
			    chqNo.removeAttribute("exilMustEnter");
				chqDate.removeAttribute("exilMustEnter");
				chqNo.setAttribute("exilMustEnter",true);
				if(modeOfCln.toLowerCase()=="cheque")
			      chqDate.setAttribute("exilMustEnter",true);*/
			      chequeFieldTableDisable(false,true);
			    //hide a row in debitlist table
   			    if(dbListObj.rows.length==4)
   			    {
					dbListObj.rows[3].style.display='block';
					dbListObj.rows[2].style.display='none';
			    }

		   }
		   else if(modeOfCln.toLowerCase()=="cheque")
		  {
		  		chequeFieldTableDisable(true,false);
		  		var sm=PageManager.DataService.getQueryField('showMode');
				if("edit"==sm.toLowerCase() && editChq==0)
				{
					editChq=2;
				   PageManager.DataService.addNewRow('chequeGrid');
				}
			    //hide a row in debitlist table
			    if(dbListObj.rows.length==4)
			    {
					dbListObj.rows[3].style.display='block';
					dbListObj.rows[2].style.display='none';
				}

		    }

		 }

		function chequeFieldTableDisable(fieldst,tablest)
		{
				var chqNo=document.getElementById('chequeDetail_chequeNumber');
		   		var chqDate=document.getElementById('chequeDetail_chequeDate');
				if(fieldst)
				{
					chqNo.removeAttribute("exilMustEnter");
					chqDate.removeAttribute("exilMustEnter");
				    chqNo.setAttribute("exilMustEnter",false);
				    chqDate.setAttribute("exilMustEnter",false);
				    chqNo.disabled=true;
				    chqDate.disabled=true;
				    document.getElementById('chqDet').style.display='none';
			    }
			    else
			    {
				    chqNo.removeAttribute("exilMustEnter");
					chqDate.removeAttribute("exilMustEnter");
				    chqNo.setAttribute("exilMustEnter",false);
				    chqDate.setAttribute("exilMustEnter",true);
				    chqNo.disabled=false;
				    chqDate.disabled=false;
				    document.getElementById('chqDet').style.display='block';
					//  chqNo.style.display='block';
				    //chqDate.style.display='block';
			    }
			    if(tablest)
			    {
			        document.getElementById('rowChequeGridLable').style.display ='none';
					document.getElementById('rowChequeGrid').style.display ='none';
					document.getElementById('rowTotalGrid').style.display ='none';
				}
				else
				{
					document.getElementById('rowChequeGridLable').style.display ='block';
					document.getElementById('rowChequeGrid').style.display ='block';
					document.getElementById('rowTotalGrid').style.display ='block';
				}
		}
		 function isRecordsFilled(){
		 	    var totalObj=document.getElementById("totalAmountF");
		 	     if(isNaN(totalObj.value)||totalObj.value<=0){
						alert("No Data to Post");
						return false;
	 			 }
				return true;
		 }
		 function chkPeriod()
		{
		   table=document.getElementById('voucherDetailsGrid');
		  for(var i=1;i<table.rows.length;i++)
		  {

		  	  rowObj=PageManager.DataService.getControlInBranch(table.rows[i]);
		  	  year=PageManager.DataService.getControlInBranch(table.rows[i],'period');
		  	   year=year.value;
		  	   amt=PageManager.DataService.getControlInBranch(table.rows[i],'mNetAmt').value;
		  	   if((amt!=null && amt!=0) && (year==null || year==""))
		  	   {
   				 	return 1;
		  	   }
		  	  for(var j=i+1;j<table.rows.length;j++)
		  	  {

				 var year2=PageManager.DataService.getControlInBranch(table.rows[j],'period');
				 year2=year2.value;
				// alert(year+"=="+year2);
				 if((year==year2) && (year!=null || year.value!=""))
			  	 	       return 2;

		      }
		  }
		  return 3;

		}
		 function ButtonPress(name)
		 {
		   if(!chkDate())
			 return false;
			if(name.toLowerCase()=='savenew')
			str="new";
			if(name.toLowerCase()=='saveclose')
			str="close";
		    var result=chkPeriod();
			 if(result==2)
			 {
				alert('Duplicate Periods are not allowed');
				return false;
			 }
			 else if(result==1)
			 {
				alert('Select the Period');
				return false;
			 }
		   var jvnum=document.getElementById('jv_voucherNumber').value;
		  // alert(jvnum);
			if(jvnum==null ||jvnum=="")
			{//alert("coming");
	   			vcObj=document.getElementById('voucherHeader_newCVcNo');
				vcObj.removeAttribute('exilMustEnter');

			}
			cgn=PageManager.DataService.getQueryField('cgNumber');
			exc=document.getElementById('modeOfExec').value;
			if(cgn && exc.toLowerCase()=='modify'){
			   var vDate=document.getElementById('voucherHeader_voucherDate').value;
			   var vdObj=document.getElementById('voucherHeader_effDate').value;


				if( compareDate(formatDateToDDMMYYYY1(vDate),formatDateToDDMMYYYY1(vdObj)) == -1 ){
						alert("Reversal date cannot be less than original Voucher date!");
						document.getElementById('voucherHeader_effDate').focus();
					}
				else{
						document.getElementById('modeOfExec').disabled=false;
						document.getElementById('voucherHeader_cgn').disabled=false;
						//document.getElementById('jv_voucherNumber').disabled=false;
						//document.getElementById('voucherHeader_voucherNumber').disabled=false;
						document.getElementById('tType').disabled=false;
						document.getElementById('rType').disabled=false;
						document.getElementById('cvType').disabled=false;
						PageManager.UpdateService.submitForm('propertyTaxField');
						//document.getElementById('jv_voucherNumber').disabled=true;
					}
			}
		  else
		   {
				var bCtrl=document.getElementById('collection_type');
				if(bCtrl.options[bCtrl.selectedIndex].value=='Bank' || bCtrl.options[bCtrl.selectedIndex].text=="")
				 {
		   		      var obj=document.getElementById('billCollector_id')
		   		      obj.removeAttribute("exilMustEnter");
		      	 }
				if(!PageValidator.validateForm())
					return false;

				if(!validateCheque()) return false;
	 			if(checkTotalAmount()==0) return false;
	 			if(checkNarration('voucherDetail_narration')==0)return false;
	 			if(!isRecordsFilled())return;
	 			var modeOfCln=getSelectedRadioValue(document.getElementsByName('modeOfCollection'));
	   		    if(modeOfCln.toLowerCase()=="cheque")
				if(!checkChequeDate("chequeDetail_chequeDate"))return;

	 	   		var dbDate=document.getElementById('databaseDate').value;
		   		var vhDate=document.getElementById('voucherHeader_voucherDate').value;
		   		if(compareDate(formatDateToDDMMYYYY1(vhDate),formatDateToDDMMYYYY1(dbDate)) == -1 )
		   		{
		   		alert('Voucher Date should be less than or equal to '+dbDate);
		   		document.getElementById('voucherHeader_voucherDate').focus();
		   		return false;
	 			}
	 			if(cgn && exc.toLowerCase()=='edit')
	 			{
	 				document.getElementById('modeOfExec').disabled=false;
					document.getElementById('voucherHeader_cgn').disabled=false;
					//document.getElementById('jv_voucherNumber').disabled=false;
					//document.getElementById('voucherHeader_voucherNumber').disabled=false;
					document.getElementById('tType').disabled=false;
					document.getElementById('rType').disabled=false;
					document.getElementById('cvType').disabled=false;
	 			}
			 	PageManager.UpdateService.submitForm('propertyTaxField');

			 }
		 }
		 function validateCheque()
		 {
		   var modeOfCln=getSelectedRadioValue(document.getElementsByName('modeOfCollection'));
			if(modeOfCln.toLowerCase()=="cheque")
			{
			  table=document.getElementById('chequeGrid');
		      row=table.rows.length;

			  for(k=1; k<row; k++)
			   {
					chequeAmount = eval(PageManager.DataService.getControlInBranch(table.rows[k],"chequeGrid_chequeAmount").value);
					chequeAmount = isNaN(chequeAmount)?0:chequeAmount;
					//chequeAmountTotal = chequeAmountTotal + chequeAmount;
					chqNo=PageManager.DataService.getControlInBranch(table.rows[k],"chequeGrid_chequeNo").value;
					if(chequeAmount>0 &&  chqNo.length== 0)
					{
						alert('Cheque Number is missing for row ' + (k));
						return false;
					}
					if(chqNo.length != 0 && chequeAmount.length == 0)
					{
					    alert('Amount is missing for Cheque Number ' + chqNo);
						return false;
					}
					if(chqNo.length != 0 && PageManager.DataService.getControlInBranch(table.rows[k],"chequeGrid_chequeDate").value.length == 0)
					{

					  alert('Date is missing for Cheque Number ' + chqNo);
						return false;
					}

			   }
			 }
			 return true;
		 }
		 function checkTotalAmount()
		 {
		 	    var table=document.getElementById("voucherDetailsGrid");
		 	    var chequeAmountTotal=0;
			    for(var i=1;i<table.rows.length;i++)
			    {
					var tObj=PageManager.DataService.getControlInBranch(table.rows[i],"totalAmount");
					var totalAmount=parseFloat(tObj.value);
					var penalty=parseFloat(PageManager.DataService.getControlInBranch(table.rows[i],"penalty").value);
					if(isNaN(totalAmount))totalAmount=0;
					if(isNaN(penalty))penalty=0;
					if(totalAmount<penalty)
					{
						alert("Total Amount Cannot be Less Than  penalty  In Record "+i);
						tObj.focus();
						return 0;
					}
			    }
			     var modeOfCln=getSelectedRadioValue(document.getElementsByName('modeOfCollection'));
			     if(modeOfCln.toLowerCase()=="cheque")
	   		    {
			if(document.journalVoucher.chequeGrid_chequeNo.value==''){
				alert('Enter Cheque Details');
				return false;
				}
			if(document.journalVoucher.chequeGrid_chequeNo.value){
			chequeAmountTotal = eval(document.journalVoucher.chequeGrid_chequeAmount.value);
					if(chequeAmountTotal>0 &&  document.journalVoucher.chequeGrid_chequeNo.value.length == 0){
						document.journalVoucher.chequeGrid_chequeNo.focus();
						alert('Cheque Number is missing for row ');
						return false;
					}
					if(document.journalVoucher.chequeGrid_chequeNo.value.length != 0 && document.journalVoucher.chequeGrid_chequeAmount.value.length == 0)
					{
					  document.journalVoucher.chequeGrid_chequeAmount.focus();
					  alert('Amount is missing for Cheque Number ');
						return false;
					}
					if(document.journalVoucher.chequeGrid_chequeNo.value.length != 0 && document.journalVoucher.chequeGrid_chequeDate.value.length == 0)
					{
					  document.journalVoucher.chequeGrid_chequeDate.focus();
					  alert('Date is missing for Cheque Number ');
						return false;
					}
			}
			else
			{
			  for(k=0; k<document.journalVoucher.chequeGrid_chequeAmount.length; k++)
			   {
					chequeAmount = eval(document.journalVoucher.chequeGrid_chequeAmount[k].value);
					chequeAmount = isNaN(chequeAmount)?0:chequeAmount;
					chequeAmountTotal = chequeAmountTotal + chequeAmount;
					if(chequeAmount>0 &&  document.journalVoucher.chequeGrid_chequeNo[k].value.length == 0){
						document.journalVoucher.chequeGrid_chequeNo[k].focus();
						alert('Cheque Number is missing for row ' + (k+1));
						return false;
					}
					if(document.journalVoucher.chequeGrid_chequeNo[k].value.length != 0 && document.journalVoucher.chequeGrid_chequeAmount[k].value.length == 0)
					{
					  document.journalVoucher.chequeGrid_chequeAmount[k].focus();
					  alert('Amount is missing for Cheque Number ' + document.journalVoucher.chequeGrid_chequeNo[k].value);
						return false;
					}
					if(document.journalVoucher.chequeGrid_chequeNo[k].value.length != 0 && document.journalVoucher.chequeGrid_chequeDate[k].value.length == 0)
					{
					  document.journalVoucher.chequeGrid_chequeDate[k].focus();
					  alert('Date is missing for Cheque Number ' + document.journalVoucher.chequeGrid_chequeNo[k].value);
						return false;
					}


			   }
			  }
				    chqTot=isNaN(document.getElementById("chequeAmountTotal").value)?0:parseFloat(document.getElementById("chequeAmountTotal").value);
				    var totalAmount=isNaN(document.getElementById('totalAmountF').value)?0:parseFloat(document.getElementById('totalAmountF').value);
				    if(totalAmount!=chqTot)
				    {
				      alert("Total Amount Received and  Total Cheque Amount must be Same ");
							return 0;
				    }
				}

				return 1;
		 }
		 function afterRefreshPage(dc)
		 {

				//if(dc.values['serviceID']=='ReceiptPropertyTaxData'){
				//var dbDate=dc.values['databaseDate'];

				//document.getElementById('databaseDate').value=formatDate3(dbDate);


				var cgn=PageManager.DataService.getQueryField('cgNumber');
	   		 	var sm=PageManager.DataService.getQueryField('showMode');
				if("getPTFDetails"==dc.values['serviceID'] && cgn && (sm=='edit'))
				{
				   var vnum=dc.values['voucherHeader_voucherNumber'];
				   var subVnum=vnum.substring(0,2);

				   var jvnum=dc.values['jv_voucherNumber'];
				   var subJvNum=jvnum.substring(0,2);
				   document.getElementById("voucherHeader_voucherNumber").value=vnum.substring(2,vnum.length);
				   document.getElementById("jv_voucherNumber").value=jvnum.substring(2,jvnum.length);
				   document.getElementById("jv").value=subJvNum;
		 		   document.getElementById("rp").value=subVnum;
		 		   if(document.getElementById("oldVoucherDate").value == "")
		 		   {
		 		   	document.getElementById("oldVoucherDate").value=dc.values['voucherHeader_voucherDate'];
		 		   }
		 		   //alert(document.getElementById("oldVoucherDate").value);
					var bkId=document.getElementById('bank_id').value;
					var brId = bkId.split('-');
					//alert(brId[1]);
					var accObj=document.getElementById('bankAccount_accountNumber');
					accObj.setAttribute("exilListSource","bankAccount_accountNumber");
					PageManager.DataService.setQueryField('bankAccount_branchId',brId[1]);

					//PageManager.DataService.callDataService('ptaccountNumber');
					 //bankChange(null);
					//alert(accObj.options[accObj.selectedIndex].text);
					//loadAccNoInEditMode(dc.values['bankAccount_accountNumber']);
					}


				var type=dc.values['collection_type']
				//alert("type"+type);
				if(type && "bank"==type.toLowerCase())
				{
					setBankOptions();
				}
				/*if("edit"==dc.values['showMode'])
				{//alert(dc.values['jv_voucherNumber']);
				   if(!(dc.values['jv_voucherNumber']==null || dc.values['jv_voucherNumber']==""))
				     document.getElementById('jv_voucherNumber').disabled=true
				}*/
				var countboundary=dc.values['noOfBoundaryLevels'];
				if(countboundary==1){
					var boundaryLevelId=dc.values['boundaryLevelId'];
					var boundaryTypeId=dc.values['boundaryTypeId'];
					PageManager.DataService.setQueryField('boundaryLevelId',boundaryLevelId);
					PageManager.DataService.setQueryField('boundaryTypeId',boundaryTypeId);
					PageManager.DataService.callDataService('DefaultChequeValue');
					PageManager.DataService.callDataService('DefaultCashValue');

				}
				var bonLen= document.getElementById('boundaryLevelId');
				if(bonLen.selectedIndex != -1 && bonLen.value.length>0) {
					if(document.getElementById('chequeInHand').value.length==0)
					document.getElementById('chequeInHand').value=dc.values['chequeinhand'];
					if(document.getElementById('chequeInHand').value.length==0)
					document.getElementById('cashInHand').value=dc.values['cashinhand'];

					}
				var dt=document.getElementById('databaseDate').value;
			     if(dt && (dc.values['serviceID']=='ReceiptPropertyTaxData' && dc.values['serviceID']!='getPTFDetails')){
		 			document.getElementById('voucherHeader_voucherDate').value=dt;

		 		}
				if(dc.values['serviceID']=='accountNumber'){
					document.getElementById('bankAccount_accountNumber').setAttribute('exilMustEnter','true');
				}
				if(dc.values['serviceID']=='rptDebitList' ){
					disableChequeDetails();
					calcSubTaxes(false);
					//alert(dc.values['ptFunctionId']);
					var ptFunctionId=dc.values['ptFunctionId'];
					if(ptFunctionId!=null && ptFunctionId!='' && ptFunctionId!='null')
					{
						PageManager.DataService.setQueryField('ptFunctionId',ptFunctionId);
						PageManager.DataService.callDataService('getFunctionName');
					}
					return;
				}
				if(dc.values['serviceID']!='getPTFDetails' && dc.values['serviceID']!='ReceiptPropertyTaxData')return;
				if(dc.values['serviceID']=='getPTFDetails' && dc.values['modeOfCollection']!=null && dc.values['modeOfCollection'].toLowerCase()=='cheque')
				{
				   if(dc.grids['chequeGrid'].length>0)
				   {
					   chequeFieldTableDisable(true,false);
					   calculatechqAmt();
					}
				}
				calculateTotal();

				if(dc.grids['debitList'] && dc.grids['debitList'].length==4){
						var dbListObj=document.getElementById('debitList');
						dbListObj.rows[3].style.display='none';
				}





				/*var modeAct=dc.values['modeOfCollection'];
				alert("modeAct#######"+modeAct);
		   		if(modeAct.toLowerCase()=="others"){

						var chequeDetail_chequeDate=dc.values['chequeDetail_chequeDate'];
						alert("chequedate before formate++++++"+chequeDetail_chequeDate);
						if(chequeDetail_chequeDate=="01-Jan-1900")
							{
								alert("inside if cond");
								document.getElementById('chequeDetail_chequeDate').value="";
							}
					}*/
				/*var voucherHeader_voucherDate=dc.values['voucherHeader_voucherDate'];
				if(voucherHeader_voucherDate){
					voucherDate=formatDate(voucherHeader_voucherDate);
					document.getElementById('voucherHeader_voucherDate').value=voucherDate;
				}
				var chequeDetail_chequeDate=dc.values['chequeDetail_chequeDate'];
				if(chequeDetail_chequeDate){
					chequeDetail_chequeDate=formatDate(chequeDetail_chequeDate);
					document.getElementById('chequeDetail_chequeDate').value=chequeDetail_chequeDate;
				}
				var vNum=dc.values['voucherHeader_voucherNumber'];
				if(vNum){
					var a=vNum.split("-");
					document.getElementById ('voucherHeader_voucherNumber').value=a[0];
				}

				var wID=dc.values['organizationStructure_id'];
				if(wID){
					var bCtrl=document.getElementById('billCollector_id');
					if(bCtrl.selectedIndex==-1)return;
					var text=bCtrl.options[bCtrl.selectedIndex].value;
					var wardObj=document.getElementById('organizationStructure_id');
					wardObj.setAttribute("exilListSource","organizationStructure_id");
					PageManager.DataService.setQueryField('billCollector_id',text);
					PageManager.DataService.setQueryField('billCollector_type','BillCollector');
					PageManager.DataService.callDataService('wardList');
				}*/

				if(!window.gridReArranged){
					/*discountName=dc.values['discountName'];
					discountCode=dc.values['discountCode'];
					discountPc=dc.values['discountPc'];*/
					reArrangeCalcTable();
					if(dc.values['serviceID']=='getPTFDetails'){
						calcSubTaxes(true);
				    }
				}
				if(window.hasQueryString)
				{
					window.hasQueryString=false	;
					if(PageManager.DataService.getQueryField("billCollectorId")!=null)
					{
						selectBillCollector();
					}
					//billCollectorChange();
				}
				if(dc.values['serviceID']=='ReceiptPropertyTaxData'){
				var dbDate=dc.values['databaseDate'];

			//	document.getElementById('databaseDate').value=formatDate3(dbDate);

				}
				if("getPTFDetails"==dc.values['serviceID'] && dc.values['modeOfCollection']=='Bank')
				{//alert("here");
				  var accObj=document.getElementById('bankAccount_accountNumber');
				  //alert(accObj.selectedIndex);
				  try{
					accntMod(accObj);
					}
					catch(err){}
				}

			//for non cess receipt make JV disable
			if(dc.values['serviceID']=='getPTFDetails' && dc.values['showMode']=='edit' && dc.values['jv_voucherNumber']=='')
			{
				document.getElementById("jv_voucherNumber").disabled=true;
				document.getElementById("jv_voucherNumber").removeAttribute("exilMustEnter");
			}
		 }

		  function loadAccNoInEditMode(accId)
				{	//alert(accId);
						//var table=dc.grids['bankAccount_accountNumber'];
						//var accNoGrid=table.split(',');
						//alert(dc.values['bankAccount_accountNumber']);
						accnoCombo=document.getElementById('bankAccount_accountNumber');
						//alert(accnoCombo.options.length);

						for(var i=1;i<accnoCombo.options.length;i++)
						{
							var temp=accnoCombo.options[i].text; //alert(temp);
							var accnoNarr=temp.split(' -- ');

							if(accnoCombo.options[i].value==accId)
							{
								accnoCombo.selectedIndex=i;
								sIndex=i;
								sText=temp;
								sValue=accnoCombo.options[i].value; //alert(sText);
								accntMod(accnoCombo);
								accnoCombo.options[i].text=accnoNarr[0];
								break;
							}

							//alert(accno[0]);


						}
				}


		 function selectBillCollector()
		 {
		    var billCollectorId=PageManager.DataService.getQueryField("billCollectorId");
			var bCtrl=document.getElementById('billCollector_id');
			for(var i=0;i<bCtrl.options.length;i++)
			{
				if(bCtrl.options[i].value==billCollectorId)
				{
						bCtrl.options[i].setAttribute("selected",true);
						window.hasQueryString=false;
						break;
				}
			}
		}
		 function beforeRefreshPage(dc)
		 {

			var tab=dc.grids['voucherDetailsGrid'];
			var cgn=PageManager.DataService.getQueryField('cgNumber');
			if(dc.values['modeOfCollection'] == 'Cheque')
			{
			   var gridObj=dc.grids['chequeGrid'];
			   for(var i=1;i<gridObj.length;i++)
				{
					gridObj[i][3]=formatDate2(gridObj[i][3]);
				}
			}

			/*if(tab && cgn){
				for(var i=1;i<tab.length;i++){
					tab[i][0]=tab[i][0]==-1?'':tab[i][0];
					tab[i][1]=tab[i][1]==-1?'':tab[i][1];
					tab[i][2]=tab[i][2]==-1?'':tab[i][2];
					tab[i][3]=tab[i][3]==-1?'':tab[i][3];
					tab[i][4]=tab[i][4]==-1?'':tab[i][4];
			    }
			}*/
			if(isNaN(parseInt(dc.values['voucherHeader_cgn']))) return;
			dc.values['voucherHeader_cgn']='PRF'+dc.values['voucherHeader_cgn'];
			dc.values['jv_cgn']='JVG'+dc.values['jv_cgn'];


		 }
		 function afterUpdateService(dc)
		 {
		 	disableControls(0,true);
		 	if(str=="new") {	window.location="PT_Field.htm?";
		 	return true; }
			if(str=="close") window.close()
		 }
		 function onClickCancel()
		{
				window.location="PT_Field.htm";
		}
		 function clearCombo(cId)
		 {
			var bCtr=document.getElementById(cId);

			//alert(bCtr.options.length-1);
			for(var i=bCtr.options.length-1;i>0;i--)
			{
				bCtr.remove(i);
			}
		 }
		 /*function billCollectorChange()
		 {
			clearCombo("organizationStructure_id");
			var bCtrl=document.getElementById('billCollector_id');
			if(bCtrl.selectedIndex==-1)return;
			var text=bCtrl.options[bCtrl.selectedIndex].value;
			var wardObj=document.getElementById('organizationStructure_id');
			wardObj.setAttribute("exilListSource","organizationStructure_id");
			PageManager.DataService.setQueryField('billCollector_id',text);
			PageManager.DataService.setQueryField('billCollector_type','BillCollector');
			PageManager.DataService.callDataService('wardList');
		 }*/

		 function getTotalPercent(index)
		 {
			var totalCombo=document.getElementById('inTotalCess');
			var countCombo=document.getElementById('inNoOfCess');
			var mainTable=document.getElementById('voucherDetailsGrid');
			var pObj=PageManager.DataService.getControlInBranch(mainTable.rows[index],"period");
			var totalPercent=-1;
			for(var i=0;i<totalCombo.options.length;i++)
			{
				if(totalCombo.options[i].value.toLowerCase()==pObj.value.toLowerCase())
					{
						totalPercent=parseInt(totalCombo.options[i].text);
						noOfCess=parseInt(countCombo.options[i].text);
						break;
					}
			}
		 	return totalPercent;
		 }


		function loadDrillData(cgn){
				PageManager.ListService.callListService();
				//var modOfCollection=PageManager.DataService.getQueryField('modeOfCollection');
				var calcObj=document.getElementById('calcTable');
				var debitListObj=document.getElementById('debitList');
				document.getElementById("billCollector_id").setAttribute('exilListSource',"billCollector_id"); ;
				document.getElementById("bankAccount_accountNumber").setAttribute("exilListSource","bankAccount_accountNumber");
				//document.getElementById("organizationStructure_id").setAttribute("exilListSource","billCollectorDetail_ward");
				var cgnType=cgn.substring(2,3);
				var serviceToCall="rptDrillDebitList";
				if(cgnType=='F'){
					PageManager.DataService.setQueryField('billCollector_type','BillCollector');
				}else if(cgnType=='O'){
					PageManager.DataService.setQueryField('billCollector_type','Counter');
				}else{
					setBankOptions();
					serviceToCall="rptDrillBankDebitList";
				}

		 		calcObj.style.display='block';
		 		debitListObj.style.display='block';
		 		PageManager.DataService.setQueryField('cgNumber',cgn);
		 		PageManager.DataService.callDataService(serviceToCall);
				PageManager.DataService.callDataService('getPTFDetails');
				hideButtons();

		}

		 function onloadTasks()
		 {
		 	PageManager.DataService.addNewRow('chequeGrid');
			//document.title="eGovernance";
			var dbListObj=document.getElementById('debitList');
		 	cgn=PageManager.DataService.getQueryField('cgNumber');
		 	var sm=PageManager.DataService.getQueryField('showMode');
		 	PageManager.DataService.setQueryField("fndName","General Fund");
		// 	PageManager.DataService.setQueryField("filter","Nationalised Banks");
		//	PageManager.DataService.setQueryField("conditionForBank","1");
		//	PageManager.DataService.setQueryField("accType1","Bank Account - Nationalised Banks - Collection");
		//	PageManager.DataService.setQueryField("accType2","Bank Account - Nationalised Banks - General");
			PageManager.ListService.callListService();

			if(cgn && (sm=="view")){
				/*var cgnType=cgn.substring(2,3)
				if(cgnType=='F'){
					PageManager.DataService.selectListValue(document.getElementById('collection_type'),'BillCollector');
				}
				if(cgnType=='O'){
					PageManager.DataService.selectListValue(document.getElementById('collection_type'),'Counter');
				}
				if(cgnType=='B'){
					PageManager.DataService.selectListValue(document.getElementById('collection_type'),'Bank');
				}
		 		dbListObj.style.display='none';
		 		PageManager.DataService.setQueryField('cgNumber',cgn);
		 		PageManager.DataService.setQueryField('billCollector_type','BillCollector');
 		 		PageManager.ListService.callListService();
				PageManager.DataService.callDataService('getPTFDetails');
				hideButtons();*/
				disableControls(0,true);
				PageManager.ListService.callListService();
				document.getElementById('boundarytableGrid').style.display="none";
				  document.getElementById('backbutton').style.display="block";
				document.getElementById('boundaryLevelId').removeAttribute('exilMustEnter');
				hidePercentageColumn();
				loadDrillData(cgn);
		 	 }
		 	 else  if(cgn && (sm=="modify")){
		 			disableControls(0,true);
					hidePercentageColumn();
					loadDrillData(cgn);
		            document.getElementById('modGrid').style.display='block';
		            document.getElementById('backbutton').style.display='none';
		            document.getElementById('voucherHeader_voucherNumber').setAttribute('exilDataType','exilAlphaNumeric');
		            document.getElementById('jv_voucherNumber').setAttribute('exilDataType','exilAlphaNumeric');
		            document.getElementById('boundarytableGrid').style.display="none";


		     }
		      else if(cgn && (sm=="edit")){
				loadDrillData(cgn);
				PageManager.DataService.callDataService('rptDebitList');
				document.getElementById('voucherHeader_voucherNumber').setAttribute('exilDataType','exilAlphaNumeric');
				document.getElementById('jv_voucherNumber').setAttribute('exilDataType','exilAlphaNumeric');
				document.getElementById('jv_voucherNumber').removeAttribute('exilMustEnter');
		  		document.getElementById('modGrid').style.display='none';
		  	 		document.getElementById('backbutton').style.display='none';
		  		var objBnd=document.getElementById('boundaryLevelId');
					objBnd.setAttribute("exilListSource","BoundaryLevelList");
					PageManager.DataService.callDataService('BoundaryLevelList');
		  		var mdcol=document.getElementById('TypeOfCollection').value;
		  			PageManager.DataService.addNewRow('chequeGrid');

				//alert("modofcollection  --"+document.getElementById('TypeOfCollection').value);
		  		if(mdcol!='Cash')
				{
					//alert("inside the modofcol cond"+mdcol);
					journalVoucher.chequeDetail_chequeNumber.disabled=false;
             		journalVoucher.chequeDetail_chequeDate.disabled=false;
				}
		  		//disableControls1(0,true);

		  		edit();
		 	 }else{
		 	 		PageManager.DataService.callDataService('rptDebitList');
		     		var vcNo=document.getElementById("voucherHeader_voucherNumber");
					var jvcNo=document.getElementById("jv_voucherNumber");
					jvcNo.focus();
//					vcNo.focus();
					window.gridReArranged=false;
					window.hasQueryString=false;
					if(window.location.search.indexOf("?")>=0)
						window.hasQueryString=true;
					hidePercentageColumn();
					setDefaults();
					PageManager.DataService.setQueryField('billCollector_type','BillCollector');
					PageManager.ListService.callListService();
					//if we need second cgn
					PageManager.DataService.setQueryField('hasSecondCGN','true');
					PageManager.DataService.callDataService('ReceiptPropertyTaxData');
					obj=document.getElementById('modGrid').style.display="none";
					  document.getElementById('backbutton').style.display="none";
					document.getElementById('submitGrid').style.display ="block";
					var objBnd=document.getElementById('boundaryLevelId');
					objBnd.setAttribute("exilListSource","BoundaryLevelList");
					PageManager.DataService.callDataService('BoundaryLevelList');

			}
		 }
		 function setDefaults()
		 {
			//var obj=document.getElementById('department_name');
			//obj.value=g_departmentName;
			//var obj=document.getElementById('function_name');
			//obj.value=g_functionName;
			obj=document.getElementById('fund_name');
			obj.value=g_fundName;
			obj=document.getElementById('fundSource_name');
			obj.value=g_fundSourceName;

		 }
		 function edit(){
				var cgn=PageManager.DataService.getQueryField('cgNumber');
		 		if(cgn){
		 			//document.forms[0].voucherHeader_cgn.disabled=true;
		 			//document.forms[0].voucherHeader_voucherNumber.disabled=true;
		 			document.getElementById("jv").style.display="block";
		 			document.getElementById("rp").style.display="block";
		 			document.getElementById('submitGrid').style.display ="none";
					document.getElementById('modeOfExec').value="edit";
					document.getElementById('reverseSubmit').style.display ="block";
					//enableControls(0,false);
		 	 	}
		}

		 function reArrangeCalcTable()
		 {
		 		window.gridReArranged=true;
		 		var taxtab=document.getElementById('calcTable');
		 		var oldFinYear=0;
				for(var i=1;i<taxtab.rows.length;i++)
				{
					var ctrl=PageManager.DataService.getControlInBranch(taxtab.rows[i],'recordType');
					if(ctrl.innerHTML.toLowerCase()=='p')
					{
						finYear=PageManager.DataService.getControlInBranch(taxtab.rows[i],'periodC').innerHTML;
						var incr=addAccHeads(i,oldFinYear);
						i+=incr;
						oldFinYear=finYear;
					}
				}
				addCodes();
				addTotalRow(0,-1);
		 }

		 function addCodes()
		 {
				var k=0;
				var taxtab=document.getElementById('calcTable');
				for(var i=1;i<taxtab.rows.length;i++)
				{
					var ctrl=PageManager.DataService.getControlInBranch(taxtab.rows[i],'recordType');
					switch(ctrl.innerHTML.toLowerCase())
					{
						case "p" :/*var ctrl=PageManager.DataService.getControlInBranch(taxtab.rows[i],'accCode');
									  ctrl.innerHTML=g_propertyTaxCodes[k];
									  ctrl=PageManager.DataService.getControlInBranch(taxtab.rows[i],'accDesc');
									  ctrl.innerHTML=g_propertyTaxNames[k];*/
									  break;
						case "pt" :var ctrl=PageManager.DataService.getControlInBranch(taxtab.rows[i],'accCode');
									  ctrl.innerHTML=g_penaltyCode;
									  ctrl=PageManager.DataService.getControlInBranch(taxtab.rows[i],'accDesc');
									  ctrl.innerHTML=g_penaltyName;
									  break;
					   case  "c":var ctrl=PageManager.DataService.getControlInBranch(taxtab.rows[i],'periodC');
								 ctrl.innerHTML="";
								 break;
					}

				}
		 }
		 function clearAll(newRow)
		 {
			ctl=PageManager.DataService.getControlInBranch(newRow,"periodC");
			ctl.innerHTML="";
			ctl=PageManager.DataService.getControlInBranch(newRow,"accCode");
			ctl.innerHTML="";
			ctl=PageManager.DataService.getControlInBranch(newRow,"accDesc");
			ctl.innerHTML="";
			ctl=PageManager.DataService.getControlInBranch(newRow,"percentC");
			ctl.innerHTML="";
			ctl=PageManager.DataService.getControlInBranch(newRow,"fAmount");
			ctl.innerHTML="";
			ctl=PageManager.DataService.getControlInBranch(newRow,"recordType");
			ctl.innerHTML="";
		 }
		 function addAccHeads(index,finYear)
		 {
			var taxtab=document.getElementById('calcTable');
			var tBody=taxtab.tBodies[0];
			var newRow=taxtab.rows[1].cloneNode(true);
			tBody.appendChild(newRow);
			clearAll(newRow);
			var ctl=PageManager.DataService.getControlInBranch(newRow,"accDesc");
			ctl.innerHTML="Penalty";
			ctl=PageManager.DataService.getControlInBranch(newRow,"recordType");
			ctl.innerHTML="Pt";
			taxtab.moveRow(taxtab.rows.length-1,index+1);//index+2


			if(index>1)
			{
				if(addTotalRow(index,finYear)){
					return 3;//3 rows(penalty+rebate+total)
				}else{
					return 2;//2 rows(penalty+total)
				}
			}
			return 1;////1 row(penalty)
		 }
		 function addTotalRow(index,finYear)
		 {
				var newRowIdx=index;
				var taxtab=document.getElementById('calcTable');
				var tBody=taxtab.tBodies[0];
				var newRow=taxtab.rows[1].cloneNode(true);
				var hasDiscount=false;
				if(finYear!=0){
					hasDiscount=getDiscountCodes(finYear);
				}
				var ctl=null;
				if(hasDiscount){
					tBody.appendChild(newRow);
					clearAll(newRow);
					ctl=PageManager.DataService.getControlInBranch(newRow,"accDesc");
					ctl.innerHTML=discountName;
					ctl=PageManager.DataService.getControlInBranch(newRow,"accCode");
					ctl.innerHTML=discountCode;
					ctl=PageManager.DataService.getControlInBranch(newRow,"percentC");
					ctl.innerHTML="0";
					ctl=PageManager.DataService.getControlInBranch(newRow,"recordType");
					ctl.innerHTML="D";
					if(index>0)
						taxtab.moveRow(taxtab.rows.length-1,newRowIdx++);
				}
				newRow=taxtab.rows[1].cloneNode(true);
				tBody.appendChild(newRow);
				clearAll(newRow);
				ctl=PageManager.DataService.getControlInBranch(newRow,"accDesc");
				ctl.innerHTML="Total Cess";
				ctl=PageManager.DataService.getControlInBranch(newRow,"recordType");
				ctl.innerHTML="T";
				ctl=PageManager.DataService.getControlInBranch(newRow,"percentC");
				ctl.innerHTML="0";
				if(index>0)
					taxtab.moveRow(taxtab.rows.length-1,newRowIdx);
				if(hasDiscount){
				  return true;
				}
				return false;
		}
		function clearAmount()
		{
		    var taxtab=document.getElementById('calcTable');
			for(var i=1;i<taxtab.rows.length;i++)
			{
			   var amount=PageManager.DataService.getControlInBranch(taxtab.rows[i],"fAmount");
			   amount.innerHTML="";
			}
		}
		  function calcSubTaxes(dbUpdate)
		  {

				var maintab=document.getElementById('voucherDetailsGrid');
				var taxtab=document.getElementById('calcTable');
				var year,inYear,percent,tempYear;
				var totCess=0,prpCess=0,enteredAmt=0;
				var prTaxPos=0;
				var penalty;
				var receivableDebit=0,journalDebit=0;
				for(var i=1;i<maintab.rows.length;i++)
				{
					 var totalPercent=getTotalPercent(i);
					 year=PageManager.DataService.getControlInBranch(maintab.rows[i],'period').value;
					 penalty= parseFloat(PageManager.DataService.getControlInBranch(maintab.rows[i],'penalty').value);
					 tmtAmt=parseFloat(PageManager.DataService.getControlInBranch(maintab.rows[i],'totalAmount').value);
					 if(isNaN(tmtAmt))tmtAmt=0;
					 if(isNaN(penalty))penalty=0;
					 receivableDebit+=tmtAmt;
					 enteredAmt=tmtAmt-penalty;
					 if(totalPercent==-1){
						for(var j=1;j<taxtab.rows.length;j++){
							tempYear=PageManager.DataService.getControlInBranch(taxtab.rows[j],'periodC').innerHTML;
							 inYear=tempYear;
							if(inYear==year)
							{
								var rPropertyTax=enteredAmt.toFixed(2);
					 			var rPenalty=penalty.toFixed(2);
								taxtab.rows[j].cells[4].childNodes[0].innerHTML=rPropertyTax.toString();
								taxtab.rows[j+1].cells[4].childNodes[0].innerHTML=rPenalty.toString();
								break;
							}
						}
						continue;
					 }
					 //formula used  --   actAmnt=entered amount * 100/(100+totalpercent)
					 //formula used  --   totalcess=(entered amount*totalpercent) /(100+totalpercent)

					 totCess=(enteredAmt*totalPercent)/(100+totalPercent);

					 if(isNaN(enteredAmt)||enteredAmt<=0)
					 {
						 	totCess=0;
						 	enteredAmt=0;
					 }
					 var l_discountPc=0;
					 for(var j=1;j<taxtab.rows.length;j++)
					 {
						tempYear=PageManager.DataService.getControlInBranch(taxtab.rows[j],'periodC').innerHTML;
						if(tempYear.length>=1)
						 inYear=tempYear;
						if(inYear==year)
						{
							if(prTaxPos==0)prTaxPos=j;//when ever pt is calculated for new year that lilne has index for pt amount
							l_discountPc=parseFloat(getDiscountPercent(inYear));
							percent=totCess*(parseFloat(PageManager.DataService.getControlInBranch(taxtab.rows[j],'percentC').innerHTML) *(100-l_discountPc))/(totalPercent*100);
							if(!isNaN(percent))
							{

								prpCess+=parseFloat(percent.toFixed(2));
								percent=percent.toFixed(2);
								taxtab.rows[j].cells[4].childNodes[0].innerHTML=percent.toString();
							}
						}
					 }
					 if(prTaxPos==0)continue;
					 //pt is calculated from entered amount - total cess as actAmnt might give paise differences

					 if(!isNaN(enteredAmt-prpCess))
					 {
						 var discountAmount=(totCess*l_discountPc)/100;
					 	 if(isNaN(discountAmount))discountAmount=0;
					 	 var rPropertyTax=enteredAmt.toFixed(2);
					 	 var rPenalty=penalty.toFixed(2);
					 	 var rTotalAmt=((parseFloat(rPropertyTax)+prpCess+parseFloat(rPenalty))).toFixed(2);
						 var rTotCess=totCess.toFixed(2);
						 var rPrpCess=prpCess.toFixed(2);
						 var rDiscount=discountAmount.toFixed(2);
						var creditAmount=parseFloat(rPrpCess)+parseFloat(rDiscount);
						var debitAmount=rTotCess;
						var orgPT=0;
						var totalIndex=2;
						if(creditAmount!=debitAmount){
							if((creditAmount-debitAmount)<1 &&  (creditAmount-debitAmount)>0){
								orgPT=parseFloat(rTotCess)+(creditAmount-debitAmount);
							}else if((debitAmount-creditAmount)<1 &&  (debitAmount-creditAmount)>0){
								orgPT=parseFloat(rTotCess)-(debitAmount-creditAmount);
							}
							rTotCess=orgPT.toFixed(2);
						}

						 taxtab.rows[prTaxPos].cells[4].childNodes[0].innerHTML=rPropertyTax.toString();
						 taxtab.rows[prTaxPos+1].cells[4].childNodes[0].innerHTML=rPenalty.toString();
						 if(discountAmount>0){
							taxtab.rows[prTaxPos+noOfCess+2].cells[4].childNodes[0].innerHTML=discountAmount.toFixed(2);
							//if this row is not there then total will be 1 line before else increment it
							totalIndex++;
						 }

						 if(totCess>0){
							taxtab.rows[prTaxPos+noOfCess+totalIndex].cells[4].childNodes[0].innerHTML=rTotCess;//(prpCess+discountAmount).toFixed(2)
						 }
					 }
					 journalDebit+=prpCess+parseFloat(discountAmount.toFixed(2));
					 prTaxPos=0;//reset position of property tax  amount field
					 prpCess=0;
			  }
			  if(!dbUpdate){
				setDebitAmounts(receivableDebit,journalDebit);
			  }
			}
		function setDebitAmounts(receivableDebit,journalDebit){
			var dbListObj=document.getElementById('debitList');
			var dbAmtObj=PageManager.DataService.getControlInBranch(dbListObj.rows[1],'display_debitAmt');
			var dbType=PageManager.DataService.getControlInBranch(dbListObj.rows[1],'type').value;
			if(dbType.toLowerCase()=='cess'){
				dbAmtObj.value=journalDebit.toFixed(2);
			}else{
				dbAmtObj.value=receivableDebit.toFixed(2);
			}
			for(var i=2;i<4;i++){
				dbAmtObj=PageManager.DataService.getControlInBranch(dbListObj.rows[i],'display_debitAmt');
				if(dbAmtObj){
					dbAmtObj.value=receivableDebit.toFixed(2);
				}
			}
		}
		
function colAllTotalnew(objname1,objname2,target1,target2)
{	
	
	var a = document.getElementsByName(objname1);
	count = 0;
	for(var i = 0; i<=a.length -1;i++) if(a[i].value)
		count += parseFloat(a[i].value);
		count=Math.round(count*100)/100 ;
		document.getElementById(target1).value = count;
		
	var b = document.getElementsByName(objname2);
	count = 0;
	for(var i = 0; i<=b.length -1;i++) if(b[i].value)
		count += parseFloat(b[i].value);
		count=Math.round(count*100)/100 ;
		document.getElementById(target2).value = count;
	    calculateTotal();	
	
	
 }
		 function calculateTotal()
		 {
		 	var table=document.getElementById("voucherDetailsGrid");
			var totalAmountCell;
			var tAmountObj,tPenaltyObj;
			var tAmount=0,tPenalty=0,tNet=0,temp;
			var iAmount=0,iPenalty=0;
			tAmountObj=document.getElementsByName('totalAmount');
			tPenaltyObj=document.getElementsByName('penalty');
			tNetObj=document.getElementsByName('mNetAmt');
			for(var i=0;i<tAmountObj.length;i++)
			{
				temp=parseFloat(tAmountObj[i].value);
				if(isNaN(temp)){
					iAmount=0;
				}else{
					tAmount+=temp;//sum of all rows
					iAmount=temp;//for net amt ;individual row
				}
				temp=parseFloat(tPenaltyObj[i].value)
				if(isNaN(temp)){
					iPenalty=0;
				}else{
					tPenalty+=temp;
					iPenalty=temp;
				}
				tNetObj[i].value=Math.round((iAmount-iPenalty)*100)/100;
				tNet+=iAmount-iPenalty;
			}
			tAmountObj=document.getElementById('totalAmountF');
			if(!isNaN(tAmount)) {
			tAmount=Math.round(tAmount*100)/100 ;
			tAmountObj.value=tAmount;
			}

			tPenaltyObj=document.getElementById('penaltyF');
			if(!isNaN(tPenalty)) {
			tPenalty=Math.round(tPenalty*100)/100 ;
			tPenaltyObj.value=tPenalty;}

			tNetObj=document.getElementById('mNetAmtF');
			if(!isNaN(tNet)) {
			tNet=Math.round(tNet*100)/100 ;
			tNetObj.value=tNet;}
			//calcSubTaxes(PageManager.DataService.getRow(obj).rowIndex);
		 }

		 function hidePercentageColumn()
		 {
		 	var tblObj = document.getElementById('calcTable');
		    var rows = tblObj.rows;
		    for(i=0;i<rows.length;i++)
			{
				var cols = rows[i].cells;
				cols[3].style.display='none';
				cols[5].style.display='none';
        	}
		 }



		function disableControls(frmIndex, isDisable){
			for(var i=0;i<document.forms[frmIndex].length;i++)
			{
				document.forms[frmIndex].elements[i].disabled =isDisable;
				if(PageManager.DataService.getQueryField('showMode')=='view' && 
					document.forms[frmIndex].elements[i].parentNode.parentNode.getAttribute('id')=='backbutton')
					document.forms[frmIndex].elements[i].disabled =false;
				if(PageManager.DataService.getQueryField('showMode')=='modify' 
						&& (document.forms[frmIndex].elements[i].parentNode.parentNode.getAttribute('id')=='modGrid' ||
						 document.forms[frmIndex].elements[i].parentNode.parentNode.getAttribute('id')=='reverseSubmit' ))
					document.forms[frmIndex].elements[i].disabled =false;
			}
		}
		function reverse(){
						removeMandatory();
						document.getElementById('reverseRecord').style.display='block';
						document.getElementById('reverseSubmit').style.display='block';
						var vcObj=document.getElementById('voucherHeader_newVcNo');
						vcObj.setAttribute('exilMustEnter','true');
						vcObj.disabled=false;
						vcObj=document.getElementById('voucherHeader_newCVcNo');
						vcObj.setAttribute('exilMustEnter','true');
						vcObj.disabled=false;
						//var vDate=document.getElementById('voucherHeader_voucherDate');
						var vdObj=document.getElementById('voucherHeader_effDate');

						vdObj.setAttribute('exilMustEnter','true');
						vdObj.disabled=false;
						document.getElementById('modeOfExec').value="modify";
		}
		function removeMandatory(){
			var frm = document.forms[0];
			for(var i=0; i<frm.elements.length; i++){
				var ele = frm.elements[i];
				ele.removeAttribute('exilMustEnter');
			}
		}


		function hideButtons(){
			document.getElementById('modGrid').style.display='none';
			document.getElementById('submitGrid').style.display ="none";
			//document.getElementById ('text1').style.display ="none";
		}
		function  selectRadio(eleName,val){
			var ele;
			var eles = document.getElementsByName(eleName);
			for(var i=0;  i< eles.length; i++){
				ele = eles[i];
				if(ele.value == val) ele.checked = true;
				else ele.checked = false;
			}
		}
		function hideChequeRows(hideOrShow){
				document.getElementById('cashOrChq').style.display=hideOrShow;
				document.getElementById('chqDet').style.display=hideOrShow;
				if(hideOrShow=='none'){
					selectRadio('modeOfCollection','Cash')
					disableChequeDetails();
					document.getElementById('chequeDetail_chequeNumber').value="";
					document.getElementById('chequeDetail_chequeDate').value="";
				}
		}
		function loadBillCollectors(obj){
			clearCombo('billCollector_id');
			PageManager.DataService.removeQueryField('billCollector_id');
			if(obj.selectedIndex==-1)return;
			var val=obj.options[obj.selectedIndex].value;
			if(!val || val.length==0) return;
			var bankObj=document.getElementById('bank_id');
			var bankAccObj=document.getElementById('bankAccount_accountNumber');
			var bRow=document.getElementById('bankRow');
			var bObj=document.getElementById('billCollector_id');
			var bLabelObj=document.getElementById('billLabel');
			bLabelObj.style.display="block";
			bObj.style.display="block";
			if(val.toLowerCase()=='bank'){
				setBankOptions();
				return;
			}else if(val.toLowerCase()=='counter'){
				hideChequeRows('block');
				changeCGNO('PRO');
			}else {
				hideChequeRows('block');
				changeCGNO('PRF');
			}
			bRow.style.display='none';
			bankObj.removeAttribute('exilMustEnter');
			bankAccObj.removeAttribute('exilMustEnter');
			bObj.setAttribute('exilMustEnter','true');
			bObj.setAttribute('exilListSource',"billCollector_id");
			PageManager.DataService.setQueryField("billCollector_type",val);
			PageManager.DataService.callDataService('billCollAndWard');
			PageManager.DataService.callDataService('rptDebitList');
		}
		function setBankOptions(){
				var bankObj=document.getElementById('bank_id');
				var bObj=document.getElementById('billCollector_id');
				var bLabelObj=document.getElementById('billLabel');
				var bRow=document.getElementById('bankRow');
				bRow.style.display='block';
				bObj.removeAttribute('exilMustEnter');
				bLabelObj.style.display="none";
				bObj.style.display="none";
				hideChequeRows('none');
				bankObj.setAttribute('exilMustEnter','true');
				changeCGNO('PRB');
				//getBCWards(null);
		}
		 function bankChange(brId)
		 {
			//select accountnumber from bankaccount where branchid=id
			if(brId==null)
			{	sIndex=null;
				var bCtrl=document.getElementById('bank_id');
				if(bCtrl.selectedIndex==-1)return;
				var text=bCtrl.options[bCtrl.selectedIndex].value;
				if(!text || text.length==0)return;
				var index=text.indexOf("-");
				brId=text.substring(index+1,text.length);

			}
			clearCombo("bankAccount_accountNumber");
			var accObj=document.getElementById('bankAccount_accountNumber');
			accObj.setAttribute("exilListSource","bankAccount_accountNumber");
			PageManager.DataService.setQueryField('bankAccount_branchId',brId);
			//PageManager.DataService.setQueryField("accType1","Bank Account - Nationalised Banks - Collection");
			//PageManager.DataService.setQueryField("accType2","Bank Account - Nationalised Banks - General");
		 	PageManager.DataService.callDataService('ptaccountNumber');
		 }
		 function getBankDebitList(obj){
			if(obj.selectedIndex==-1)return;
			accntMod(obj);
			var val=obj.options[obj.selectedIndex].value;
			if(!val || val.length==0)return;
			var dbListObj=document.getElementById('debitList');
			//dbListObj.rows[2].style.display='block';
			dbListObj.style.display='block';
			PageManager.DataService.setQueryField('debitList_accID',val);
			PageManager.DataService.callDataService('rptBankDebitList');
		 }

	    function accntMod(obj)
		{	//alert("inside accntmod ....");
			if(obj.selectedIndex==-1)
			 return;
			// alert("account no:"+document.getElementById('bankAccount_accountNumber').value);
			if(sIndex!=null)
			{
					document.forms[0].bankAccount_accountNumber.options[sIndex]= new Option(sText,sValue);
			}

			var text=obj.options[obj.selectedIndex].innerHTML;
		    var temp=text.split(" -- ");
			sIndex=obj.selectedIndex;
			sValue=obj.options[obj.selectedIndex].value;
			sText=text;
			if(!temp[1])
		      temp[1]=" ";

			 document.getElementById("acc_Desc").value=temp[1];
		   if(temp[1]!=null && temp[1]!="")
		   {//alert(temp[0]);
		     obj.options[obj.selectedIndex].text=temp[0];
		     //document.getElementById("acc_Desc").value=temp[1];
		   }
		}


		 function changeCGNO(prefix){
			var obj=document.getElementById('voucherHeader_cgn');
			var objVal=obj.value;
			objVal=objVal.substring(3,objVal.length)
			obj.value=prefix+objVal;

		 }

		 function getDiscountCodes(finYear){
			var discTable=document.getElementById("discountTable");
			for(var i=1;i<discTable.rows.length;i++){
				if(PageManager.DataService.getControlInBranch(discTable.rows[i],"fnID").value==finYear){
					discountName=PageManager.DataService.getControlInBranch(discTable.rows[i],"c_discountName").value;
					discountCode=PageManager.DataService.getControlInBranch(discTable.rows[i],"c_discountCode").value;
					discountPc=PageManager.DataService.getControlInBranch(discTable.rows[i],"c_discountPc").value;
					return true;
				}
			}
			return false;
		 }
		  function getDiscountPercent(finYear){
			var discTable=document.getElementById("discountTable");
			for(var i=1;i<discTable.rows.length;i++){
				if(PageManager.DataService.getControlInBranch(discTable.rows[i],"fnID").value==finYear){
					return PageManager.DataService.getControlInBranch(discTable.rows[i],"c_discountPc").value;
				}
			}
			return 0;
		 }
		/* function getBCWards(bCtrl){
			if(bCtrl){
				if(bCtrl.selectedIndex==-1)return;
				var text=bCtrl.options[bCtrl.selectedIndex].value;
				if(!text || text.length==0)return;
				PageManager.DataService.setQueryField('billCollector_codeToSearch',text);
			}else{
				PageManager.DataService.removeQueryField('billCollector_codeToSearch');
			}
			clearCombo("organizationStructure_id");
			var obj=document.getElementById('organizationStructure_id');
			obj.setAttribute("exilListSource","billCollectorDetail_ward");
			PageManager.DataService.callDataService('wardOnBC');
		 }*/
		 function getCashChequeInHand(obj){

			var val=obj.options[obj.selectedIndex].value;
			var bonLen= document.getElementById('boundaryLevelId');
			if(bonLen.selectedIndex != -1 && bonLen.value.length>0) {

			PageManager.DataService.setQueryField("boundaryLevelId",val);
			PageManager.DataService.callDataService('CashChequeValues');
			}
		}
		function fillDate(obj){
		PageValidator.showCalendar('selectedDate');
		row = PageManager.DataService.getRow(obj);
		table = document.getElementById('chequeGrid');
		ctrl = PageManager.DataService.getControlInBranch(table.rows[row.rowIndex], 'chequeGrid_chequeDate');
		ctrl.value = document.getElementById('selectedDate').value;
		document.getElementById('selectedDate').value = "";
	}
	function calculatechqAmt()
	{
	  tab=document.getElementsByName('chequeGrid_chequeAmount');
	  totAmt=0*1;
	  for(i=0;i<tab.length;i++)
	  {
	     temp=tab[i].value==""?0:parseFloat(tab[i].value);
	     totAmt=temp+parseFloat(totAmt);
	  }
	  totAmt=Math.round(totAmt*100)/100 ;
	  document.getElementById('chequeAmountTotal').value=totAmt;
	}
	function checkForModify(obj)
	{
	    dt=obj.value;
	     var test=dt.split("/");
	    for(var i=0;i<2 && (test[0]!=null && test[0]!="");i++)
	    {
	    	if(test[i].length>2)
	    	{
	    	  alert("invalid date..");
	    	  obj.value='';
	    	  return;
			}
	    }
	    dt=formatDateToDDMMYYYY2(dt);
		if(!dateValid(dt))
		{
		   alert('Invalid Date..');
		   obj.value='';
		   return;
		}
		var today=document.getElementById('databaseDate').value;
			if(today==null || today=='')
			{
			  today=document.getElementById('voucherHeader_voucherDate').value;
			}
			var splits=today.split("/");
			var currYr=splits[2]-5;
			var arr = dt.split("/");
			yr = arr[2];
			if(currYr>yr )
			{
			 alert('Enter Valid Year ');
			 obj.value='';
			 return false;
			}
			if((currYr+5)<yr )
			{
			 alert('Enter Valid Year ');
			 obj.value='';
			 return false;
			}
	}
	function addNewRowButton()
{
		var table1=document.getElementById('voucherDetailsGrid');
		var len = table1.rows.length;
		for(i=1;i<len;i++)
		{
		    var Amount=PageManager.DataService.getControlInBranch(table1.rows[i],'totalAmount').value;
		    var year=PageManager.DataService.getControlInBranch(table1.rows[i],'period').value;
		    if(!Amount || !year)
			{
			  //alert("Amount Received and Period should not be empty");
			  return false;
			}
		}
		var index, inIndex, rowLength;
		var table = document.getElementById('voucherDetailsGrid');
		if(!table || !table.rows) return false;
		table.removeAttribute("rowsToClone");
		rowLength = table.rows.length;
		var result=addNewRow('voucherDetailsGrid','period,totalAmount');
		if(!result)return false;
		PageManager.DataService.getControlInBranch(table.rows[rowLength],'totalAmount').value="";
		PageManager.DataService.getControlInBranch(table.rows[rowLength],'penalty').value="";
		PageManager.DataService.getControlInBranch(table.rows[rowLength],'period').value="";
		PageManager.DataService.getControlInBranch(table.rows[rowLength],'period').removeAttribute('exilMustEnter');
		PageManager.DataService.getControlInBranch(table.rows[rowLength],'mNetAmt').value="";
		return true;
}
function chkDate()
   {
        var table=document.getElementById('chequeGrid');
        for(i=1;i<table.rows.length;i++)
        {
	   		var dt1=PageManager.DataService.getControlInBranch(table.rows[i],'chequeGrid_chequeDate');
	   		var dt=dt1.value;
	   		var chq=PageManager.DataService.getControlInBranch(table.rows[i],'chequeGrid_chequeNo').value;
	   		if(chq==null || chq=='')
	   		  continue;
			dt=formatDateToDDMMYYYY2(dt);
			var today=document.getElementById('databaseDate').value;
			if(today==null || today=='')
			{
			  today=document.getElementById('voucherHeader_voucherDate').value;
			}
			var splits=today.split("/");
			var currYr=splits[2]-5;
			var arr = dt.split("/");
			yr = arr[2];
			if(currYr>yr )
			{
			 alert('Enter Valid Year for cheque No: '+chq);
			 return false;
			}
			if(!dateValid(dt))
			{
			   alert('Enter Valid cheque Date for cheque No: '+chq);
			   return false;
			}
			if((currYr+6)<yr )
			{
			 alert('Enter Valid Year for cheque No: '+chq);
			 return false;
			}
		}
		return true;
   }

function clearRow()
{
		var tableObj=document.getElementById('voucherDetailsGrid');
		var tempObj=null;
		var rowIdx=tableObj.rows.length-1;
		tempObj=PageManager.DataService.getControlInBranch(tableObj.rows[rowIdx],"period");
		tempObj.selectedIndex=-1;
		tempObj=PageManager.DataService.getControlInBranch(tableObj.rows[rowIdx],"totalAmount");
		tempObj.value="";
		tempObj=PageManager.DataService.getControlInBranch(tableObj.rows[rowIdx],"penalty");
		tempObj.value="";
		tempObj=PageManager.DataService.getControlInBranch(tableObj.rows[rowIdx],"mNetAmt");
		tempObj.value="";
}

/* function addNarration()
 {
 	//alert("hh..");
 	var sm=PageManager.DataService.getQueryField('showMode');
	if((sm=='edit'))
		{
			accntMod(document.getElementById('bankAccount_accountNumber'));
		}
 }*/

 </script>
	</head>
	<body bgcolor="#ffffff" bottommargin="0" topmargin="0" rightmargin="0" leftmargin="0"
		 marginheight="0" marginwidth="0" onLoad="onloadTasks();PageValidator.addCalendars();" onKeyDown ="CloseWindow(event); "><!------------------ Header Begins Begins--------------------->
	 <!-- table><tr><td><div id="main"><div id="m2"><div id="m3" -->
		<form name="journalVoucher" method="get" >
			<input  type="hidden" id="glCode" name="glCode">
			<input type=hidden id="modeOfExec" name="modeOfExec" value="new">
			<input type="hidden" name="tType" id="tType" value="R">
			<input type="hidden" name="rType" id="rType" value="P">
			<input type="hidden" name="cvType" id="cvType" value="J">
			<input type="hidden" name="jv_id" id="jv_id">
			<table width="100%" border="0" cellpadding="0" cellspacing="0">
			<input type="hidden" name="voucherHeader_id" id="voucherHeader_id">
			<input type="hidden" name="TypeOfCollection" id="TypeOfCollection">
			<input type="hidden" name="oldVoucherDate" id="oldVoucherDate">
			<table width="100%">
				<tr>
					<td valign="top" class="normaltext"><!------------Content begins here ------------------>
						<table width="100%" border="0" cellpadding="3" cellspacing="0">
							<TBODY>
								<tr  style="DISPLAY: none">
									<td width="20%" ><div align="right" valign="center" class="labelcell"> Cess CG&nbsp;Number</div>
									</td>
									<td >
									<input name="jv_cgn" class="fieldinput" id="jv_cgn"


            readOnly maxLength=10 tabIndex=-1>
									</td>
									<td width="15%" ><div align="right" valign="center" class="labelcell">CGN</div>
									</td>
									<td width="39%" >
												<input name="voucherHeader_cgn" class="fieldinput" id="voucherHeader_cgn"


            readOnly maxLength=10 tabIndex=-1>


					</td>
				</tr>

				<tr >
									<td><div align="right" valign="center" class="labelcell"> Journal&nbsp;Voucher No<SPAN
          class=leadon>*</SPAN> </div>
									</td>
									<td width="269" ><table cellpadding="0" cellspacing="0"><tr class="fieldcell"><td><input  type=text readonly  class="fieldinput"  style="WIDTH:25px;" maxlength="2" name="jv" id="jv" style="Display:none"></td>
									<td><input name="jv_voucherNumber" class="fieldinput" id="jv_voucherNumber" maxLength="10" tabIndex="1"  exilDataType="exilAlphaNumeric"   exilMustEnter="true"></td></tr></table></td>
									<td><div align="right" valign="center" class="labelcell">&nbsp;Receipt Voucher No<span class="leadon">*
									</span></div>
									</td>
									<td ><table cellpadding="0" cellspacing="0"><tr class=fieldcell><td><input  type=text  readonly  class="fieldinput-left"  style="WIDTH:25px" maxlength="2" name="rp" id="rp" style="Display:none"></td>
									<td><input class=fieldinput name="voucherHeader_voucherNumber" maxlength="10" id="voucherHeader_voucherNumber" tabindex=1  exilDataType="exilAlphaNumeric"  exilMustEnter="true" ></td></tr></table></td>

				</tr>


				<tr >

									<td width="20%" ><div align="right" valign="center" class="normaltext"> <span class="leadon"></span>&nbsp;</div>
									</td>
									<td ></td>

						 <td width="15%" ><div align="right" valign="center" class="labelcell">Voucher&nbsp;Date<span class="leadon">*</span></div>
					</td>
				<td width="39%"><span class="smallfieldcell">
					<input name="voucherHeader_voucherDate" class="datefieldinput" id="voucherHeader_voucherDate" style="WIDTH: 95px; HEIGHT: 19px" tabIndex="1" onkeyup="DateFormat(this,this.value,event,false,'3')" exilDataType="exilAnyDate" exilMustEnter="true" exilCalendar="true"></span>
				</td>
				</tr>

				<tr >
					<td width="20%" ><div align="right" valign="center" class="labelcell"><FONT face=Arial size=2>Collection Mode</FONT></div>
					</td>
					<td><span class="smallfieldcell">
					<select name="collection_type" class="fieldinput" id="collection_type"  onChange="loadBillCollectors(this)" tabIndex="1"><OPTION value="Office"  selected>
					</OPTION><OPTION    value=BillCollector>Field</OPTION>
					<OPTION      value=Counter>Counter</OPTION>
					<OPTION       value=Bank>Bank</OPTION>
					</select></span>
					</td>


					<td width="15%" ><div align="right" valign="center" class="labelcell" id="billLabel">Collection Agent</div>
					</td>
				<td width="39%"><span class="smallfieldcell">
					<SELECT  class="fieldinput" name=billCollector_id id="billCollector_id" tabIndex="1"> </SELECT></span>
				</td>

				</tr>





				<tr ><!--	<td ><div align="right" valign="center" class="normaltext"><FONT face=Arial size=2>Fund Source</FONT>
							<span class="leadon">*</span></div>
					</td>  -->
					<td width="20%" ><div align="right" valign="center" class="labelcell"> Financing Source</div>
					</td>
					<td ><span class="fieldcell">
						<input name="fundSource_name" class="fieldinput" id="fundSource_name" disabled maxLength=50 tabIndex="-1"></span>
					</td><!--				<td ><SELECT
            class="fieldinput" name="fundSource_id" id="fundSource_id"
            exilMustEnter="true"
            exilListSource="fundSourceCombo"> </SELECT>
					</td>   -->
					<td width="15%" ><div align="right" valign="center" class="labelcell">Ward</div>
					</td>
					<td width="39%"><span class="smallfieldcell">
						<SELECT  class="fieldinput" name=organizationStructure_id id="organizationStructure_id" tabIndex="1" exilListSource="allwards"></SELECT></span>
					</td>
				</tr>

				 <tr  id="bankRow" style="DISPLAY: none">
					<td width="20%" ><div align="right" valign="center" class="labelcell"> Bank
							<span class="leadon">*</span></div>
					</td>
					<td><span class="smallfieldcell"><SELECT id="bank_id" class="combowidth2" name="bank_id"   onChange="bankChange(null)" tabIndex="1" width="120" exilListSource="ptBankAndBranch"></SELECT></span>
					</td>
					<td width="15%" ><div align="right" valign="center" class="labelcell">
                      Account Number<SPAN
            class=leadon>*</SPAN>
                       </div>
					</td>
					<td width="39%"><span class="smallfieldcell">
						<SELECT id="bankAccount_accountNumber" class="fieldinput"  name="bankAccount_accountNumber" onChange="getBankDebitList(this)" tabIndex="1">
                        </SELECT>
                        <input type="text" id="acc_Desc" name="acc_Desc" class="fieldinput"  readonly></span>
                        </td>
				</tr>



				<tr >

					<td width="20%" ><div align="right" valign="center" class="labelcell"> Function</div>
					</td>
					<td><span class="fieldcell">
						<input type="hidden" name="function_id" id="function_id" tabIndex="-1">
						<input name="function_name" class="fieldinput" id="function_name"  disabled maxLength=50 tabIndex="-1" style="">
						</span>
					</td>

					<td width="15%" ><div align="right" valign="center" class="labelcell"> Fund</div>
					</td>
					<td width="39%"><span class="fieldcell">
						<input name="fund_name" class="fieldinput" id="fund_name" disabled maxLength=50 tabIndex="-1"></span>
					</td>
				</tr>
				<tr  id="cashOrChq">
					<td width="20%" >
							<div align="right" valign="center" class="normaltext"> <INPUT
            id=modeOfCollection style="LEFT: 3px; TOP: 4px"
            onclick=disableChequeDetails() type=radio  value=Cash
            name=modeOfCollection tabIndex="1"

            CHECKED><span class="labelcell">Cash </span></div>

					</td>
					<td class="fieldinput" width="269">
            <span class="normaltext"></span><INPUT
            id=modeOfCollection style="LEFT: 3px; TOP: 4px"
            onclick=disableChequeDetails() type=radio  value =Cheque
            name=modeOfCollection
            > <span class="labelcell">Cheque</span>
					</td>
					<td width="15%" >
					</td>

					<td width="39%"></td>
				</tr>
				<tr  id="chqDet">
				<td ><div align="right" valign="center" class="labelcell" tabIndex="-1">Cheque /Ref No</div>
					</td>
					<td class="fieldinput" width="269">
                    <div class=fieldcell><INPUT class=fieldinput
            id ="chequeDetail_chequeNumber" name="chequeDetail_chequeNumber" maxLength="10"
            disabled tabIndex="-1" exilDataType="exilUnsignedInt">&nbsp;</div></td>
					<td width="15%" ><div align="right">
            <DIV align="right" valign="center" class="labelcell">Cheque Date</DIV> </div>
					</td>
					<td width="39%"><span class="smallfieldcell">
					<input name="chequeDetail_chequeDate" class="datefieldinput" id="chequeDetail_chequeDate" size="11" tabIndex="-1" style="WIDTH: 95px; HEIGHT: 19px"
           			 disabled tabIndex="" onkeyup="DateFormat(this,this.value,event,false,'3')" exilDataType="exilAnyDate" exilCalendar="true"></span>
					</td>
				</tr>
				<tr >
					<td width="20%" ><div align="right" valign="center" class="labelcell">Narration</div>

					</td>
					<td><TEXTAREA class=narrationfieldinput id=voucherDetail_narration tabIndex="1" name=voucherDetail_narration exilDataType="exilAnyChar"></TEXTAREA>&nbsp;</td>
					<td width="15%" ><div align="right">&nbsp;</div>
					</td>
					<td width="39%">&nbsp;
					</td>
				</tr>
				<tr >
					<td width="20%" >&nbsp;
					</td>
					<td >&nbsp;
					</td>
					<td width="15%" >&nbsp;

					</td>
					<td width="39%" >&nbsp;

					</td>
				</tr></TBODY>
			</table>
			<P>&nbsp;<FONT color=red> &nbsp;</FONT>
      <TABLE id="boundarytableGrid" cellSpacing=0 cellPadding=0 width="55%" align=center border=1 NAME="boundarytableGrid">

        <TR class=row2 >
          <TD class=thStlyle width="41%"><DIV align=center>Boundary Level <FONT
            color=red>*</FONT> </DIV></TD>
          <TD class=thStlyle width="26%"><DIV align=center>Cash In Hand</DIV></TD>
          <TD class=thStlyle width="31%"><DIV align=center>Cheque In Hand</DIV></TD>
          </TR>
        <TR class=smallfieldcell>
         <TD class=columnheader width="41%" exilRetainValue="true"><SPAN exilTrimLength="15" align="left">
			<SELECT id="boundaryLevelId" style="WIDTH: 157; HEIGHT: 17" name="boundaryLevelId" onChange="getCashChequeInHand(this);"  exilDataType="exilAlphaNumeric" exilMustEnter="true" tabIndex="-1" ></SELECT></SPAN> </TD>
          <TD class="columnheader" exilRetainValue="true">
            <DIV><INPUT class=fieldinput-right id="cashInHand" style="WIDTH: 172px; HEIGHT: 22px" readOnly size=35 name="cashInHand" exilDataType="exilAnyChar" tabIndex="-1"><input type="hidden" id="cashinhandId" name="cashinhandId" tabIndex=-1></DIV></TD>
          <TD class="columnheader" exilRetainValue="true">
            <DIV><INPUT class=fieldinput-right id="chequeInHand"  style="WIDTH: 172px; HEIGHT: 22px" readOnly size=35 name="chequeInHand" exilDataType="exilAnyChar" tabIndex="-1"><input type="hidden" id="chequeinhandId" name="chequeinhandId" tabIndex=-1></DIV></TD>
            </TR></TABLE></P>
			</td></tr>
		<tr><td>&nbsp;</td></tr>
		<tr style="DISPLAY: none" id="rowChequeGridLable"><td>
		<table STYLE="margin-left:400px;" ><tr  height="100%"><td  class="thStlyle " align=center>Cheque Detail</td></tr></table>
		</td></tr>
		<tr style="DISPLAY: none" id="rowChequeGrid"><td>
             <table id="chequeGrid" name="chequeGrid" STYLE="margin-left:80px;" cellSpacing=0 cellPadding=0 width="50%" align=left border=1 >
			 <tr class=rowheader >

			  <td class=thStlyle width="41%"><DIV align=center>Cheque Number</DIV></TD>
			  <td class=thStlyle width="26%"><DIV align=center>Amount</DIV></TD>
			  <td class=thStlyle width="31%"><DIV align=center>Cheque Date</DIV></TD>
			 </tr>
			  <tr class=smallfieldcell><input  type="hidden" name="chequeGrid_chequeId" id="chequeGrid_chequeId" tabIndex="-1">
			  <td class=columnheader><input class=fieldinput-right id="chequeGrid_chequeNo" name="chequeGrid_chequeNo" style="WIDTH: 172px; HEIGHT: 22px"  exilDataType="exilUnsignedInt" MaxLength ="10" tabIndex="1" ></TD>
			  <td class=columnheader><input class=fieldinput-right id="chequeGrid_chequeAmount" name="chequeGrid_chequeAmount" style="WIDTH: 172px; HEIGHT: 22px"  exilDataType="exilUnsignedDecimal" exilMin="1"    onBlur="calculatechqAmt()" tabIndex="1"></TD>
			  <td class=columnheader><input type="hidden" size=1 name="selectedDate" id="selectedDate"><input class=datefieldinput id="chequeGrid_chequeDate" name="chequeGrid_chequeDate" onblur="DateFormat(this,this.value,event,false,'3');checkForModify(this);" style="WIDTH: 172px; HEIGHT: 22px"  onKeyDown="addNewRow('chequeGrid','chequeGrid_chequeNo')" onkeyup="DateFormat(this,this.value,event,false,'3')"  ><A onclick="fillDate(this)" tabIndex=-1 href=#><IMG tabIndex=-1 src="/egi/resources/erp2/images/calendar.gif" ></A> </TD>
              </tr></table>
		</td></tr>
		<tr style="DISPLAY: none" id="rowTotalGrid"><td>
			<table  STYLE="margin-left:80px;" cellSpacing=0 cellPadding=0 width="50%" align=left border=1>
			<tr class="normaltext">
			<td ><span style="WIDTH: 172px; HEIGHT: 22px" class="normaltext" id=SPAN1>Total</span></td>
            <td ><input class="fieldinput-right" size=13 id="chequeAmountTotal" name="chequeAmountTotal" style="WIDTH: 172px; HEIGHT: 22px" tabindex=-1 readOnly></td>
            <td ><span style="WIDTH: 199px; HEIGHT: 22px">&nbsp;</span></td>
            </tr></table>
		</td></tr>
			<tr><td>&nbsp;</td></tr>
		<tr><TD>
			<table width="100%" border="0" cellpadding="0" cellspacing="0" ID="Table1">
				<tr>
					<td>
						<table width="40%" border="1" cellpadding="0" cellspacing="0" ID="voucherDetailsGrid" align="center">
							<tr class="rowheader">
							<td width="1%"  class="thStlyle"><span>&nbsp;&nbsp;</td>
						     <td width="8%" class="thStlyle"><div align="center">Period</div></td>
								<td width="8%" class="thStlyle"><div align="center">Amount Received</div></td><!--<td width="8%" class="columnheader"><div align="center">Interest</div></td>-->
								<td width="8%" class="thStlyle"><div align="center">Penalty</div></td>
								<td width="8%" class="thStlyle"><div align="center">Net Amount</div></td>

							</tr>
							<tr class=smallfieldcell>
							<td class="tdStlyle" width="1%"  onClick="changeColor(this,'voucherDetailsGrid');" name="selectTd" id="selectTd"></td>
							<td class="columnheader" width="8%">
								<input type="hidden" name="financialyear_id" id="financialyear_id" style="WIDTH: 136px; HEIGHT: 22px" size=17>
								<!--input align="left" name="period" id="period" style="WIDTH: 137px;   HEIGHT: 22px" size  ="15" exilDataType="exilAnyChar" exilTrimLength="15" tabIndex=10-->
								<select id="period" tabindex=1 name="period" class="fieldinput" exilMustEnter="true" width  ="25" exilListSource="rptPeriodNamesNew" tabindex=1 ></select>
				     		</td>
								<td class="columnheader" width="8%"><input class="fieldinput-right"  size="22" ID="totalAmount" NAME="totalAmount" tabindex=1

                  onkeyup   ="calculateTotal()"

                  style ="WIDTH: 148px; HEIGHT:
                  19px" maxLength="16" exilDataType="exilUnsignedDecimal" exilMax="9999999999999.99"
                  exilMin="0"></td><!--<td class="columnheader" width="8%"><INPUT
                  class=fieldinput-right id="interest"   style="WIDTH:
                  148px; HEIGHT: 19px" size =22
                  name="interest" onkeyup="calculateTotal()"

                  maxLength="9" exilDataType="exilUnsignedDecimal" exilMax="9999999999999.99"
                  exilMin="0"></td>-->
								<td class="columnheader" width="8%"><INPUT



                  class=fieldinput-right
                  id
                  ="penalty"
                  style="WIDTH:
                  148px; HEIGHT: 19px" size=22

                  onkeyup="calculateTotal()"
                  name="penalty" maxLength="16" exilDataType="exilUnsignedDecimal" exilMax="9999999999999.99"
                  exilMin="0" tabindex=1></td>
								<td class="columnheader" width="8%"><INPUT



                  class=fieldinput-right
                  id
                  ="mNetAmt"
                  style="WIDTH:
                  148px; HEIGHT: 19px" size=22

                  onkeyup="calculateTotal()"
                  name="mNetAmt" maxLength="16" exilDataType="exilUnsignedDecimal" exilMax="9999999999999.99"
                  exilMin="0" tabindex=-1 onKeyDown ="addNewRowButton(); "></td>

							</tr>
							<tr class=smallfieldcell>
							<td class="tdStlyle" width="1%"  onClick="changeColor(this,'voucherDetailsGrid');" name="selectTd" id="selectTd"></td>
							 <td class="columnheader" width="8%">
								<INPUT id=financialyear_id  type="hidden" name=financialyear_id style="WIDTH: 136px; HEIGHT: 22px" size=17>
								<!--input readOnly align="left" name="period" id="period" style="WIDTH: 137px;   HEIGHT: 22px" size  ="15" exilDataType="exilAnyChar" exilTrimLength="15"-->
				               <select id="period" tabindex=1 name="period" class="fieldinput" width  ="25" exilListSource="rptPeriodNamesNew" ></select>
						     </td>
							 <td class="columnheader" width="8%">
								<input class="fieldinput-right"  size="22" ID="totalAmount" NAME="totalAmount" onkeyup="calculateTotal()" style ="WIDTH: 148px; HEIGHT:19px" maxLength="16" tabindex=1 exilDataType="exilUnsignedDecimal" exilMax="9999999999999.99" exilMin="0">
							 </td><!--td class="columnheader" width="8%"><INPUT
                  class=fieldinput-right id="interest"  style="WIDTH:
                  148px; HEIGHT: 19px" size =22 onkeyup="calculateTotal()"

                  name="interest" maxLength="9" exilDataType="exilUnsignedDecimal"
                  exilMax="999999.99"
                  exilMin="0"></td>-->
								<td class="columnheader" width="8%"><INPUT



                  class=fieldinput-right
                  id
                  ="penalty"
                  style="WIDTH:
                  148px; HEIGHT: 19px" size=22

                  onkeyup="calculateTotal()" tabindex=1
                  name="penalty" maxLength="16" exilDataType="exilUnsignedDecimal" exilMax="9999999999999.99"
                  exilMin="0">
                  </td>
				 <td class="columnheader" width="8%">
				    <INPUT class=fieldinput-right id="mNetAmt" style="WIDTH:148px; HEIGHT: 19px" size=22
                  onkeyup="calculateTotal()" tabindex=-1 name="mNetAmt" maxLength="16" exilDataType="exilUnsignedDecimal" exilMax="9999999999999.99"
                  exilMin="0" onKeyDown ="addNewRowButton();">
                  </td>

							</tr>
						</table>


					</td>
				</tr>


				<tr  align="left">

					<td>


					<table width=55%>
						<tr>
											
								<td colspan="2" align="right"><input type="button"  class="button" tabindex=1 value="Delete Row" id="deleteDetail" name="deleteDetail" onclick=" deleteRowTable('voucherDetailsGrid');colAllTotalnew('totalAmount','penalty','totalAmountF','penaltyF');" /></td>
								<td colspan="2" align="left"><input type="button"  class="button" tabindex=1 value="Add Row" id="addDetail" name="addDetail" onclick="addNewRowFromButton('voucherDetailsGrid','period,totalAmount');clearRow()" /></td>
							</tr>
					</table>
				  </td>
				</tr>
				<tr>
				<td>
				<table border="1" width="40%" id="totalsGrid" name="totalsGrid" align="center">
				 <tr >
					<td width="8%" class="normaltext" align="right">
					<INPUT
                  class=fieldinput-right tabindex=-1
                  style="BORDER-RIGHT: thin; BORDER-TOP: thin; BORDER-LEFT: thin; WIDTH: 131px; HEIGHT: 19px"


                  size=12 value="Total" readOnly id=text1
                  name=text1>
					</td>
					<td  width="8%" class="columnheader">
                    <INPUT


                   class
                  =fieldinput-right id
                   =totalAmountF
                  style="BORDER-RIGHT: thin; BORDER-TOP: thin; BORDER-LEFT: thin; WIDTH: 146px; HEIGHT: 19px"
                  disabled name=totalAmountF></td><!--	<td width="8%" class="columnheader"><INPUT
                  class=fieldinput-right id=interestF
                  style="BORDER-RIGHT: thin; BORDER-TOP: thin; BORDER-LEFT: thin; WIDTH: 144px; HEIGHT: 19px"
                  disabled size=21 name=interestF></td>-->
								<td class="columnheader" width="8%"><INPUT


                   class =fieldinput-right id
                   =penaltyF style="BORDER-RIGHT: thin; BORDER-TOP: thin; BORDER-LEFT: thin; WIDTH: 144px; HEIGHT: 19px"
                  disabled size=21 name=penaltyF></td>
								<td class="columnheader" width="8%"><INPUT


                   class

                  =fieldinput-right id=mNetAmtF style="BORDER-RIGHT:
             thin; BORDER-TOP: thin; BORDER-LEFT: thin; WIDTH: 142px; HEIGHT: 19px"
                  disabled size=19 name=mNetAmtF
             ></td>

							</tr>
				</table>
				</td>
				</tr>

				<tr  height=10>
					<td colspan="4" align="middle"></td>
				</tr>
			<tr >
				<td colspan="4" align="middle"><!-- Buttons Start Here -->
					<table border="0" cellpadding="0" cellspacing="0" id=TABLE1>
					<tr id="modGrid">
							<td align="center" width=100% colspan=4>
							<input   type="button" class="button" value="Reverse" onclick=reverse(); />
							</td>
					</tr>

								<tr>
										  <td colspan=4></td>
								</tr>
													<tr id="reverseRecord"  style="DISPLAY: none">
														<td ><span  align="right" valign="center" class=""> Voucher No<SPAN class=leadon>*</SPAN>
															 <span class=smallfieldcell>
														<input name="voucherHeader_newVcNo" id="voucherHeader_newVcNo" maxlength="10"  style="WIDTH: 128; HEIGHT: 22" size="10"
															   exilDataType="exilAlphaNumeric"> </span></span>
														</td>
														<td></td>
														<td ><span  align="right" valign="center" class=""> Cess Vc No<SPAN class=leadon>*</SPAN>
															 <span class=smallfieldcell>
														<input name="voucherHeader_newCVcNo" id="voucherHeader_newCVcNo" maxlength="10"  style="WIDTH: 126; HEIGHT: 22" size="10"
															   exilDataType="exilAlphaNumeric"> </span></span>
														</td>
														<td></td>
														<td>
															<span  align="right" valign="center" class="" >Voucher Date<span class="leadon">*</span>
															<span class=smallfieldcell><INPUT
															 class   ="datefieldinput"
															 name="voucherHeader_effDate"
							  id="voucherHeader_effDate" style   ="WIDTH:
							  101px; HEIGHT: 19px" onkeyup="DateFormat(this,this.value,event,false,'3')"

                  exilDataType="exilAnyDate" exilCalendar="true"></span></span>
														</td>
													</tr>

					</table>

				</td>
			</tr>
			<tr >
				<td colspan="4" align="middle"><!-- Buttons Start Here -->
					<table border="0" cellpadding="0" cellspacing="0" id=TABLE1>
						<tr id="submitGrid">
							<td>
								<input  id="saveandnew" type="button" class="button" value="Save & New" tabindex=1 onclick="return ButtonPress('savenew');"/>
								 <input   type="button" class="button" value="Save & Close" tabindex=1 onclick="return ButtonPress('saveclose');" />
								 <input   type="button" class="button" value="Cancel" tabindex=1 onclick="onClickCancel()" />
								 <input   type="button" class="button" value="Close"  tabindex=1 onclick=window.close(); />
								 <input   type="button" id="splitText" name="splitText" class="button" value="Show Splitup" tabindex=1 onclick=showSplitUp() />
							</td>
						</tr>
						<tr id="reverseSubmit" style="DISPLAY: none" >
		 					<td width=100% align=center>
								 <input   type="button" class="button" value="Save & Close" tabindex=1 onclick="return ButtonPress('saveclose');" />
								 <input   type="button" class="button" value="Cancel" tabindex=1 onclick="onClickCancel()" />
								 <input   type="button" class="button" value="Close" tabindex=1 onclick=window.close(); />
								 <input   type="button" id="splitText" name="splitText" class="button" value="Show Splitup" tabindex=1 onclick=showSplitUp() />
					 		</td>
						</tr>
			</table>

				</td>
			</tr>
			<tr >
						<td colspan=4>
							<table border=1 cellpadding=0 cellspacing=0 align=center id="debitList" name="debitList" style="DISPLAY: none">
								<tr>
									<td ><div align="center" valign="center" class="thStlyle"> Account Code</div>
									</td>
									<td ><div align="center" valign="center" class="thStlyle"> Account Head</div>
									</td>
									<td ><div align="center" valign="center" class="thStlyle"> Debit</div>
									</td>
									<td style="DISPLAY: none"><div align="center" valign="center" class="thStlyle"> Type</div>
									</td>
								</tr>
								<tr class=fieldcell>
									<td height="33">
										<input name="display_debitCode" class="smallfieldcell" id="display_debitCode"  readOnly maxLength=10


                  tabIndex=0>
									</td>
									<td height="33">
										<input name="display_debitHead" class="fieldcell" id="display_debitHead"  readOnly maxLength=10 tabIndex=0>
									</td>
									<td height="33">
										<input name="display_debitAmt" class="fieldcellamount" id="display_debitAmt"  readOnly maxLength=16


                  tabIndex=0>
									</td>
									<td style="DISPLAY: none" height="33">
										<input name="type" class="fieldinput" id="type" >
									</td>
								</tr>


							</table>
						</td>


					</tr>


				<tr  height=10>
					<td colspan="4" align="middle">
					<tr>
						<td>
							<table width="80%" border="1" cellpadding="0" cellspacing="0" ID="calcTable" name="calcTable" align="center" style="DISPLAY: none" >
								<tr class="rowheader">
									<td width="20%" height="34" class="thStlyle"><div align="center">Period
									</div>
									</td>
									<td width="20%" height="34" class="thStlyle"><div align="center">A/C
											Code</div>
									</td>
									<td width="20%" class="thStlyle"><div align="center">A/C Head</div>
									</td>
									<td width="10%" class="thStlyle"><div align="center">Percentage</div>
									</td>
									<td width="10%" class="thStlyle"><div align="center">Amount</div></td>
									<td width="10%" class="thStlyle"><div align="center">Type</div></td>
								</tr>
								<tr class="labelcell">
									<td ><div class="" ID="periodC" name="periodC"></div>
								<div class="" ID="pID" name="pID" style="DISPLAY: none"></div>
                 				</td>
									<td class=""><div class="" ID="accCode" name="accCode" align=center></div></td>
									<td class="" ><div class="" ID="accDesc" name="accDesc"></div></td>
									<td class=""><div class="" ID="percentC" name="percentC"></div></td>
									<td class=""><div class="" ID="fAmount" name="fAmount" align="right"></div></td>
									<td class=""><div class="" ID="recordType" name="recordType" align="right" style="DISPLAY: none"
                 ></div></td>
								</tr>

								<tr class="labelcell">
									<td class=""><div class="" ID="periodC" name="periodC"></div>
														 <div class="" ID="pID" name="pID" style="DISPLAY: none"
                 ></div>
									</td>
									<td class=""><div class="" ID="accCode" name="accCode" align=center></div></td>
									<td class="" ><div class="" ID="accDesc" name="accDesc"></div></td>
									<td class=""><div class="" ID="percentC" name="percentC"></div></td>
									<td class=""><div class="" ID="fAmount" name="fAmount" align="right"></div></td>
									<td class=""><div class="" ID="recordType" name="recordType" align="right" style="DISPLAY: none"
                 ></div></td>
								</tr>

							</table>
						</td>
					</tr>
					<tr></tr>
					<tr></tr>
					<tr >
			<td colspan="4" align="middle">
		<table border="0" cellpadding="0" cellspacing="0" id="buttons">
		<tr id="backbutton">  <!-- <td align="center">
				<IMG height=18 src="/egi/resources/erp2/images/Button_leftside.gif" width=6></td>
				<td bgcolor="#fe0000" valign="center" nowrap><A class=buttonprimary onclick="back(window.self)"  href="#">Back</A></td>
				<td><IMG height=18 src="/egi/resources/erp2/images/Button_rightside.gif" width=6></td>
				<td><IMG src="/egi/resources/erp2/images/spacer.gif" width=8></td> -->
				<td colspan=4><input type=button class=button onclick="back(window.self)" value="Back"/> </td>
		</tr>

			</table>
			</td>
			</tr>
			</table></td></tr>
			<tr >
				<td height="25" colspan="4" valign="bottom" class="smalltext"><p class="smalltext"><span class="leadon">*</span>
						- Mandatory Fields</p>
				</td>
			</tr>
			</table><!------------ Content ends here ------------------><!---------------- Footer begins here ----------><!---------------- Footer ends here ---------->
			<select name="inNoOfCess" id="inNoOfCess" style="VISIBILITY: hidden"   exilListSource="rptCessCount"></select>
			<select name="inTotalCess" id="inTotalCess" style="VISIBILITY: hidden" exilListSource ="rptCessTotal"></select>
			<input type=hidden name="databaseDate" id="databaseDate">
			<table id="discountTable" name="discountTable" style="DISPLAY: none">
				<tr>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td><input id="fnID" name="fnID"> </td>
					<td><input id="c_discountPc" name="c_discountPc"> </td>
					<td><input id="c_discountCode" name="c_discountCode"> </td>
					<td><input id="c_discountName" name="c_discountName"> </td>
				</tr>


			</table>

		</form>
	<!-- /div></div></div></td></tr></table -->
	</body>
</html>

