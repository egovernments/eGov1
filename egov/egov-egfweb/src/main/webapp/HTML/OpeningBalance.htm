#-------------------------------------------------------------------------------
# eGov suite of products aim to improve the internal efficiency,transparency, 
#      accountability and the service delivery of the government  organizations.
#   
#       Copyright (C) <2015>  eGovernments Foundation
#   
#       The updated version of eGov suite of products as by eGovernments Foundation 
#       is available at http://www.egovernments.org
#   
#       This program is free software: you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation, either version 3 of the License, or
#       any later version.
#   
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#   
#       You should have received a copy of the GNU General Public License
#       along with this program. If not, see http://www.gnu.org/licenses/ or 
#       http://www.gnu.org/licenses/gpl.html .
#   
#       In addition to the terms of the GPL license to be adhered to in using this
#       program, the following additional terms are to be complied with:
#   
#   	1) All versions of this program, verbatim or modified must carry this 
#   	   Legal Notice.
#   
#   	2) Any misrepresentation of the origin of the material is prohibited. It 
#   	   is required that all modified versions of this material be marked in 
#   	   reasonable ways as different from the original version.
#   
#   	3) This license does not grant any rights to any user of the program 
#   	   with regards to rights under trademark law for use of the trade names 
#   	   or trademarks of eGovernments Foundation.
#   
#     In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
#-------------------------------------------------------------------------------
<!doctype html public "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>


  

<script>
var curRow=1;
var str="";
var type="";
var tabObj="";
var isIE;
var completeTable;
var req;
var codeArray=new Array();
var j=-1;
var pressedKey;
var rowAfterOnblurOfGlcode;


document.onkeydown= handleKeyPress

function handleKeyPress(evt)
{
 pressedKey= (window.event)?event.keyCode:evt.which;
}

// added by raja for yui
	var acccodeAssArray;
	var acccodeLiabArray;
	var codeObjAsset;
	var codeObjLiab;
	var yuiflag = new Array();
	
function autocompleteEntitiesBy20(obj)
{
		currRow=PageManager.DataService.getRow(obj);
	   oACDS = new YAHOO.widget.DS_XHR("/EGF/voucher/common!ajaxLoadEntitesBy20.action", [ "~^"]);
	   
	   oACDS.responseType = YAHOO.widget.DS_XHR.TYPE_FLAT;
	   oACDS.scriptQueryParam = "startsWith";
	   
	   var oAutoComp1 = new YAHOO.widget.AutoComplete(obj,'codescontainer',oACDS);
	   oAutoComp1.doBeforeSendQuery = function(sQuery){
		   return sQuery+"&accountDetailType="+PageManager.DataService.getControlInBranch(currRow,'subLedgerList').value;
	   }       
	   oAutoComp1.queryDelay = 0.5;
	   oAutoComp1.prehighlightClassName = "yui-ac-prehighlight";
	   oAutoComp1.useShadow = true;
	   oAutoComp1.maxResultsDisplayed = 20;
	   oAutoComp1.useIFrame = true;
	   oAutoComp1.doBeforeExpandContainer = function(oTextbox, oContainer, sQDetauery, aResults) {
		 //  clearWaitingImage();
	           var pos = YAHOO.util.Dom.getXY(oTextbox);
	           pos[1] += YAHOO.util.Dom.get(oTextbox).offsetHeight + 6;
	           oContainer.style.width=300;
	           YAHOO.util.Dom.setXY(oContainer,pos);
	           return true;
	   };


	
}

function onBodyLoad(){
//	autocompleteEntitiesBy20();
	PageManager.ListService.callListService();
	PageManager.DataService.addNewRow('gridOpeningBalance');
	curRow = PageManager.DataService.getRow(document.getElementById('acc_entity'));
	row3 = document.getElementById('modeTable').rows[3];
	row4 = document.getElementById('modeTable').rows[4];
	row5 = document.getElementById('modeTable').rows[5];
	row3.style.display = 'block';
	row4.style.display = 'block';
	row5.style.display = 'block';
	document.getElementById('gridOpeningBalance').style.display = 'block';
	document.getElementById('buttonTable').style.display = 'block';
	document.getElementById('buttonTableClose').style.display = 'none';
	var obj = document.getElementById('gridOpeningBalance');
	for(var i=obj.rows.length-1; i>1; i--)
		obj.deleteRow(i);

	document.getElementById('chartOfAccounts_id').value = '';
	document.getElementById('chartOfAccounts_glCode').value = '';
	document.getElementById('chartOfAccounts_name').value = '';
	document.getElementById('acc_entityId').value = '';
	document.getElementById('acc_entityKey').value = '';
	document.getElementById('txnSummary_id').value = '';
	document.getElementById('txnSummary_opDr').value = '';
	document.getElementById('txnSummary_opCr').value = '';
	//var accEntity=document.getElementById('acc_entity');
	//clearCombo(accEntity);
	loadDropDownAssetCodes();
	loadDropDownLiabCodes();
	document.getElementById('fund_id').focus();
}
function addRowInGrid()
{
	
	var tbl = document.getElementById('gridOpeningBalance');
	var tbody=tbl.tBodies[0];
	var lastRow = tbl.rows.length;
	var rowObj = tbl.rows[lastRow-1].cloneNode(true);

	tbody.appendChild(rowObj);
	
	var row=PageManager.DataService.getRow(tbl.rows[lastRow].cells[1]);
	clearEntireRow(row);
	
}
function addNewRow11(TableID, checkFields1)
{	
		var index, inIndex, rowLength;
		var table = document.getElementById(TableID);
		if(!table || !table.rows) return false;			
		
		var checkFields = checkFields1.split(",");							
		rowLength = table.rows.length;
		var controlObj;
		PageManager.DataService.addNewRow(TableID);
		PageManager.DataService.getControlInBranch(table.rows[rowLength],checkFields[0]).focus();
		return true;
}
function deleteRowInGrid()
{

	var tbl = document.getElementById('gridOpeningBalance');
	var lastRow = (tbl.rows.length)-1;

	if(lastRow ==1)
	{
	 alert("This row can not be deleted");
	return false;
 	}
	else
	{
	tbl.deleteRow(lastRow);
	return true;
	}
	
	
}

function loadDropDownAssetCodes()
 {
 	var type='getAllAssetCodes';
		   		var url = "../commons/Process.jsp?type=" +type+ " ";
		   		var req2 = initiateRequest();
		   		req2.onreadystatechange = function()
		   		{
		   			  if (req2.readyState == 4)
		   			  {
		   				  if (req2.status == 200)
		   				  {
		   					var codes2=req2.responseText;
		   					var a = codes2.split("^");
		   					var codes = a[0];
		   					acccodeAssArray=codes.split("+");
		   					codeObjAsset = new YAHOO.widget.DS_JSArray(acccodeAssArray);
		   				  }
		   			  }
		   		};
		   		req2.open("GET", url, true);
   		req2.send(null);
  }

function loadDropDownLiabCodes()
 {
  	var type='getAllLiabCodes';
	   		var url = "../commons/Process.jsp?type=" +type+ " ";
	   		var req2 = initiateRequest();
	   		req2.onreadystatechange = function()
	   		{
	   			  if (req2.readyState == 4)
	   			  {
	   				  if (req2.status == 200)
	   				  {
	   					var codes2=req2.responseText;
	   					var a = codes2.split("^");
	   					var codes = a[0];
	   					acccodeLiabArray=codes.split("+");
	   					codeObjLiab = new YAHOO.widget.DS_JSArray(acccodeLiabArray);
	   				  }
	   			  }
	   		};
	   		req2.open("GET", url, true);
   		req2.send(null);
  }
function beforeRefreshPage(dc){

document.getElementById('modeTxt').value = '';

}

function afterRefreshPage(dc){
	coaId=dc.values['glCodeId'];
	PageManager.DataService.removeQueryField("accDetailTypeId");
	PageManager.DataService.removeQueryField("accDetailKey");
	var accEntityList = dc.grids['accEntityList'];
	if(dc.values['txnId'] != null)
	{
		var txnId = PageManager.DataService.getControlInBranch(curRow, 'txnSummary_id');
		var dr = PageManager.DataService.getControlInBranch(curRow, 'txnSummary_opDr');
		var cr = PageManager.DataService.getControlInBranch(curRow, 'txnSummary_opCr');
		var accEnt = PageManager.DataService.getControlInBranch(curRow, 'acc_entityKey');
		var txnNarr = PageManager.DataService.getControlInBranch(curRow, 'txnSummary_narration');

		txnId.value = dc.values['txnId'];
		dr.value = dc.values['drAmt'];
		cr.value = dc.values['crAmt'];
		if(dc.values['accountDetailKey']) accEnt.value = dc.values['accountDetailKey'];
		txnNarr.value=dc.values['txnNarration'];

	 	tableName = 'chartofaccounts_txnsummary';
		PageManager.DataService.setQueryField("setOrUpdate","update");
		document.getElementById('modeTxt').value = 'update';
	}
	var tab = document.getElementById('gridOpeningBalance');
	dr = PageManager.DataService.getControlInBranch(tab.rows[1], 'txnSummary_opDr').value;
	cr = PageManager.DataService.getControlInBranch(tab.rows[1], 'txnSummary_opCr').value;
	var accEntity = dc.values['accEnt'];
	if(accEntity=='') accEntity == 0;
	if(dr=='') dr == 0;
	if(cr=='') cr == 0;
	if(dc.values['serviceID']=='subLedgerList')  
	{
		var subLedgerList = dc.grids['subLedgerList'];
		if(subLedgerList != null)
		{
			var comboSubledgerList = PageManager.DataService.getControlInBranch(curRow,'subLedgerList'); 			
			var option;
			for(var i=0; i<subLedgerList.length; i++)
			{			
				option = document.createElement('OPTION');
				option.value=subLedgerList [i][0];
				option.text = subLedgerList [i][1];
				comboSubledgerList.add(option);			
			} 
			
		 }
		 if(subLedgerList==null || subLedgerList.length==0)
		 {	
		 	getKey(rowAfterOnblurOfGlcode);
		 }
	}
		
}

function getKey(obj){
	var row=PageManager.DataService.getRow(obj);
	var ctrlId = PageManager.DataService.getControlInBranch(row, 'acc_entityId');
	var ctrlKey = PageManager.DataService.getControlInBranch(row, 'acc_entityKey');
	var glId=PageManager.DataService.getControlInBranch(row, 'chartOfAccounts_id');
	var glCode=PageManager.DataService.getControlInBranch(row, 'chartOfAccounts_glCode');
	var subLedgerList=PageManager.DataService.getControlInBranch(row, 'subLedgerList');
	var entity = PageManager.DataService.getControlInBranch(row, 'acc_entity');
	if((glCode.value!='' && glId.value!='' && ctrlKey.value=='' && ctrlId.value=='' && entity.value=='' && (subLedgerList.length==0 || subLedgerList.length=='' || subLedgerList.length==null ))||(glCode.value!='' && glId.value!='' && ctrlKey.value!='' && ctrlId.value!='' && entity.value!='' && (subLedgerList.length!=0 || subLedgerList.length!='' || subLedgerList.length!=null ) ))
	{
		PageManager.DataService.getControlInBranch(row, 'txnSummary_id').value='';
		PageManager.DataService.getControlInBranch(row, 'txnSummary_opDr').value='';
		PageManager.DataService.getControlInBranch(row, 'txnSummary_opCr').value='';
		PageManager.DataService.getControlInBranch(row, 'txnSummary_narration').value='';
		var fndSrcObj=document.getElementById('fundSourceId');
		var fndObj=document.getElementById('fund_id');
		var deptObj=document.getElementById('dept_name');
		//var departmentObj=document.getElementById('fund_id');
		var fnyObj=document.getElementById('financialYear_id');
		if(fndSrcObj.selectedIndex==-1)return;
		if(fndObj.selectedIndex==-1)return;
		if(fnyObj.selectedIndex==-1)return;
		if(deptObj.selectedIndex==-1)return;
		var fndSrc=fndSrcObj.options[fndSrcObj.selectedIndex].value;
		var fnd=fndObj.options[fndObj.selectedIndex].value;
		var dept=deptObj.options[deptObj.selectedIndex].value;
		var fny=fnyObj.options[fnyObj.selectedIndex].value;
		curRow = PageManager.DataService.getRow(obj);
		PageManager.DataService.setQueryField("glCodeId",glId.value);
		PageManager.DataService.setQueryField("accDetailTypeId",ctrlId.value);
		PageManager.DataService.setQueryField("accDetailKey",ctrlKey.value);
		PageManager.DataService.setQueryField("fundId",fnd);
		PageManager.DataService.setQueryField("fundSourceId",fndSrc);
		PageManager.DataService.setQueryField("fyId",fny);
		PageManager.DataService.setQueryField("deptId",dept);
		PageManager.DataService.callDataService('accEntityList'); 
	}
}

function loadMajorHeads(obj){
// added by iliyaraja for clear table while change the type
		var tabobj = document.getElementById('gridOpeningBalance');
		for(var i=tabobj.rows.length-1; i>1; i--)
			tabobj.deleteRow(i);
		document.getElementById('chartOfAccounts_glCode').value = '';
		document.getElementById('chartOfAccounts_name').value = '';
		document.getElementById('txnSummary_opDr').value = '';
		document.getElementById('txnSummary_opCr').value = '';


	clearCodeCombo('ftService_majorHead');
	clearCodeCombo('ftService_minorHead');
	if(obj.selectedIndex<1)return;
	var typeOfCode=obj.options[obj.selectedIndex].value;
	PageManager.DataService.removeQueryField('type');
	PageManager.DataService.setQueryField('type',typeOfCode);
	document.getElementById('ftService_majorHead').setAttribute('exilListSource','ftService_majorHead');
	//exilListSource="ftService_majorHead"
	PageManager.DataService.callDataService('loadMajorHeads');
}
function loadMinorHeads(obj){
	if(obj.selectedIndex<1)return;
	clearCodeCombo('ftService_minorHead');
	var majorCode=obj.options[obj.selectedIndex].value;
	PageManager.DataService.removeQueryField('majorCode');
	PageManager.DataService.setQueryField('majorCode',majorCode);
	document.getElementById('ftService_minorHead').setAttribute('exilListSource','ftService_minorHead');
	//exilListSource="ftService_minorHead"
	PageManager.DataService.callDataService('loadMinorHeads');
}
function clearCodeCombo(objName){
	var obj=document.getElementById(objName);
	for(var i=obj.length-1;i>=0;i--)
		obj.remove(i);
}
function clearCombo(obj){
	if(obj!=null)
	for(var i=obj.length-1;i>=0;i--)
		obj.remove(i);
}
function fillNeibrAfterSplit(obj,neibrObjName)
 {
 			var temp = obj.value; 
 			temp = temp.split("`-`");
 			obj.value=temp[0];
 			PageManager.DescService.onblur(neibrObjName);
 			var currRow=PageManager.DataService.getRow(obj);
 			rowAfterOnblurOfGlcode=currRow;
			yuiflag[currRow.rowIndex] = undefined;
			neibrObj=PageManager.DataService.getControlInBranch(currRow,neibrObjName);
			if(temp[1]==null) return; else 	neibrObj.value = temp[2]+"^"+temp[1];
 			var objMinor = document.getElementById('ftService_minorHead');
			var objMajor = document.getElementById('ftService_majorHead');
				var objType = document.getElementById('ftService_type');
				var fy = document.getElementById('financialYear_id');
				var fund = document.getElementById('fund_id');
				var fundSource=document.getElementById('fundSourceId');
				var department=document.getElementById('dept_name');

			if(objType.selectedIndex > 0 )
				typefilter = objType.options[objType.selectedIndex].value;


			    if(objMinor.selectedIndex > 0)
						filter = objMinor.options[objMinor.selectedIndex].value;
				else if(objMajor.selectedIndex > 0)
				 		filter = objMajor.options[objMajor.selectedIndex].value;
			    var tableName;
				PageManager.DataService.setQueryField("fundId",fund.options[fund.selectedIndex].value);
				PageManager.DataService.setQueryField("fyId",fy.options[fy.selectedIndex].value);
				PageManager.DataService.setQueryField("dept",department.options[department.selectedIndex].value);
				if(fundSource.selectedIndex!=-1)
				PageManager.DataService.setQueryField("fundSourceId",fundSource.options[fundSource.selectedIndex].value);
				tableName = 'chartofaccounts_txnsummary';
				PageManager.DataService.setQueryField("setOrUpdate","update");
				if(obj.value.length==0)
					return;
				PageManager.DescService.onblur(neibrObjName);
				row=PageManager.DataService.getRow(obj);
				curRow=PageManager.DataService.getRow(obj);
				clearRow(row);
				var code1=PageManager.DataService.getControlInBranch(row,'chartOfAccounts_name').value;
				if(code1=="")
				{
				return;
				}
				var str=code1.split("^");
				PageManager.DataService.getControlInBranch(row,'chartOfAccounts_name').value=str[1];
				PageManager.DataService.getControlInBranch(row,'chartOfAccounts_id').value=str[0];
				PageManager.DataService.setQueryField('glCodeId', str[0]);
				tableName = 'chartofaccounts_txnsummary';
				if(document.getElementById('modeTxt').value =='update')
				{
				PageManager.DataService.setQueryField("setOrUpdate","update");
				document.getElementById('modeTxt').value = 'update';
				}
				else
				{
				PageManager.DataService.setQueryField("setOrUpdate","set");
				document.getElementById('modeTxt').value = 'set';
				}
				loadSubLedgerTypeList(currRow);
				
 }
 function splitEntity(obj)
 {
      var currRow=PageManager.DataService.getRow(obj);
      var entityValObj=PageManager.DataService.getControlInBranch(currRow,"acc_entity");
     if(entityValObj.value!='')
     {
     	var accEntityArry = entityValObj.value.split('`~`');
     	if(accEntityArry.length==2  )
     	{
     		PageManager.DataService.getControlInBranch(currRow,'acc_entityKey').value=accEntityArry[1];
     		var accArr = accEntityArry[0].split('`-`');
     		if(accArr.length==2  )
     		{
     			entityValObj.value=accArr[1];
     		}
     	}
     	PageManager.DataService.getControlInBranch(currRow,'acc_entityId').value=PageManager.DataService.getControlInBranch(currRow,'subLedgerList').value;	
     }
  }


function openSearch(obj,tableName)
{
	var currRow=PageManager.DataService.getRow(obj);
	rowAfterOnblurOfGlcode=currRow;
	var a = new Array(2);
	var typefilter = "";
	var filter = "";
    //var sRtn = showModalDialog("Search.html?screenName=directPayment","","dialogLeft=300;dialogTop=210;dialogWidth=305pt;dialogHeight=300pt;status=no;");
   	var objMinor = document.getElementById('ftService_minorHead');
	var objMajor = document.getElementById('ftService_majorHead');
	var objType = document.getElementById('ftService_type');
   	if(objType.selectedIndex > 0 )
   		typefilter = objType.options[objType.selectedIndex].value;
   	else{
   		alert('please select Type');
		return false;
		}
    if(objMinor.selectedIndex > 0)
			filter = objMinor.options[objMinor.selectedIndex].value;
		else if(objMajor.selectedIndex > 0)
		filter = objMajor.options[objMajor.selectedIndex].value;
    var tableName;
    var fy = document.getElementById('financialYear_id');
	var fund = document.getElementById('fund_id');
	var department= document.getElementById('dept_name');
	var fundSource=document.getElementById('fundSourceId');
	if(fy.selectedIndex < 0 )
		{
		   		alert('please select financial year');
				return false;
		}
		if(fund.selectedIndex < 0)
		{
		   	alert('please select Fund Name');
				return false;
		}

	PageManager.DataService.setQueryField("fundId",fund.options[fund.selectedIndex].value);
	PageManager.DataService.setQueryField("fyId",fy.options[fy.selectedIndex].value);
	if(fundSource.selectedIndex!=-1)
	PageManager.DataService.setQueryField("fundSourceId",fundSource.options[fundSource.selectedIndex].value);
	tableName = 'chartofaccounts_txnsummary';
	PageManager.DataService.setQueryField("setOrUpdate","update");
	var sRtn =showModalDialog("Search.html?tableNameForCode="+tableName+"&typefilter="+typefilter+"&filter="+filter+"&lvlNumber=5","","dialogLeft=300;dialogTop=210;dialogWidth=305pt;dialogHeight=300pt;status=no;");
    if ( sRtn != '' )
	{
		var row=PageManager.DataService.getRow(obj);
		curRow=PageManager.DataService.getRow(obj);
		clearRow(row);

		a = sRtn.split("`~`");
		var x =PageManager.DataService.getControlInBranch(row,'chartOfAccounts_glCode');
		var y =PageManager.DataService.getControlInBranch(row,'chartOfAccounts_name');
		var z =PageManager.DataService.getControlInBranch(row,'chartOfAccounts_id');

		x.value = a[0];
		y.value = a[1];
		z.value = a[2];
		
		loadSubLedgerTypeList(row);

		PageManager.DataService.setQueryField('glCodeId', a[2]);
	}
		tableName = 'chartofaccounts_txnsummary';
	 	if(document.getElementById('modeTxt').value =='update')
	 	{
		PageManager.DataService.setQueryField("setOrUpdate","update");
		document.getElementById('modeTxt').value = 'update';
		}
		else
		{
		PageManager.DataService.setQueryField("setOrUpdate","set");
		document.getElementById('modeTxt').value = 'set';
		}
}
function clearRow(row){
	var txnId =PageManager.DataService.getControlInBranch(row,'txnSummary_id');
	var txnNarration =PageManager.DataService.getControlInBranch(row,'txnSummary_narration');
	var dr =PageManager.DataService.getControlInBranch(row,'txnSummary_opDr');
	var cr =PageManager.DataService.getControlInBranch(row,'txnSummary_opCr');
	var accEntityId =PageManager.DataService.getControlInBranch(row,'acc_entityId');
	var accEntityKey =PageManager.DataService.getControlInBranch(row,'acc_entityKey');
	var accEntity =PageManager.DataService.getControlInBranch(row,'acc_entity');
	var subLedgerList =PageManager.DataService.getControlInBranch(row,"subLedgerList");
	txnId.value = dr.value = cr.value = accEntityId.value = accEntityKey.value =accEntity.value= txnNarration.value='';
	clearCombo(subLedgerList);
}
function clearEntireRow(row){
	clearRow(row);
	var coaGlcode =PageManager.DataService.getControlInBranch(row,'chartOfAccounts_glCode');
	var coaName =PageManager.DataService.getControlInBranch(row,"chartOfAccounts_name");
	var coaId =PageManager.DataService.getControlInBranch(row,"chartOfAccounts_id");
	coaGlcode.value=coaName.value=coaId.value="";
}


function buttonSubmit()
{
	if(!validate()){ return false; }
	if(!PageValidator.validateForm()) { return false; }
	if(document.getElementById('modeTxt').value=='')
	{
	 tableName = 'chartofaccounts_txnsummary';
	 PageManager.DataService.setQueryField("setOrUpdate","set");
	 document.getElementById('modeTxt').value = 'set';
	}
	PageManager.UpdateService.submitForm('openingBalance');
}

function loadSubLedgerTypeList(currentRow)
{	
	var glCodeId = PageManager.DataService.getControlInBranch(currentRow,'chartOfAccounts_id').value;
	glcode=PageManager.DataService.getControlInBranch(currentRow,'chartOfAccounts_glCode').value;	
	if(glCodeId != '')
	{
		PageManager.DataService.setQueryField('glCode', glcode);		
		PageManager.DataService.callDataService(PageManager.DataService.getControlInBranch(currentRow,'subLedgerList').name);		
	}	
}

function validate(){
	var tab = document.getElementById('gridOpeningBalance');
	var glCode, glCode1, dr, cr, accId, accKey,accIdJthRow,accKeyJthRow,subledgerList,accEntty;
	var nodata=true;
	for(var i=1; i<tab.rows.length; i++){
		glCode = PageManager.DataService.getControlInBranch(tab.rows[i], 'chartOfAccounts_glCode').value;
		dr = PageManager.DataService.getControlInBranch(tab.rows[i], 'txnSummary_opDr');
		cr = PageManager.DataService.getControlInBranch(tab.rows[i], 'txnSummary_opCr');
		accId = PageManager.DataService.getControlInBranch(tab.rows[i], 'acc_entityId');
		accKey = PageManager.DataService.getControlInBranch(tab.rows[i], 'acc_entityKey');
		subledgerList = PageManager.DataService.getControlInBranch(tab.rows[i], 'subLedgerList');
		accEntty = PageManager.DataService.getControlInBranch(tab.rows[i], 'acc_entity');


		if(dr.value=='') dr.value = '0';
		if(cr.valtue=='') cr.value = '0';
		dr = dr.value;
		cr = cr.value;

		if(dr>0 && cr>0){
			alert('debit and credit both can not be supplied for any code');
			return false;
		}
		/*if(glCode != '' && dr == 0 && cr == 0){
			alert('supply Dr/Cr amount for the detailCodecode: ' + glCode + ' in row ' + i);
			return false;
		}*/
		if(glCode == ''){
			alert('supply glCode in row ' + i);
			return false;
		}
		for(var j=i+1; j<tab.rows.length; j++){
			glCode1 = PageManager.DataService.getControlInBranch(tab.rows[j], 'chartOfAccounts_glCode').value;
			accIdJthRow = PageManager.DataService.getControlInBranch(tab.rows[j], 'acc_entityId').value;
			accKeyJthRow = PageManager.DataService.getControlInBranch(tab.rows[j], 'acc_entityKey').value;
			if(glCode == glCode1 && accIdJthRow==accId && accKeyJthRow ==accKey ){
				alert('Account Code ' + glCode + ' with sub ledger type and entity type is duplicated');
				return false;
			}
		}
		if(glCode == '' && (dr=='' || dr==0) && (cr=='' || cr==0) && i>1){
			tab.deleteRow(i);
		}
			     /* if(len >1 && obj.selectedIndex==0)
	      {
	       alert("Plz chk the entity box");
	       return ;
	       }    */   
	       // Code -To select accounting Entity(subledger) info compulsorily to enter O.B control codes   
         
			if(accEntty.value=='' && subledgerList.length!=0)
			{
				alert("Please enter a value for entity in row number "+i);
				 return false;
			}            
                          
  if(glCode!='' && accId!='' && accKey==''){
			alert('select accounting entity in Row: ' + i);
			return false;
		}
	}

	glCode = PageManager.DataService.getControlInBranch(tab.rows[1], 'chartOfAccounts_glCode').value;
	dr = PageManager.DataService.getControlInBranch(tab.rows[1], 'txnSummary_opDr').value;
	cr = PageManager.DataService.getControlInBranch(tab.rows[1], 'txnSummary_opCr').value;
	if(glCode=='' && dr==0 && cr==0){
		alert('please fill the data');
		return false;
	}

	return true;
}
function afterUpdateService(){
	window.location = "OpeningBalance.htm"
}

function onClickCancel(){
	window.location = "OpeningBalance.htm"
}

/*
	We implement AJAX here. The remaining functions are present in script/jsCommonMethods.js.
	Whenever user enters some value this function will be triggered.
*/
function autocompletecode(obj)
		 {  
						var currentRow=PageManager.DataService.getRow(obj);
						var objType = document.getElementById('ftService_type');
						var fy = document.getElementById('financialYear_id');
						var fund = document.getElementById('fund_id');
						var department= document.getElementById('dept_name');
						var typeClass="";

							   	if(objType.selectedIndex > 0)
		    					 typeClass = objType.value;
		    					 else {
								    alert('please select Type');
								    PageManager.DataService.getControlInBranch(currentRow,"chartOfAccounts_glCode").value = '';
								    PageManager.DataService.getControlInBranch(currentRow,"chartOfAccounts_name").value = '';
								   return false;
									}

								if(fy.selectedIndex < 0 )
									{
					   				alert('please select financial year');
					   				PageManager.DataService.getControlInBranch(currentRow,"chartOfAccounts_glCode").value = '';
								    PageManager.DataService.getControlInBranch(currentRow,"chartOfAccounts_name").value = '';
									return false;
									}
								if(fund.selectedIndex < 0)
									{
					   				alert('please select Fund Name');
					   				PageManager.DataService.getControlInBranch(currentRow,"chartOfAccounts_glCode").value = '';
								    PageManager.DataService.getControlInBranch(currentRow,"chartOfAccounts_name").value = '';
									return false;
									}
								if(department.selectedIndex < 0)
								{
				   				alert('please select Department');
				   				PageManager.DataService.getControlInBranch(currentRow,"chartOfAccounts_glCode").value = '';
							    PageManager.DataService.getControlInBranch(currentRow,"chartOfAccounts_name").value = '';
								return false;
								}

					// set position of dropdown
		 			var src = obj;
		 			var target = document.getElementById('codescontainer');
		 			var posSrc=findPos(src);
		 			target.style.left=posSrc[0];
		 			target.style.top=posSrc[1]+25;
		 			target.style.width=500;

		 			var currRow=PageManager.DataService.getRow(obj);
		 			var coaCodeObj = PageManager.DataService.getControlInBranch(currRow,'chartOfAccounts_glCode');
					//40 --> Down arrow, 38 --> Up arrow
					//alert(yuiflag[currRow.rowIndex]);
		 			if(yuiflag[currRow.rowIndex] == undefined)
		    			{
		 						if(pressedKey != 40 )
		 						{
		 							if(pressedKey != 38 )
		 							{		var oAutoComp;
		 								    if(typeClass == 'L')
		 								    	{
		 									 	 oAutoComp = new YAHOO.widget.AutoComplete(coaCodeObj,'codescontainer', codeObjLiab);
		 									 	 }
		 								    else
		 								    	{
		 									 	oAutoComp = new YAHOO.widget.AutoComplete(coaCodeObj,'codescontainer', codeObjAsset);
		 										}
		 									oAutoComp.queryDelay = 0;
		 									oAutoComp.prehighlightClassName = "yui-ac-prehighlight";
		 									oAutoComp.useShadow = true;
		 									oAutoComp.maxResultsDisplayed = 15;
		    								oAutoComp.useIFrame = true;
		 							}
		 						}
		 			yuiflag[currRow.rowIndex] = 1;
		    			}
}

</script>
<SCRIPT LANGUAGE="javascript" SRC="../exility/PageManager.js"></SCRIPT>
<script type="text/javascript" src="/egi/commonyui/yui2.7/yuiloader/yuiloader-min.js"></script>
<script type="text/javascript" src="/egi/commonyui/yui2.7/yahoo-dom-event/yahoo-dom-event.js"></script>
<script type="text/javascript" src="/egi/commonyui/yui2.7/element/element.js"></script>
<script type="text/javascript" src="/egi/commonyui/yui2.7/connection/connection-min.js"></script>
<script type="text/javascript" src="/egi/commonyui/yui2.7/datasource/datasource-min.js"></script>
<script type="text/javascript" src="/egi/commonyui/yui2.7/datatable/datatable.js"></script>
<script type="text/javascript" src="/egi/commonyui/build/autocomplete/autocomplete-debug.js"></script>
<script type="text/javascript" src="/EGF/script/jsCommonMethods.js"></script>
</head>
<body  bgcolor="#ffffff" bottommargin="0" topmargin="0" rightmargin="0" leftmargin="0" marginheight="0" marginwidth="0" onLoad="onBodyLoad();" onKeyDown ="CloseWindow(event);">
<form name="openingBalance">

	<table width="100%" border=0 cellpadding="0" cellspacing="0" id=TABLE1>
		<tr >
			<td valign="top"><!------------Content begins here ------------------>
				<table width="100%" border=0 cellpadding="3" cellspacing="0" id="modeTable">
					<tr class="tableheader">
					   <td  valign="center" colspan="4"><span  id="screenName"></span></td>
					</tr>
					<tr >
					<!--	<td width="30%" class="labelcell" align="left">Set/Update  Opening Balance</td>-->
						<!--<td width="20%" align="left"><input type="radio" name="mode" id="mode" onClick="onClickRadio()"></td>-->
						<!--<td width="20%" align="right" class="labelcell">Update Opening Balance</td>-->
						<!--<td width="30%" align="left"><input type="radio" name="mode" id="mode" disabled=false onClick="onClickRadio()">-->
						<td><input type="hidden" id=modeTxt name=modeTxt></td>
					</tr>
					<tr ><td colspan="4">&nbsp;</td></tr>
					<tr  style="DISPLAY: none">
						<td><div align="right" valign="center" class="labelcell">Fund Name<span class="leadon">*</span></div></td>
						<td align="left"><span class="smallfieldcell">
							<SELECT name="fund_id" id="fund_id" class="fieldinput" exilListSource="fundNameList" exilMustEnter="true"></SELECT></span>
						</td>
						<td><div align="right" valign="center" class="labelcell">Department<span class="leadon">*</span></div></td>
						<td align="left"><span class="smallfieldcell">
							<SELECT class="fieldinput" id="dept_name" name="dept_name" class="fieldinput" exilListSource="departmentName" exilMustEnter="true"  ></SELECT>
						</td>   
						             
						<td ><div align="right" valign="center" class="labelcell">Financial Year<span class="leadon">*</span></div></td>
						<td align="left"><span class="smallfieldcell">
							<SELECT class="fieldinput" id='financialYear_id' name='financialYear_id' style="WIDTH: 120px" exilListSource="financialYearOpBal" exilMustEnter="true"></SELECT></span>
						</td>
						
					</tr>
					<tr  style="DISPLAY: none">
						<td valign="center" class="labelcell"  align=right><div> Type<span class="leadon">*</span></div></td>
						<td align=left valign="center" >
							<span class="smallfieldcell">
								<SELECT id="ftService_type" name="ftService_type" class="fieldinput" onchange="loadMajorHeads(this);" exilMustEnter="true">
									<OPTION value=""  selected></OPTION>
									<OPTION value=A> Asset</OPTION><OPTION  value=L>Liability</OPTION>
								</SELECT>
						    </span>
						</td>
						<td align="right"><div align="right" valign="center" class="labelcell">Major Head</div></td>
						<td><span class="smallfieldcell">
							<SELECT id="ftService_majorHead"  name="ftService_majorHead" class="combowidth2" onchange="loadMinorHeads(this)"></SELECT></span>
						</td>
					</tr>
					<tr  style="DISPLAY: none">
					<td><div align="right" valign="center" class="labelcell">Financing Source</div></td>
						<td><span class="smallfieldcell">
							<SELECT id="fundSourceId"  name="fundSourceId" class="fieldinput"  exilListSource="fundSourceNameList"></SELECT><div></div>
							<SELECT class="fieldinput" id="accEntity" name="accEntity" style="DISPLAY: none"></SELECT></span>
						</td>
						<td align="right"><div align="right" valign="center" class="labelcell">Minor Head</div></td>
						<td><span class="smallfieldcell">
							<SELECT id="ftService_minorHead"  name="ftService_minorHead"  class="combowidth3" style="width:284; height:22"></SELECT></span>
						</td>

					</tr>
				</table>
			</td>
		</tr>
		</table>
        <div style="width:775px;height:425px;">
	            <table width="100%" border="1" cellpadding="0" cellspacing="0" ID="gridOpeningBalance" name="gridOpeningBalance" style="DISPLAY: none" align=center>
		            <tr class="thStlyle" height="25">
			            <td width="15%"  ><div align="center"  >Account Code</div></td>
						<td width="30%"  ><div align="center">Account Head</div></td>
						<td><div align="center">Sub Ledger Type</div></td>
						<td width="20%"  ><div align="center">Entity</div></td>
                        <td width="15%"  ><div align="center">Debit&nbsp;Amount</div></td>
                        <td width="15%"  ><div align="center">Credit&nbsp;Amount</div></td>
                        <td width="15%"  ><div align="center">Narration</div></td>
                    </tr>

                    <tr class="fieldcell">
						<td><INPUT type="hidden"  name="chartOfAccounts_id" id="chartOfAccounts_id">
							<INPUT class="fieldinput-right" name="chartOfAccounts_glCode" id="chartOfAccounts_glCode" autocomplete="off" onkeyup="autocompletecode(this);" onBlur="fillNeibrAfterSplit(this,'chartOfAccounts_name');"  maxlength="20" style="WIDTH: 82; HEIGHT: 21" ><IMG id=IMG1 onclick="openSearch(this,'chartOfAccounts')" height=22 src="/egi/resources/erp2/images/plus1.gif" width=25 align=top border=0 >
						</td>
						<td>
							<input class="fieldinput-left" NAME="chartOfAccounts_name" id="chartOfAccounts_name" maxlength="50" style="WIDTH: 227px; HEIGHT: 22px" readOnly tabindex=-1 exilDataType="exilAnyChar">
						</td>
						<td>
							<span class="smallfieldcell" ><SELECT class="fieldinput" name="subLedgerList" id="subLedgerList"  ></SELECT></span>
						</td>
						<td>
							<input type="hidden" name="acc_entityId" id="acc_entityId">
							<input type="hidden" name="acc_entityKey" id="acc_entityKey"><span class="smallfieldcell" >
							<input name="acc_entity" id="acc_entity" class="fieldinput"   onkeyup="autocompleteEntitiesBy20(this)" onBlur="splitEntity(this);getKey(this);" style="WIDTH: 130; HEIGHT: 22"></span>
						</td>
						
						<td>
							<input type="hidden" name="txnSummary_id" id="txnSummary_id">
							<input class="fieldinput-right" NAME="txnSummary_opDr" id="txnSummary_opDr" maxlength="16" style="WIDTH: 130; HEIGHT: 22" size ="19" exilDataType="exilUnsignedDecimal" exilMax="9999999999999.99" exilMin="0" >
						</td>
						<td>
							<input class="fieldinput-right" NAME="txnSummary_opCr" id="txnSummary_opCr"  maxlength="16"  style="WIDTH: 130; HEIGHT: 22" size ="19" exilDataType="exilUnsignedDecimal" exilMax="9999999999999.99" exilMin="0">
						</td>
						<td><span class="labelcell">
						<TEXTAREA class=narrationfieldinput id=txnSummary_narration name=txnSummary_narration   exilDataType="exilAnyChar" MaxLength="250" rows="1" cols="20"></TEXTAREA></span>
						</td>
                    </tr>
                </table></div>
        <table>
        <tr><td id="auto-row" colspan="2">&nbsp;<td/></tr>
        <tr>
        <td>
        <div id="codescontainer"></div>
        </td>
        </tr>
    </table>

    <table align=center width="100%" border="0" cellpadding="0" cellspacing="0" ID="buttonTable" style="DISPLAY: none">
		<TR >
			<td height="25" colspan="4" valign="bottom" class="smalltext"><p class="smalltext">
				<span class="leadon">*</span>- Mandatory Fields</p>
			</td>
		</TR><!--  Buttons for Request Form starts here -->
		<tr >
			<td colspan="4" align="middle"><!-- Buttons Start Here -->
				<table border="0" cellpadding="0" cellspacing="0"  align="center">
 							 <tr>
							  <td><input   type="button" class="button" value="Add Row" onclick="addNewRow11('gridOpeningBalance','chartOfAccounts_glCode');" />
							  <input   type="button" class="button" value="Delete Row" onclick="deleteRowInGrid();" />
								</td>
							 </tr>
							 
							 <tr >
							 <td>
							 <input   type="button" class="button" value="Submit" onclick="buttonSubmit();" />
							 <input   type="button" class="button" value="Cancel" onclick="onClickCancel()" />
							 <input   type="button" class="button" value="Close" onclick=window.close(); />
							 </td>
						</tr></table><!-- Buttons End Here -->
			</td>
		</tr>
	</table>

	<table align=center width="100%" border="0" cellpadding="0" cellspacing="0" ID="buttonTableClose">
		<TR >

		</TR><!--  Buttons for Request Form starts here -->
		<tr >
			<td colspan="4" align="middle"><!-- Buttons Start Here -->
				<table border="0" cellpadding="0" cellspacing="0"  align="center" >
				 <tr >
				 <td>
				 <input   type="button" class="button" value="Close" onclick=window.close(); />
				 </td>
			</tr></table><!-- Buttons End Here -->
			</td>
		</tr>
	</table><!------------ Content ends here ------------------>


	<input type=hidden name=databaseDate  id=databaseDate>
</form>
<!--
 		<div style="position: absolute; top:170px;left:102px;width:118px;height:30px" id="menu-popup" >
		 <table id="completeTable" bgcolor="#cae1ff" border="1"/>
		 </div>   
		 -->

		 <div style="position: absolute; top:170px;width:118px;height:30px" id="menu-popup">
		    <table id="completeTable" bgcolor="#cae1ff" border="1"/>
		</div>
</body>
</html>
