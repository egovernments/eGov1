#-------------------------------------------------------------------------------
# eGov suite of products aim to improve the internal efficiency,transparency, 
#      accountability and the service delivery of the government  organizations.
#   
#       Copyright (C) <2015>  eGovernments Foundation
#   
#       The updated version of eGov suite of products as by eGovernments Foundation 
#       is available at http://www.egovernments.org
#   
#       This program is free software: you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation, either version 3 of the License, or
#       any later version.
#   
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#   
#       You should have received a copy of the GNU General Public License
#       along with this program. If not, see http://www.gnu.org/licenses/ or 
#       http://www.gnu.org/licenses/gpl.html .
#   
#       In addition to the terms of the GPL license to be adhered to in using this
#       program, the following additional terms are to be complied with:
#   
#   	1) All versions of this program, verbatim or modified must carry this 
#   	   Legal Notice.
#   
#   	2) Any misrepresentation of the origin of the material is prohibited. It 
#   	   is required that all modified versions of this material be marked in 
#   	   reasonable ways as different from the original version.
#   
#   	3) This license does not grant any rights to any user of the program 
#   	   with regards to rights under trademark law for use of the trade names 
#   	   or trademarks of eGovernments Foundation.
#   
#     In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
#-------------------------------------------------------------------------------
<!doctype html public "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>

<SCRIPT LANGUAGE="javascript">
var day, mon, yr ,flag="true",flag1="false";
var pageMode="modify";
var sameWindow=0;

function getData(){
	//PageManager.DataService.addNewRow('fiscalPeriodGrid');
	document.getElementById('financialYear_financialYear').focus();
	PageValidator.addCalendars();
	var financialYear_ID=PageManager.DataService.getQueryField('financialYear_ID');
	if(financialYear_ID){
	PageManager.DataService.callDataService('financialYearModData');
	document.getElementById('trModify').style.display='block';
	document.getElementById('trNew').style.display='none';

	}else{

	pageMode="add";
	//document.getElementById('screenName').innerHTML="Financial Year Add";
	document.getElementById('trModify').style.display='none';
	document.getElementById('trNew').style.display='block';

	//document.getElementById('submitButton').innerHTML="New";
	PageManager.DataService.callDataService('getStartingDate');
	}
}
/*function formatDate(dateText){
	if(!dateText) return;
	var months = ["NA","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
	dateText=dateText.substring(0,10);
	var dateArray= dateText.split('-');
	var newDate=dateArray[2]+"-"+ months[parseInt(dateArray[1], 10)] +"-"+dateArray[0];
	return newDate;
}*/

function fillEndingDate(obj){
	PageValidator.showCalendar("selectedDate");
	row = PageManager.DataService.getRow(obj);
	table = document.getElementById('fiscalPeriodGrid');
	ctrl = PageManager.DataService.getControlInBranch(table.rows[row.rowIndex].cells[2], 'fiscalPeriod_endingDate');
	dt = document.getElementById('selectedDate').value;
	//ctrl.value = dt == '' ? ctrl.value : dt;
	ctrl.value=dt;
	document.getElementById('selectedDate').value = "";
	fillDate(obj);
}



function ButtonPress(name){
if(name.toLowerCase()=='savenew')
 sameWindow=1;
		//   ***1 only FO***,  ***2 FO***,  ***Admin, 3 All***    //
	if(!isValidUser(2, CookieManager.getCookie('userRole')) ) return false;
	document.getElementById('egUser_id').value = CookieManager.getCookie('currentUserId');
	var cnt=document.getElementById('count').value;
	if(cnt==0){
    if(!checkForDate())
    return false;
    if(!checkLastDate())
    return false;
	if(pageMode=="add"){
	PageManager.UpdateService.submitForm('fiscalPeriodInsert');
	}else{
	PageManager.UpdateService.submitForm('fiscalPeriodUpdate');
	}
	}else{
	alert('Next Financial Year already allocated cannot Modify the End Date For FinancialYear');
	}
}
function getStartDate(){
	var table=document.getElementById('fiscalPeriodGrid');
	var stDate=document.getElementById('financialYear_startingDate').value;
	ctrl = PageManager.DataService.getControlInBranch(table.rows[1].cells[1],'fiscalPeriod_startingDate');
	ctrl.value = stDate;
}
function getEndDate(){
	PageValidator.showCalendar("financialYear_endingDate");
	var table=document.getElementById('fiscalPeriodGrid');
	var endDate=document.getElementById('financialYear_endingDate').value;
	checkEndDate();
	//checkForModify();
	/*if(flag=="true"){
	ctrl = PageManager.DataService.getControlInBranch(table.rows[1].cells[2],'fiscalPeriod_endingDate');
	ctrl.value = endDate;
	}*/
}


function add(month, dd)
{
	var months = ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"];
	if(month == 12){
		if(dd<31)	day++;
		if(dd==31){
			day = 1;
			yr++;
			mon = months[0];
		}
	}
	if(month==1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10){
		if(dd<31) day++;
		if(dd==31){
			day = 1;
			mon = months[month];
		}
	}
	if(month==4 || month == 6 || month == 9 || month == 11){
		if(dd<30) day++;
		if(dd==30){
			day = 1;
			mon = months[month];
		}
	}
}
function fillDate(obj)
{
	checkDate(obj);
	if(flag=="true" && flag1 =="false"){
	var table=document.getElementById('fiscalPeriodGrid');
	row=PageManager.DataService.getRow(obj);
	var dt = PageManager.DataService.getControlInBranch(table.rows[row.rowIndex].cells[2], 'fiscalPeriod_endingDate');
	dt=dt.value;
	var eDate=PageManager.DataService.getControlInBranch(table.rows[table.rows.length-1].cells[2], 'fiscalPeriod_endingDate');
	eDate=eDate.value;
	var name=PageManager.DataService.getControlInBranch(table.rows[row.rowIndex].cells[0], 'fiscalPeriod_name');
	name=name.value;
	if(dt != '' ){
	if(eDate =='' || name=='' || table.rows[row.rowIndex+1]!=null){
	alert('Fill Up all the data');
	//PageManager.DataService.addNewRow('fiscalPeriodGrid','fiscalPeriod_name');
	}else{
	//addNewRowOnCall('fiscalPeriodGrid','fiscalPeriod_name');
	dt1=formatDateToDDMMYYYY2(dt);
	if(!dateValid(dt1))
	{
	   alert('Invalid Date..');
	   obj.value='';
	   return;
	}
	PageManager.DataService.addNewRow('fiscalPeriodGrid');
	ctrl = PageManager.DataService.getControlInBranch(table.rows[row.rowIndex+1].cells[2],'fiscalPeriod_endingDate');
	ctrl.value  = "";
	ctrl = PageManager.DataService.getControlInBranch(table.rows[row.rowIndex+1].cells[0],'fiscalPeriod_name');
	ctrl.value  = "";
	}
	if(table.rows[row.rowIndex+1]!=null){
	//var arr = dt.split("-");
	var arr = dt.split("/");
	day = arr[0];
	mon = arr[1];
	yr = arr[2];
	//mon=parseInt(mon);alert(mon);
	switch(mon)
	{	default:alert('Invalid Month');break;
		case "01":		add(1,day);	break;
		case "02":
			if(parseInt(day) == 29){
				mon = "03";
				day = 1;
			}
			else if (parseInt(day)==28)
				if(parseInt(yr)%4 == 0 || parseInt(yr)%400 == 0) day = parseInt(day) + 1;
				else{
					day = 1;
					mon = "03";
				}
			else if(parseInt(day)<28)	day = parseInt(day) + 1;

			break;
		case "03":		add(3, day); break;
		case "04":		add(4, day); break;
		case "05":		add(5, day); break;
		case "06":		add(6, day); break;
		case "07":		add(7, day); break;
		case "08":		add(8, day); break;
		case "09":		add(9, day); break;
		case "10":		add(10, day); break;
		case "11":		add(11, day); break;
		case "12":		add(12, day); break;
	}

	//newDate = day + '-' + mon + '-' + yr;
	newDate = day + '/' + mon + '/' + yr;
	ctrl = PageManager.DataService.getControlInBranch(table.rows[row.rowIndex+1].cells[1],'fiscalPeriod_startingDate');
	ctrl.value  = newDate;

	}
  }
 }
}
function checkDate(obj)
{	flag="true";
	flag1="false";
	var table=document.getElementById('fiscalPeriodGrid');
	row=PageManager.DataService.getRow(obj);
	var dt1=document.getElementById('financialYear_endingDate').value;
	var dt2 = PageManager.DataService.getControlInBranch(table.rows[row.rowIndex].cells[2], 'fiscalPeriod_endingDate');
	dt2=dt2.value;
	//comparedate function except the format dd-mon-yyyy so formating the date
	dt1=formatDate5(dt1);
	dt2=formatDate5(dt2);

	if(compareDate(dt1,dt2)<0){
	 alert('InValid date');
	var dtCl = PageManager.DataService.getControlInBranch(table.rows[row.rowIndex].cells[2], 'fiscalPeriod_endingDate');
	 dtCl.value = '';
	 flag="false";
	 }
	 else if(compareDate(dt1,dt2)==0){
		flag1="true";
	 }else{
	  var dt3 = PageManager.DataService.getControlInBranch(table.rows[row.rowIndex].cells[1],'fiscalPeriod_startingDate');
	  dt3=dt3.value;
	  dt3=formatDate5(dt3);

	 if(compareDate(dt3,dt2)>0){
	 alert('InValid Ending Date');
	 var dtCl = PageManager.DataService.getControlInBranch(table.rows[row.rowIndex].cells[2], 'fiscalPeriod_endingDate');
	 dtCl.value = '';
	 flag="false";
	 }
	}
}
function afterRefreshPage(dc){
		//count = dc.grids['fiscalPeriodGrid'].length;

			var fin_startingDate=dc.values['financialYear_startingDate'];
			if(fin_startingDate == null)	return false;

			//fin_startingDate=formatDate(fin_startingDate);
			fin_startingDate=formatDate2(fin_startingDate);
			document.getElementById('financialYear_startingDate').value=fin_startingDate;

			var fin_endingDate=dc.values['financialYear_endingDate'];
			if(fin_endingDate == null)	return false;

			//fin_endingDate=formatDate(fin_endingDate);
			fin_endingDate=formatDate2(fin_endingDate);
			document.getElementById('financialYear_endingDate').value=fin_endingDate;
			if(dc.values['serviceID']== 'financialYearModData' && dc.values['posting']==1){
				document.financialYear.isActiveForPosting.checked=true;
			}
}

function beforeRefreshPage(dc){
		if(pageMode=="add"){
			var sDate=dc.values['startDate'];
			if(sDate =='' || sDate == null){
			prnt=document.getElementById('financialYear_startingDate');
			prnt.setAttribute('exilCalendar','true');
			PageValidator.addCalendars();
			}else{
			//sDate=formatDate(sDate);
			sDate=formatDate2(sDate);
			document.getElementById('financialYear_startingDate').value =sDate;
			}
			getStartDate();
		}

		var tabObj=dc.grids['fiscalPeriodGrid'];
		if(!tabObj)	return true;

		for(var i=1;i<tabObj.length;i++){
	   // tabObj[i][2]=formatDate(tabObj[i][2]);
		//tabObj[i][3]=formatDate(tabObj[i][3]);
		tabObj[i][2]=formatDate2(tabObj[i][2]);
		tabObj[i][3]=formatDate2(tabObj[i][3]);
    }
	 return true;
 }
function onClickCancel(){
	window.location="FinancialYearAdd.htm?showMode=new";
}

function afterUpdateService(dc){
	//PageManager.UpdateService.fillMessage(dc.messages);
	str = "DC came back with success=" + dc.success + " and other fields are\n";
	if(sameWindow == 1){
	  window.location="FinancialYearAdd.htm?showMode=new";
      }else{
      window.close();
	//window.location="FinancialYearEnq.htm?fin_year="+document.getElementById('financialYear_financialYear').value;

	}
	sameWindow=0;
	return true;
}

function checkEndDate(){
	var dt1=document.getElementById('financialYear_startingDate').value;
	var dt2=document.getElementById('financialYear_endingDate').value;
	dt1=formatDate5(dt1);
	dt2=formatDate5(dt2);
	if(compareDate(dt1,dt2)>0){
	alert('Year End date cannot be less than Year Start date');
	 document.getElementById('financialYear_endingDate').value="";
	flag="false";
	}else
	flag="true";
}
function checkForDate(){
	var table=document.getElementById('fiscalPeriodGrid');
	var i;
	for(i=1;i<table.rows.length-1; i++){
	var dt1 = PageManager.DataService.getControlInBranch(table.rows[i].cells[2], 'fiscalPeriod_endingDate');
	 dt1=dt1.value;
	 dt1=formatDate5(dt1);
	 var dt2 = PageManager.DataService.getControlInBranch(table.rows[i+1].cells[1], 'fiscalPeriod_startingDate');
     dt2=dt2.value;
      dt2=formatDate5(dt2);
	 if(compareDate(dt1,dt2)>0){
	 alert('EndingDate is greater than next StartingDate');
	 PageManager.DataService.getControlInBranch(table.rows[i].cells[2], 'fiscalPeriod_endingDate').focus();
	 return false;
	 }
	}
	for(i=1;i<table.rows.length;i++){
		var dt1 = PageManager.DataService.getControlInBranch(table.rows[i].cells[2], 'fiscalPeriod_endingDate');
	     dt1=dt1.value;
	      dt1=formatDate5(dt1);
		var dt3 = PageManager.DataService.getControlInBranch(table.rows[i].cells[1], 'fiscalPeriod_startingDate');
     	dt3=dt3.value;
     	 dt3=formatDate5(dt3);
     	var dt4 = document.getElementById('financialYear_endingDate').value;
     	 dt4=formatDate5(dt4);
     	if(compareDate(dt1,dt3)<0){
	  	alert('Stating Date is greater than Ending Date ');
	  	PageManager.DataService.getControlInBranch(table.rows[i].cells[2], 'fiscalPeriod_endingDate').focus();
	   	return false;
	 }
	 if(compareDate(dt1,dt4)>0){
	 	alert('Fiscal Period Ending Date is greater than FinancialYear Ending Date');
	 	return false;
	 }
	}

	return true;
}

function compareDate(d1,d2){
	 var diff=0;
	 var arr1 = d1.split("-");
	 day = arr1[0];	 mon = arr1[1];	 yr = arr1[2];
	 date1= arr1[1]+' '+arr1[0]+' ' +arr1[2];
	 date1=new Date(date1);

	 var arr2 = d2.split("-");
	 day = arr2[0];	 mon = arr2[1];	 yr = arr2[2];
	 date2= arr2[1]+' '+arr2[0]+' ' +arr2[2];
	 date2=new Date(date2);
	 diff=date1-date2;
	 diff=diff/(1000*60*60*24);
	 return diff;
}
function checkForModify(obj){
    dt=obj.value;
    dt=formatDateToDDMMYYYY2(dt);
	if(!dateValid(dt))
	{
	   alert('Invalid Date..');
	   obj.value='';
	   return;
	}

	//PageManager.DataService.setQueryField('endDate',document.getElementById('financialYear_endingDate').value);
	//PageManager.DataService.callDataService('checkEndDate');
}
function checkLastDate(){
		var table=document.getElementById('fiscalPeriodGrid');
	    var eDate1=document.getElementById('financialYear_endingDate').value;
	    var eDate2=PageManager.DataService.getControlInBranch(table.rows[table.rows.length-1].cells[2], 'fiscalPeriod_endingDate');
	    eDate2=eDate2.value;
	    eDate1=formatDate5(eDate1);
	    eDate2=formatDate5(eDate2);
	    if(compareDate(eDate1,eDate2)==0)
	    {
			return true;
	    }else{
	    	alert('Fiscal Period Last Ending Date is not matching with Financial Year Ending Date');
	    	eDate2=PageManager.DataService.getControlInBranch(table.rows[table.rows.length-1].cells[2], 'fiscalPeriod_endingDate').focus();
	    	return false;
	    }
}
</SCRIPT>
</head>
<body bgcolor="#ffffff" bottommargin="0" topmargin="0" rightmargin="0" leftmargin="0" marginheight="0" marginwidth="0" onLoad="getData();" onKeyDown ="CloseWindow(event);"><!------------------ Header Begins Begins--------------------->
<form name="financialYear">
<input type="hidden" name="egUser_id" id="egUser_id">
<input type="hidden" name="financialYear_ID" id="financiaYear_ID">
<input type="hidden" name="tableName" id="tableName" value="financialYear">
<input  type="hidden" name="startDate" id="startDate">
<input  type="hidden" name="count" id="count">
	<table width="100%" border=0 cellpadding="3" cellspacing="0">


		<tr >
			<td class="labelcell" width="19%" ></td>
			<td width="23%" align="right"><div  valign="center" class="labelcell">Financial Year<span class="leadon">*</span></div></td>
			<td width="20%">
				<span class="smallfieldcell"><input class="fieldinput" name="financialYear_financialYear" id="financialYear_financialYear" exilMustEnter="true" exilDataType="exilAnyChar" ></span>
			</td>

			<td width="36%"  ><div align="right" valign="center" class="labelcell"> </div></td>
			<!-- td width="23"><div align="right" valign="center" class="labelcell"> </div></td -->

		</tr>
		<tr >
			<td width="19%" ><div align="right" valign="center" class="labelcell">Starting Date</div></td>
			<td width="23%" ><!--<input class="datefieldinput" name="financialYear_startingDate"  id="financialYear_startingDate" exilDataType="exilAnyDate" exilCalendar="true" exilMustEnter="true" onclick="getStartDate();" size="20">-->
				<span class="smallfieldcell"><input class="datefieldinput" name="financialYear_startingDate"  id="financialYear_startingDate" onkeyup="DateFormat(this,this.value,event,false,'3')" readonly exilMustEnter="true" exilDataType="exilAnyDate" tabindex=-1 ></span>
			</td>

			<td width="20%" ><div align="right" valign="center" class="labelcell">Ending Date</div></td>
			<td width="36%" >
				<span class="smallfieldcell"><input class="datefieldinput" name="financialYear_endingDate"  id="financialYear_endingDate"  onkeyup="DateFormat(this,this.value,event,false,'3')" onBlur="checkEndDate();checkForModify(this)" exilMustEnter="true"
      exilDataType="exilAnyDate"></span>
				<A onclick="getEndDate()" tabIndex=-1 href="#">
                <IMG tabIndex=-1 height=22 src="/egi/resources/erp2/images/calendar.gif" width=22></A>
			</td>
		</tr>

		<tr >
			<td width="19%" ><div align="right" valign="center" class="labelcell">Open For Posting</div></td>
			<td width="23%" ><!--<input class="datefieldinput" name="financialYear_startingDate"  id="financialYear_startingDate" exilDataType="exilAnyDate" exilCalendar="true" exilMustEnter="true" onclick="getStartDate();" size="20">-->
				<input type=checkbox  name="isActiveForPosting" id="isActiveForPosting" value="1">
			</td>
			<td></td>
			<td width="36%"></td>
		</tr>

		<tr ><!--<td width="118" ><div align="right" valign="center" class="labelcell">Define FiscalPeriod</div></td>

							  <td height="19" colspan=2 width="613"><div align="center" class="labelcell" >

                            No<input type="radio" name="fiscalPeriod" value="no"
                                	id="fiscalPeriod" onClick="onSelectDesc();">
                            Yes<input type="radio" value="yes" checked name="fiscalPeriod"
	                                id="fiscalPeriod" onClick="onSelectDesc();"> -->
	</tr>

</table>

	<table width="50%" border="1" cellpadding="0" cellspacing="0" name="fiscalPeriodGrid" id="fiscalPeriodGrid" align="center">
		<tr class="thStlyle">
			<td width="143" ><div align="center" >Fiscal Period Name</div></td>
			<td width="143" ><div align="center">Starting Date</div></td>
			<td width="134" ><div align="center">Ending Date</div><input type="hidden" size=2 name="selectedDate" id="selectedDate"></td>
		</tr>

		<tr class="smallfieldcell">
			<td>
			<input  type="hidden" name="fiscalPeriod_ID" id="fiscalPeriod_ID">
            <input class="fieldInput" id="fiscalPeriod_name" name="fiscalPeriod_name" onblur="getStartDate()" exilMustEnter="true" exilDataType="exilAnyChar" style="width:132; height:20" >&nbsp;
      <DIV></DIV></td>
			<td width="143">
			<input  name="fiscalPeriod_startingDate" id="fiscalPeriod_startingDate" maxlength="11" size="30" readOnly tabIndex=-1 exilDataType="exilAnyDate"></td></TD>
			<td width="134"><input class="datefieldinput" name="fiscalPeriod_endingDate" id="fiscalPeriod_endingDate" maxlength="11" size="30" onkeyup="DateFormat(this,this.value,event,false,'3')" onBlur="fillDate(this);" exilMustEnter="true"
      exilDataType="exilAnyDate"><A onclick="fillEndingDate(this)" tabIndex=-1 href="#"><IMG id=IMG1 tabIndex=-1 height=22 src="/egi/resources/erp2/images/calendar.gif" width=22 ></A></td></TD></TD>
		</tr>
	        </table>
			<tr >
				<td colspan="4" align="middle"><!-- Buttons Start Here -->
					<table border="0" cellpadding="0" cellspacing="0" align="center">
						<tr>
							<td colspan=11> &nbsp;</td>
						</tr>
			<tr >
							<td colspan="4" align="middle" width="100%"><!-- Buttons Start Here -->
								<table border="0" cellpadding="0" cellspacing="0"  align="center">
							 <tr  name="trModify" id="trModify">
							 <td>
							 <input  id=submitButton type="button" class="button" value="Submit" onclick="return ButtonPress('saveclose');" />
							 <input   type="button" class="button" value="Cancel" onclick="onClickCancel()" />
							 <input   type="button" class="button" value="Close" onclick=window.close(); />
							 </td>
						</tr></table>
						<table border="0" cellpadding="0" cellspacing="0"  align="center">
							 <tr name="trNew" id="trNew">
							 <td>
							 <input id=savenNew type="button" class="button" value="Save & New" onclick="ButtonPress('savenew');"/>
							 <input  id=savenClose   type="button" class="button" value="Save & Close" onclick="ButtonPress('saveclose');" />
							 <input   type="button" class="button" value="Cancel" onclick="onClickCancel()" />
							 <input   type="button" class="button" value="Close" onclick=window.close(); />
							 </td>
						</tr></table>
					</td>
				</tr>

	</table>
</form>

</body>
</html>
