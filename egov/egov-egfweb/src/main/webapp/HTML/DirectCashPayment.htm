#-------------------------------------------------------------------------------
# eGov suite of products aim to improve the internal efficiency,transparency, 
#      accountability and the service delivery of the government  organizations.
#   
#       Copyright (C) <2015>  eGovernments Foundation
#   
#       The updated version of eGov suite of products as by eGovernments Foundation 
#       is available at http://www.egovernments.org
#   
#       This program is free software: you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation, either version 3 of the License, or
#       any later version.
#   
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#   
#       You should have received a copy of the GNU General Public License
#       along with this program. If not, see http://www.gnu.org/licenses/ or 
#       http://www.gnu.org/licenses/gpl.html .
#   
#       In addition to the terms of the GPL license to be adhered to in using this
#       program, the following additional terms are to be complied with:
#   
#   	1) All versions of this program, verbatim or modified must carry this 
#   	   Legal Notice.
#   
#   	2) Any misrepresentation of the origin of the material is prohibited. It 
#   	   is required that all modified versions of this material be marked in 
#   	   reasonable ways as different from the original version.
#   
#   	3) This license does not grant any rights to any user of the program 
#   	   with regards to rights under trademark law for use of the trade names 
#   	   or trademarks of eGovernments Foundation.
#   
#     In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
#-------------------------------------------------------------------------------
<!doctype html public "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<SCRIPT LANGUAGE="javascript">
var isDrillDown=false;
var mode="";
var sameWindow=0;
var state;
var amount,passedAmount;
var isIE;
var req2;
var req;
var codeArray=new Array();
var j=-1;
var k=-1;
var acccodeArray,functionArray;
var codeObj,functionObj ;
var yuiflag = new Array();


function onBodyLoad(){

	PageValidator.addCalendars();
	PageManager.ListService.callListService();
	document.getElementById("actionId").value=PageManager.DataService.getQueryField('actionId');
	//alert(document.getElementById("actionId").value);
	var cgn=PageManager.DataService.getQueryField('cgNumber');
	mode=PageManager.DataService.getQueryField('showMode');
/*	switch (mode) {
		case "paymentCash":document.getElementById('screenName').innerHTML="Cash Payment";break;
		case "viewCash":document.getElementById('screenName').innerHTML="View Cash Payments";break;
		case "reverseCash":document.getElementById('screenName').innerHTML="Reverse Cash Payments";break;
		case "edit":document.getElementById('screenName').innerHTML=" Cash Payments -Modify";break;

	}
*/
/*	if(cgn && (mode=="reverseCash")){
		isDrillDown=true;
		PageManager.DataService.setQueryField('cgNumber',cgn);
		PageManager.DataService.callDataService('getDCPDetails');
		document.getElementById('cgnText').style.display='block';
		hideButtons();
		disableControls(0,true);
	 }else if(mode=="paymentCash"){
	    hideBut();
		PageManager.DataService.callDataService('cgNumber');
		PageManager.DataService.addNewRow('gridDirectCashPayment');
		document.directCashPayment.voucherHeader_voucherNumber.focus();
		obj=document.getElementById('modGrid').style.display="none";

        }
       else if (mode=="viewCash"){
       PageManager.DataService.setQueryField('cgNumber',cgn);
		PageManager.DataService.callDataService('getDCPDetails');

		hideAllButtons();
		disableControls(0,true);

	} */
	if(mode=="reverseCash"){
		isDrillDown=true;
		PageManager.DataService.setQueryField('cgNumber',cgn);
		PageManager.DataService.callDataService('getDCPDetails');
		document.getElementById('cgnLabel').style.display='block';
		document.getElementById('cgnText').style.display='block';
		document.getElementById('voucherHeader_voucherNumber').setAttribute('exilDataType','exilAlphaNumeric');
		hideButtons();
		disableControls(0,true);
		document.getElementById('boundarytableGrid').style.display="none";
		 document.getElementById('backbutton').style.display="none";
		document.getElementById('boundaryLevelId').removeAttribute('exilMustEnter');

	 }else if(mode=="paymentCash"){
	    hideBut();
		PageManager.DataService.callDataService('cgNumber');
		PageManager.DataService.addNewRow('gridDirectCashPayment');
		document.directCashPayment.voucherHeader_voucherNumber.focus();
		obj=document.getElementById('modGrid').style.display="none";
		document.getElementById('statusInfo').style.display ="none";
		 document.getElementById('backbutton').style.display="none";
		var objBnd=document.getElementById('boundaryLevelId');
		objBnd.setAttribute("exilListSource","BoundaryLevelList");
		PageManager.DataService.callDataService('BoundaryLevelList');

        }
        else if(mode=="edit"){

				//PageManager.DataService.callDataService('miscReceiptList');
				PageManager.DataService.setQueryField('cgNumber',cgn);
				PageManager.DataService.callDataService('getDCPDetails');
				//obj.setAttribute('exilListSource','conBillDetail_worksDetailID');
				document.getElementById('voucherHeader_voucherNumber').setAttribute('exilDataType','exilAlphaNumeric');
		  		document.getElementById('modGrid').style.display='none';
		  		document.getElementById('submitGrid').style.display ="none";
		  		document.getElementById('saveandnew').style.display ="none";
		  		document.getElementById('cgnLabel').style.display='block';
		  		document.getElementById('cgnText').style.display='block';
		  		document.getElementById('backbutton').style.display='none';
		  		var objBnd=document.getElementById('boundaryLevelId');
				objBnd.setAttribute("exilListSource","BoundaryLevelList");
				PageManager.DataService.callDataService('BoundaryLevelList');



		  		edit();
		 	 }

       else if(mode=="viewCash"){
       PageManager.DataService.setQueryField('cgNumber',cgn);
		PageManager.DataService.callDataService('getDCPDetails');
		document.getElementById('cgnLabel').style.display='block';
		document.getElementById('cgnText').style.display='block';
		hideAllButtons();
		disableControls(0,true);
		document.getElementById('boundarytableGrid').style.display="none";
		 document.getElementById('backbutton').style.display='block';
		document.getElementById('boundaryLevelId').removeAttribute('exilMustEnter');
 }

 	// add codescontainer div dynamically
 	/*var par=document.getElementById('codescontainerParent');
 	var newDiv=document.createElement('div');
 	newDiv.setAttribute('id','codescontainer');
 	par.appendChild(newDiv);
*/	/*
	 * The following code for account code implements Ajax autocomplete through YUI.
	 *
	 */
	       var type='getAllCoaCodes';
            var url = "../commons/Process.jsp?type=" +type+ " ";
           	var req2 = initiateRequest();
            req2.onreadystatechange = function()
            {
	                  if (req2.readyState == 4)
	                  {
	                      if (req2.status == 200)
	                      {
	                      	var codes2=req2.responseText;
	                      	var a = codes2.split("^");
							var codes = a[0]; //alert(acccodeArray);
							acccodeArray=codes.split("+");
							codeObj = new YAHOO.widget.DS_JSArray(acccodeArray);
	                      }
	                  }
	        };
	        req2.open("GET", url, true);
	        req2.send(null);

		/*
		 * The following code implements Ajax autocomplete through YUI for function name.
		 *
		 */
			  var type='getAllFunctionName';
			  var url1 = "../commons/Process.jsp?type=" +type+ " ";
				var req3 = initiateRequest();

			  req3.onreadystatechange = function()
			  {		//codeObj=null;
					   if (req3.readyState == 4)
					   {
						  if (req3.status == 200)
						  {
							var codes2=req3.responseText;
							var a = codes2.split("^");
								var codes = a[0];
								functionArray=codes.split("+");// alert(functionArray);
								functionObj = new YAHOO.widget.DS_JSArray(functionArray);
						  }
					   }
			   };
			   req3.open("GET", url1, true);
			   req3.send(null);

		 }

		function autocompletecode(obj)
		{

			// set position of dropdown
			var src = obj;
			var target = document.getElementById('codescontainer');
			var posSrc=findPos(src);
			target.style.left=posSrc[0];
			target.style.top=posSrc[1]+25;
			target.style.width=500;

			var currRow=PageManager.DataService.getRow(obj);
			var coaCodeObj = obj;//PageManager.DataService.getControlInBranch(currRow,'chartOfAccounts_glCodeearning');
			//40 --> Down arrow, 38 --> Up arrow
			if(yuiflag[currRow.rowIndex] == undefined)
   		{
						if(event.keyCode != 40 )
						{
							if(event.keyCode != 38 )
							{
									var oAutoComp = new YAHOO.widget.AutoComplete(coaCodeObj,'codescontainer', codeObj);
									oAutoComp.queryDelay = 0;
									oAutoComp.prehighlightClassName = "yui-ac-prehighlight";
									oAutoComp.useShadow = true;
									oAutoComp.maxResultsDisplayed = 15;
   								oAutoComp.useIFrame = true;
							}
						}
						yuiflag[currRow.rowIndex] = 1;
						   		}


		}

		 function autocompletecodeFunction(obj)
		{
			 // set position of dropdown
			var src = obj;
			var target = document.getElementById('codescontainer');
			//target.style.position="absolute";
			var posSrc=findPos(src);
			target.style.left=posSrc[0]+5;
			target.style.top=posSrc[1]+25;
			target.style.width=200;

			var currRow=PageManager.DataService.getRow(obj);
			var coaCodeObj = obj;//PageManager.DataService.getControlInBranch(currRow,'function_code');
			//40 --> Down arrow, 38 --> Up arrow
			if(yuiflag[currRow.rowIndex] == undefined)
   		{
			if(event.keyCode != 40 )
			{
				if(event.keyCode != 38 )
				{
						var oAutoComp = new YAHOO.widget.AutoComplete(coaCodeObj,'codescontainer', functionObj);
						oAutoComp.queryDelay = 0;
						oAutoComp.prehighlightClassName = "yui-ac-prehighlight";
						oAutoComp.useShadow = true;
						oAutoComp.maxResultsDisplayed = 15;
   						oAutoComp.useIFrame = true;
				}
			}
			yuiflag[currRow.rowIndex] = 1;
   		}
		}

		 function fillNeibrAfterSplit(obj,neibrObjName)
		 {
			var temp = obj.value; temp = temp.split("`-`");
						obj.value=temp[0];
			 			PageManager.DescService.onblur(neibrObjName);
						var currRow=PageManager.DataService.getRow(obj);
						yuiflag[currRow.rowIndex] = undefined;
						neibrObj=PageManager.DataService.getControlInBranch(currRow,neibrObjName);
			if(temp[1]==null) return; else 	neibrObj.value = temp[1];
		 }

	function edit(){
				var cgn=PageManager.DataService.getQueryField('cgNumber');
		 		if(cgn){
		 			//document.forms[0].voucherHeader_cgn.disabled=true;
		 			//document.forms[0].voucherHeader_voucherNumber.disabled=true;
		 			document.getElementById('submitGrid2').style.display ="block";
					document.getElementById('modeOfExec').value="edit";
					//enableControls(0,false);
		 	 	}
		}


function beforeRefreshPage(dc)
{
	if(dc.values['glCodeName'])
		{
		  glNameCode=dc.values['glCodeName'];
		 showEntry();
	}

	if(!isNaN(parseInt(dc.values['voucherHeader_cgn'])))
	dc.values['voucherHeader_cgn'] = 'DCP' + dc.values['voucherHeader_cgn'];
	if( dc.values['serviceID']=='getDCPDetails')
	dc=createRowIndex(dc,'gridDirectCashPayment','entities_grid');
}


function afterRefreshPage(dc)
{
		var sm=PageManager.DataService.getQueryField('showMode');
		if (sm=='edit' && dc.values['serviceID']=='getDCPDetails' )
		{
			document.getElementById("voucherHeader_voucherNumberPrefix").style.display="block";
			var vnum=dc.values['voucherHeader_voucherNumber'];
			var subVnum=vnum.substring(0,2);
			document.getElementById("voucherHeader_voucherNumber").value=vnum.substring(2,vnum.length);
			document.getElementById("voucherHeader_voucherNumberPrefix").value=subVnum;
			if(document.getElementById("oldVoucherDate").value == "")
		    {
				document.getElementById("oldVoucherDate").value=formatDate2(dc.values['voucherHeader_voucherDate']);
		 	}
		 	//alert(document.getElementById("oldVoucherDate").value);
		}

			if(dc.values['databaseDate']!='' && dc.values['serviceID']=='cgNumber')
			{
			var dt=dc.values['databaseDate']
			document.getElementById('voucherHeader_voucherDate').value=dt;
			}
	var voucherStatus=dc.values['voucherHeader_status'];
		var voucherConfirmed=dc.values['voucherHeader_confirmed'];
		if(voucherConfirmed=='0')
			document.getElementById('voucherHeader_status').value="Unconfirmed";
		else if(voucherConfirmed=='1' && voucherStatus=='0')
			document.getElementById('voucherHeader_status').value="Confirmed";
		else if(voucherStatus=='1')
			document.getElementById('voucherHeader_status').value="Reversed";
		else if(voucherStatus=='2')
	document.getElementById('voucherHeader_status').value="Reversal";
	var voucherHeader_voucherDate=dc.values['voucherHeader_voucherDate'];
	if(voucherHeader_voucherDate){
	voucherDate=formatDate2(voucherHeader_voucherDate);
	document.getElementById('voucherHeader_voucherDate').value=voucherDate;
	}
	var chequeDetail_chequeDate=dc.values['chequeDetail_chequeDate'];
	if(chequeDetail_chequeDate){
	chequeDetail_chequeDate=formatDate2(chequeDetail_chequeDate);
	document.getElementById('chequeDetail_chequeDate').value=chequeDetail_chequeDate;
	}
	var miscBillDetail_billDate=dc.values['miscBillDetail_billDate'];
	if(miscBillDetail_billDate){
	miscBillDetail_billDate=formatDate2(miscBillDetail_billDate);
	document.getElementById('miscBillDetail_billDate').value=miscBillDetail_billDate;
	}
	var tab=dc.grids['gridDirectCashPayment'];
	if(tab){
			var count1=0,count2 = 0;
			for(var i=1;i<tab.length;i++){
			count1 += parseFloat(tab[i][4]);
			count2 += parseFloat(tab[i][5]);
			}
			document.getElementById("debitTotal").value = count1;
			document.getElementById("creditTotal").value = count2;
		}
	/*billCollector_id = PageManager.DataService.getQueryField('billCollectorId');
	fund_id = PageManager.DataService.getQueryField('fundId');
	department_id = PageManager.DataService.getQueryField('departmentId');

	if(billCollector_id != null)
		dc.values['billCollector_id'] = billCollector_id;
	if(department_id != null)
		dc.values['department_id'] = department_id;
	if(fund_id != null)
		dc.values['fund_id'] = fund_id;		*/

		var countboundary=dc.values['noOfBoundaryLevels'];
			if(countboundary==1){
				var boundaryLevelId=dc.values['boundaryLevelId'];
				var boundaryTypeId=dc.values['boundaryTypeId'];
				PageManager.DataService.setQueryField('boundaryLevelId',boundaryLevelId);
				PageManager.DataService.setQueryField('boundaryTypeId',boundaryTypeId);
				PageManager.DataService.callDataService('DefaultChequeValue');
				PageManager.DataService.callDataService('DefaultCashValue');

			}
				var bonLen= document.getElementById('boundaryLevelId');
				if(bonLen.selectedIndex != -1 && bonLen.value.length>0) {
				if(document.getElementById('chequeInHand').value.length==0)
					document.getElementById('chequeInHand').value=dc.values['chequeinhand'];
				if(document.getElementById('chequeInHand').value.length==0)
					document.getElementById('cashInHand').value=dc.values['cashinhand'];

				}
				if(state=="onclick")
				 {
					amount=dc.values['MAXAmount'];
					passedAmount=dc.values['voucherDetail_passedAmount'];
				 }

}


function getCashInHand(obj)
{
	PageManager.DataService.setQueryField('billCollector_id',obj.options[obj.selectedIndex].value);
	PageManager.DataService.callDataService('jobCashInHand');
}

function getAccountNumbers()
			{
				var ctrl = document.getElementById('bank_id');
				var branchid = ctrl.options[ctrl.selectedIndex].value;
				var a = Array(2);
				a = branchid.split('-');
				branchid = a[1];

				var obj = document.getElementById('accountGroup_accountNumberId');
				obj.setAttribute('exilListSource','accountList');

				PageManager.DataService.setQueryField('branchId',branchid);
				PageManager.DataService.callDataService('accNumber');
				//accountGroup_accountNumberId
			}

function funClear(obj, tableName)
		 {
		   if(tableName.toLowerCase() == 'chartofaccounts')
			{
				var v =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode,'function_code')
				var w =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode,'cv_fromFunctionCodeId')
				if(v.value=="")
				{
				v.value = "";
				w.value = "";
				}
			}
		}
function openSearch(obj,tableName)
{
	if(PageManager.DataService.getQueryField('showMode')!=null && (PageManager.DataService.getQueryField('showMode')=='viewCash' || PageManager.DataService.getQueryField('showMode')=='reverseCash')) return false;
	var a = new Array(2);
    var sRtn =showModalDialog("Search.html?filterServiceID=5","","dialogLeft=300;dialogTop=210;dialogWidth=305pt;dialogHeight=300pt;status=no;");
    if ( sRtn != '' )
	{
		a = sRtn.split("`~`");
		var x =PageManager.DataService.getControlInBranch(obj.parentNode,'chartOfAccounts_glCode');
		var y =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode,'chartOfAccounts_name');
	/*	var v =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode,'function_code')
		var w =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode,'cv_fromFunctionCodeId')*/
		x.value = a[0];
		y.value = a[1];
	/*	if(v.value=="")
		{
		v.value = a[3];
		w.value = a[4];
		}
		//alert("a 0 value= "+a[0]+" a 1 value = " +a[1]+" a 2 value ="+a[2]+" a 3 value = " +a[3]+" a 4 value= "+a[4]);*/
	}

}
function openSearch1(obj, tableName){
	if(PageManager.DataService.getQueryField('showMode')!=null && (PageManager.DataService.getQueryField('showMode')=='viewCash' || PageManager.DataService.getQueryField('showMode')=='reverseCash')) return false;
		var a = new Array(2);
		var sRtn;
		var str="";
		if(tableName.toLowerCase()=='function'){
		 str = "Search.html?tableNameForCode=function";

		sRtn= showModalDialog(str,"",
				"dialogLeft=300;dialogTop=210;dialogWidth=305pt;dialogHeight=300pt;status=no;");
		if(sRtn != '')
		{
			a = sRtn.split("`~`");

			if(tableName.toLowerCase() == 'function')
			{
				//alert("a 0 value= "+a[0]+" a 1 value = " +a[1]+" a 2 value ="+a[2]);
				var y = PageManager.DataService.getControlInBranch(obj.parentNode,'function_code');
				y.value = a[1];
				var x = PageManager.DataService.getControlInBranch(obj.parentNode,'cv_fromFunctionCodeId');
				x.value = a[2];

			}
		}
	}
  }
function colTotal(obj,target){
	      var a = document.getElementsByName(obj.name);
 	      count = 0;
 	      for(var i = 0; i<=a.length-1;i++) if(a[i].value)
 		  count += parseFloat(a[i].value);
 		  count=Math.round(count*100)/100 ;
	      document.getElementById(target).value = count;
       }


		function checkNarration(narration)
			{
				if(narration.value.length>=250){
				  alert("Narration Cannot Be More Than " + 250 + " Characters");
				  return false;
				}
				return true;
			}

		function ButtonPress(name)
		{
			insertBlankRow('entities_grid',1);//insert blank row at position=1
		   if(name.toLowerCase()=='savenew')
		   sameWindow=1;

			state="onclick";
			var objPasAmt=document.getElementById('voucherDetail_passedAmount');
			objPasAmt.setAttribute("exilMax","voucherDetail_passedAmount");
			//Commented by Elzan on 6th Dec,for entering past data
			//PageManager.DataService.callDataService('MaxAmount');
			var cgn=PageManager.DataService.getQueryField('cgNumber');
						if(cgn)
						{
							disableControls(0,false);
				        }
				        else
	        {
			if(!PageValidator.validateForm())
				return false;

			if(!validate())

				return false;
			}
			/* checking for duplicate account codes */
			if(!checkForFunction_AccountCode('gridDirectCashPayment','cv_fromFunctionCodeId','chartOfAccounts_glCode')) return false;

			var pasAmount=eval(document.directCashPayment.voucherDetail_passedAmount.value);
			//Commented by Elzan on 6th Dec,for entering past data
			/*if(pasAmount>amount){
				alert("Passed Amount is larger than Max Amount");
				return false;
			}*/

		 		var dbDate=document.getElementById('databaseDate').value;
				var vhDate=document.getElementById('voucherHeader_voucherDate').value;
				var docDate=document.getElementById('miscBillDetail_billDate').value;
				if(compareDate(formatDateToDDMMYYYY1(vhDate),formatDateToDDMMYYYY1(dbDate)) == -1 )
				{
				alert('Voucher Date should be less than or equal to '+dbDate);
				document.getElementById('voucherHeader_voucherDate').focus();
				return false;
				}
				if(compareDate(formatDateToDDMMYYYY1(docDate),formatDateToDDMMYYYY1(dbDate)) == -1 )
				{
				alert('Document Date should be less than or equal to '+dbDate);
				document.getElementById('miscBillDetail_billDate').focus();
				return false;
				}
				var sm=PageManager.DataService.getQueryField('showMode');
				if(sm=='modify')
				{
				var effDate=document.getElementById('voucherHeader_effDate').value;
				if(compareDate(formatDateToDDMMYYYY1(effDate),formatDateToDDMMYYYY1(dbDate)) == -1 ){
				alert('Voucher Date should be less than or equal to '+dbDate);
				document.getElementById('voucherHeader_effDate').focus();
				return false;
				}
				}
			PageManager.UpdateService.submitForm('directCashPayment');
		}

		function validate(){

			var i, j, debit=0, credit=0, creditAmount=0, drTotal=0, passedAmount=0;
			crTotal=0;


			passedAmount = eval(document.directCashPayment.voucherDetail_passedAmount.value);

			passedAmount = isNaN(passedAmount) ? 0 : passedAmount;
			credit = passedAmount;



			for(i=0; i<document.directCashPayment.voucherDetail_debitAmount.length; i++){
				table = document.getElementById('gridDirectCashPayment');
				debit = eval(document.directCashPayment.voucherDetail_debitAmount[i].value);
				debit = isNaN(debit)?0:debit;
				drTotal = drTotal + debit;

				creditAmount = eval(document.directCashPayment.voucherDetail_creditAmount[i].value);
				creditAmount = isNaN(creditAmount)?0:creditAmount;
				crTotal = crTotal + creditAmount;

				if(debit>0 &&  document.directCashPayment.chartOfAccounts_glCode[i].value.length == 0){
					document.directCashPayment.chartOfAccounts_glCode[i].focus();
					alert('account code is missing for credit/debit supplied field ' + i);
					return false;
				}
				if(debit > 0 && creditAmount > 0)
				{
				 document.directCashPayment.voucherDetail_debitAmount[i].focus();
				 alert('one account can have only credit or debit...CHECK ACCOUNT : ' + document.directCashPayment.chartOfAccounts_glCode[i].value);
				 return false;
				 }
                /*
				if(debit==0 &&  document.directCashPayment.chartOfAccounts_glCode[i].value.length != 0){
					document.directCashPayment.voucherDetail_debitAmount[i].focus();
					alert('enter debit amount for the account code ' + document.directCashPayment.chartOfAccounts_glCode[i].value);
					return false;
				} */

				if(isNaN(eval(document.directCashPayment.voucherDetail_debitAmount[i].value)))
					document.directCashPayment.voucherDetail_debitAmount[i].value = 0;
			}

			if(i == 0){
				debit = eval(document.directCashPayment.voucherDetail_debitAmount.value);
				debit = isNaN(debit)?0:debit;
				drTotal = drTotal + debit;

				if(debit>0 &&  document.directCashPayment.chartOfAccounts_glCode.value.length == 0){
					document.directCashPayment.chartOfAccounts_glCode.focus();
					alert('account code is missing for credit/debit supplied field ' + i);
					return false;
				}
				if(debit==0 &&  document.directCashPayment.chartOfAccounts_glCode.value.length != 0){
					document.directCashPayment.voucherDetail_debitAmount.focus();
					alert('enter debit amount for the account code ' + document.directCashPayment.chartOfAccounts_glCode.value);
					return false;
				}

				if(isNaN(eval(document.directCashPayment.voucherDetail_debitAmount.value)))
					document.directCashPayment.voucherDetail_debitAmount.value = 0;
			}
             credit = passedAmount+crTotal;
			if(credit != drTotal){
				alert('total credit(passed amount) and total debit amount must be same');
				return false;
			}

			if(credit<=0){
				alert('no transaction with no credit/debit');
				return false;
			}

		/*	if( document.directCashPayment.voucherHeader_narration.value.length == 0 )
				if(!confirm('narration is empty, click Ok to submit anyway.')){
					document.directCashPayment.voucherHeader_narration.focus();
					return false;
				}
		*/
			return true;
		}

		function afterUpdateService()
		{
			if(sameWindow == 1){
		var actionid=new Object();
		actionid=document.getElementById('actionId').value;
	  	window.location="DirectCashPayment.htm?showMode=paymentCash&actionId="+actionid;
      }else{ window.close(); }
	sameWindow=0;
	return true;
    }

		function onClickCancel()
		{
			window.location = "DirectCashPayment.htm?showMode=paymentCash"
		}
		function disableControls(frmIndex, isDisable){
			for(var i=0;i<document.forms[frmIndex].length;i++)
			{
				document.forms[frmIndex].elements[i].disabled =isDisable;
				if(PageManager.DataService.getQueryField('showMode')=='viewCash' &&
					document.forms[frmIndex].elements[i].parentNode.parentNode.getAttribute('id')=='backbutton')
					document.forms[frmIndex].elements[i].disabled =false;
				if(PageManager.DataService.getQueryField('showMode')=='reverseCash'
						&& (document.forms[frmIndex].elements[i].parentNode.parentNode.getAttribute('id')=='modGrid' ||
						 document.forms[frmIndex].elements[i].parentNode.parentNode.getAttribute('id')=='submitGrid' ))
					document.forms[frmIndex].elements[i].disabled =false;
			}
		}
		function modify(){
				var cgn=PageManager.DataService.getQueryField('cgNumber');
		 		if(cgn){
		 			document.getElementById('reverseRecord').style.display='block';
					var vcObj=document.getElementById('voucherHeader_newVcNo');
					vcObj.setAttribute('exilMustEnter','true');
					vcObj.disabled=false;
					var vdObj=document.getElementById('voucherHeader_effDate')
					vdObj.setAttribute('exilMustEnter','true');
					vdObj.disabled=false;
					document.getElementById('modeOfExec').value="modify";
		 			document.getElementById('submitGrid').style.display ="block";
		 	 	}
		}
		function hideAllButtons()
		 {
		  document.getElementById('modGrid').style.display='none';
		  document.getElementById('submitGrid').style.display ='none';
		  document.getElementById('submitGrid2').style.display ='none';

		 }

		function hideButtons(){
			document.getElementById('modGrid').style.display='block';
			document.getElementById('submitGrid').style.display ='none';
			document.getElementById('submitGrid2').style.display ='none';
			//document.getElementById ('text1').style.display ="none";
		}
		function hideBut()
		{
		document.getElementById('modGrid').style.display='none';
		document.getElementById('submitGrid').style.display ='none';
		document.getElementById('submitGrid2').style.display ='block';
		}


	function showglEntry()
		{
			if(!PageValidator.validateForm())
				return false;

			var trObj;
			var tObj=document.getElementById("showEntries");
			var cr=0,dr=0;
			tObj.style.display="block";
			var tableObj=document.getElementById("entries");
			var gltable= document.getElementById("gridDirectCashPayment");
			for(var i=tableObj.rows.length-1;i>=2;i--)
			{
				tableObj.deleteRow(i);
			}
			for(var i=1;i<gltable.rows.length;i++)
			{

				code=PageManager.DataService.getControlInBranch(gltable.rows[i],'chartOfAccounts_glCode').value;
				if(code)
				{
				name=PageManager.DataService.getControlInBranch(gltable.rows[i],'chartOfAccounts_name').value;
				debit=PageManager.DataService.getControlInBranch(gltable.rows[i],'voucherDetail_debitAmount').value;
				dr=dr+debit;
				credit=PageManager.DataService.getControlInBranch(gltable.rows[i],'voucherDetail_creditAmount').value;
				cr=cr+credit
				narration=PageManager.DataService.getControlInBranch(gltable.rows[i],'voucherDetail_narration').value;
				var Obj=PageManager.DataService.getControlInBranch(tableObj.rows[1],"display_Code");
				trObj=PageManager.DataService.getRow(Obj);
				 if(i==1){
								newRow=trObj;
								objt1=PageManager.DataService.getControlInBranch(newRow,'display_Code');
								objt2=PageManager.DataService.getControlInBranch(newRow,'display_Head');
								objt3=PageManager.DataService.getControlInBranch(newRow,'display_Debit');
								objt4=PageManager.DataService.getControlInBranch(newRow,'display_Credit');
								objt5=PageManager.DataService.getControlInBranch(newRow,'display_Narration');
								if(code=="") code=" -"; if(name=="") name=" -"; if(debit=="") debit=" 0"; if(credit=="") credit=" 0"; if(narration=="") narration=" -";
								objt1.innerHTML=code;
								objt2.innerHTML=name;
								objt3.innerHTML=debit;
								objt4.innerHTML=credit;
								objt5.innerHTML=narration
				 }else{

						 var newRow=trObj.cloneNode(true);
						newRow=tableObj.tBodies[0].appendChild(newRow);
						objt1=PageManager.DataService.getControlInBranch(newRow,'display_Code');
						objt2=PageManager.DataService.getControlInBranch(newRow,'display_Head');
						objt3=PageManager.DataService.getControlInBranch(newRow,'display_Debit');
						objt4=PageManager.DataService.getControlInBranch(newRow,'display_Credit');
						objt5=PageManager.DataService.getControlInBranch(newRow,'display_Narration');
						if(code=="") code=" -"; if(name=="") name=" -"; if(debit=="") debit=" 0"; if(credit=="") credit=" 0"; if(narration=="") narration=" -";
						objt1.innerHTML=code;
						objt2.innerHTML=name;
						objt3.innerHTML=debit;
						objt4.innerHTML=credit;
						objt5.innerHTML=narration;
				}
			  }
			}
				if(trObj == null)
				{
					tObj.style.display="none";
					alert("Enter Account code Details");
					return false;

				}
				passedAmount = eval(document.directCashPayment.voucherDetail_passedAmount.value);
				passedAmount = isNaN(passedAmount) ? 0 : passedAmount;
				if( passedAmount < 0){
							alert(' amount can not be nagative');
							return false;
							}
				var code= document.getElementById("cashInHand").value;
				var newRow=trObj.cloneNode(true);
				newRow=tableObj.tBodies[0].appendChild(newRow);
				tempObj1=PageManager.DataService.getControlInBranch(newRow,'display_Code');
				tempObj1.innerHTML=code;
				tempObj2=PageManager.DataService.getControlInBranch(newRow,'display_Head');
				tempObj2.innerHTML="Cash in Hand";
				tempObj3=PageManager.DataService.getControlInBranch(newRow,'display_Credit');
				tempObj3.innerHTML=passedAmount;
				tempObj4=PageManager.DataService.getControlInBranch(newRow,'display_Debit');
				tempObj4.innerHTML="0";
				tempObj5=PageManager.DataService.getControlInBranch(newRow,'display_Narration');
				tempObj5.innerHTML=" -";


			 var dSum=0;
			 var cSum=0;
			for(var i=1;i<tableObj.rows.length;i++)
			{

			  var dObj=PageManager.DataService.getControlInBranch(tableObj.rows[i],"display_Debit");
			  var cObj=PageManager.DataService.getControlInBranch(tableObj.rows[i],"display_Credit");
			 if(!isNaN(parseFloat(dObj.innerHTML)))
			 {
			   var sum=(parseFloat(dObj.innerHTML));
			   dSum=dSum+sum;
			 }
			 if(!isNaN(parseFloat(cObj.innerHTML)))
			 {
			   var sum=(parseFloat(cObj.innerHTML));
			   cSum=cSum+sum;
			 }
			}
			var newRow=trObj.cloneNode(true);
			newRow=tableObj.tBodies[0].appendChild(newRow);
			objt1=PageManager.DataService.getControlInBranch(newRow,'display_Code');
			objt2=PageManager.DataService.getControlInBranch(newRow,'display_Head');
			objt3=PageManager.DataService.getControlInBranch(newRow,'display_Debit');
			objt4=PageManager.DataService.getControlInBranch(newRow,'display_Credit');
			objt5=PageManager.DataService.getControlInBranch(newRow,'display_Narration');
			objt1.innerHTML=" ";
			objt2.innerHTML=" ";
			objt3.innerHTML=dSum;
			objt4.innerHTML=cSum;
			objt5.innerHTML=" ";

	}
	function getCashChequeInHand(obj){

			var val=obj.options[obj.selectedIndex].value;
			var bonLen= document.getElementById('boundaryLevelId');
			if(bonLen.selectedIndex != -1 && bonLen.value.length>0) {

			PageManager.DataService.setQueryField("boundaryLevelId",val);
			PageManager.DataService.callDataService('CashChequeValues');
			}
		}
/*
	We implement AJAX here. The remaining functions are present in script/jsCommonMethods.js.
	Whenever user enters some value this function will be triggered.
*/


//FOR FUNCTION CODE
function autoCompletion1(obj) {
   		var menu=document.getElementById("menu-popup");
			menu.style.setAttribute("left", "0px");
      	var row,nameCell;
      	  	var currRow=PageManager.DataService.getRow(obj);
		var size=codeArray.length-1;
		   	if(codeArray != null)
		   	{
		   		//keyCodes Values
		   		//13 - enter, 8 - backspace, 46 - delete, 40 - down arrow, 38 - up arrow
		   		if(event.keyCode == 13)
		   		{
		   		 getFunId(event);
		   		 return false;
		      		}
		      		if((event.keyCode == 8) || (event.keyCode == 46))
		   			k=-1;
		      		while(event.keyCode == 40 && codeArray[0] != null)	{
		      			if(size<(k+1))
								      			{
								      				k=-1;
								      			}
		      			k++;

		      			PageManager.DataService.getControlInBranch(currRow,'function_code').value=codeArray[k];
						//alert(codeArray[k]);
		      			return false;
		      			}
		     		while(event.keyCode == 38 && codeArray[0] != null)	{
		      		if(k==-1)
							      			{
							      				return false;
							      			}
							      			if(k==0)
							      			{
							      				k=size+1;
							      			}
	     		     k--;
		       	 	PageManager.DataService.getControlInBranch(currRow,'function_code').value=codeArray[k];
		       	 	//alert(codeArray[k]);
	        	 	return false;
		     			}
      }

        function_code=PageManager.DataService.getControlInBranch(currRow,'function_code').value;
   		var type='functionName';
          if (function_code == "") {
              clearTable(document.getElementById("completeTable"));
          } else {
               var url = "../commons/Process.jsp?type=" +type+ "&name=" + function_code+ " ";
	           	var req2 = initiateRequest();
              req2.onreadystatechange = function() {
                  if (req2.readyState == 4) {
                      if (req2.status == 200) {
                      	var codes2=req2.responseText;
                      	paintCodes(codes2,document.getElementById("auto-row"),document.getElementById("menu-popup"),document.getElementById("completeTable"));
                      	  	}
                      	  	else {

                          clearTable(document.getElementById("completeTable"));
                      }
                  }
              };
                   req2.open("GET", url, true);
                   req2.send(null);
          }
   }

//FOR ACCOUNT CODE
function autoCompletion2(obj) {
    var menu=document.getElementById("menu-popup");
			menu.style.setAttribute("left", "185px");
   	var row,nameCell;
	var currRow=PageManager.DataService.getRow(obj);
	var size=codeArray.length-1;
	if(codeArray != null)
	{
		//keyCodes Values
		//13 - enter, 8 - backspace, 46 - delete, 40 - down arrow, 38 - up arrow
		if(event.keyCode == 13)	{
		 	getAccName(event);
			 return false;
   			}
   		if((event.keyCode == 8) || (event.keyCode == 46))
			j=-1;
   		while(event.keyCode == 40 && codeArray[0] != null)	{
   				if(size<(j+1))
						{
						   j=-1;
						  }
		   	j++;
   			PageManager.DataService.getControlInBranch(currRow,'chartOfAccounts_glCode').value=codeArray[j];
  			return false;
   			}
  		while(event.keyCode == 38 && codeArray[0] != null)	{
   			if(j==-1)
					{
						return false;
					}
					if(j==0)
					{
						j=size+1;
					}
	    j--;
    	 	PageManager.DataService.getControlInBranch(currRow,'chartOfAccounts_glCode').value=codeArray[j];
     	 	return false;
  			}
   }

      chartOfAccounts_glCode=PageManager.DataService.getControlInBranch(currRow,'chartOfAccounts_glCode').value;
        var type='coaDetailCode';
       if (chartOfAccounts_glCode == "") {
           clearTable(completeTable);
       } else {
            var url = "../commons/Process.jsp?type=" +type+"&glCode=" + chartOfAccounts_glCode+ " ";
          	var req = initiateRequest();
           req.onreadystatechange = function() {
               if (req.readyState == 4) {
                   if (req.status == 200) {
                   	var codes=req.responseText;
                       paintCodes(codes,document.getElementById("auto-row"),document.getElementById("menu-popup"),document.getElementById("completeTable"));
                     } else {
                       clearTable(completeTable);
                   }
               }
           };
                req.open("GET", url, true);
                req.send(null);
       }
   }
</SCRIPT>
</head>
<body onLoad="onBodyLoad()" onKeyDown ="CloseWindow(event);" bgcolor="#ffffff" bottommargin="0" topmargin="0" rightmargin="0" leftmargin="0" marginheight="0" marginwidth="0"><!------------------ Header Begins Begins--------------------->
<form name="directCashPayment">
<input  type="hidden" id="glCode" name="glCode">
<input type="hidden" name="oldVoucherDate" id="oldVoucherDate">
<input type="hidden" name="budgetCheckRequired" id="budgetCheckRequired" value="true">
<input type="hidden" name="modeOfExec" id="modeOfExec" value="new">
<input type="hidden" name="tType" id="tType" value="P">
<input type="hidden" name="cgnNum" id="cgnNum">
<input type="hidden" name="databaseDate"  id="databaseDate">
<input type="hidden" name="voucherHeader_id" id="voucherHeader_id">
<input type="hidden" name="actionId" id="actionId">
	<table width="100%" border=0 cellpadding="0" cellspacing="0" id=TABLE1>
			<tr>
			<td valign="top" ><!------------Content begins here ------------------>
						<table width="100%" border=0 cellpadding="3" cellspacing="0" id=TABLE1>
        <TBODY>


							<tr >
							  <td width="20%" id="cgnLabel" name="cgnLabel" style="DISPLAY: none" ><div  align="right" valign="center" class="labelcell">CG&nbsp;Number</div></td>
							  <td width="25%" id="cgnText" name="cgnText" style="DISPLAY: none">
								<div class=fieldcell><input class="fieldinput" name="voucherHeader_cgn" id="voucherHeader_cgn" maxlength="10" readOnly exilMustEnter="true" ></div>
							  </td>

							  <td width="20%"><div align="right" valign="center" class="labelcell">Voucher Number<span class="leadon">*</span></div></td>
							  <td width="30%">
							  	<table cellpadding="0" cellspacing="0">
							  		<tr >
							  		<td class=smallfieldcell><input name="voucherHeader_voucherNumberPrefix" maxlength="2" class="fieldinput-left" id="voucherHeader_voucherNumberPrefix" readonly style="display:none" style="width:25px" SIZE="1"></td>
							  		<td class=fieldcell><input name="voucherHeader_voucherNumber" maxlength="10" class="fieldinput-left" id="voucherHeader_voucherNumber"  exilMustEnter="true" exilDataType="exilAlphaNumeric" SIZE="20" ></td>
							  		</tr>
							  	</table>
							 </td>
                             </tr>

							<tr >
							  <td><div align="right" valign="center" class="labelcell">Paid By<span class="leadon">*</span></div></td>
							  <td><div class=smallfieldcell><SELECT id=billCollector_id name="billCollector_id" class="fieldinput" onChange="getCashInHand(this)" exilMustEnter="true" exilListSource="billCollectorNameList"></SELECT></div>
							  </td>

							  <td><div align="right" valign="center" class="labelcell">Voucher Date<span class="leadon">*</span></div></td>

							  <td><span class="smallfieldcell">
                              <INPUT class=datefieldinput id=voucherHeader_voucherDate  name="voucherHeader_voucherDate" maxlength="11" onkeyup="DateFormat(this,this.value,event,false,'3')" exilMustEnter="true" exilDataType="exilAnyDate" exilCalendar="true" ></span>
            					</td>
							  </tr>

							<tr >
							  <td>
							  <div align="right" valign="center" class="labelcell">Document No<span class="leadon">*</span></div></td>
							  <td>
								<div class=fieldcell><input class="fieldinput" name="miscBillDetail_billNumber" id="miscBillDetail_billNumber" maxlength="10" exilMustEnter="true" exilDataType="exilAnyChar" ></div>
							  </td>
							  <td>
							  <div align="right" valign="center" class="labelcell">Document Date<span class="leadon">*</span></div></td>
							  <td><span class="smallfieldcell">
								<INPUT class=datefieldinput id="miscBillDetail_billDate"  name="miscBillDetail_billDate" maxlength="11" onkeyup="DateFormat(this,this.value,event,false,'3')" exilMustEnter="true" exilDataType="exilAnyDate" exilCalendar="true"></span>
							  </td>
							  </tr>

							 <tr >
							  <td><div align="right" valign="center" class="labelcell">Fund Name<span class="leadon">*</span></div></td>
							  <td>
							  <div class=smallfieldcell><SELECT id=fund_id name="fund_id" class="fieldinput" exilMustEnter="true" exilListSource="fundNameList"></SELECT></div>
							  </td><!--	  <td>
							  <div align="right" valign="center" class="normaltext">Function<span class="leadon">*</span></div></td>
							  <td><SELECT id=department_id name="department_id" class="fieldinput" exilMustEnter="true" exilListSource="departmentNameList"></SELECT></td>
							  </tr> -->

							  <td><div align="right" valign="center" class="labelcell">Financing Source</div></td>
							  <td>
							  <div class=smallfieldcell><SELECT  name="fundSource_id" id="fundSource_id" class="fieldinput"  exilListSource="fundSourceNameList">	</SELECT></div>
							  </td>


                              <tr >
							  <td>
							 <!-- <div align="right" valign="center" class="normaltext">Cash in Hand<span class="leadon">*</span></div>--></td>
							  <td>
								<!--<input class="fieldinput" name="chartOfAccounts_glCode_CInH" id="chartOfAccounts_glCode_CInH" maxlength="10" readOnly exilMustEnter="true" exilDataType ="exilAlphaNumeric">-->
							  </td>
							  <td>
							  <div align="right" valign="center" class="labelcell">Paid To<span class="leadon">*</span></div></td>
							  <td>
								<div class=fieldcell><input class="fieldinput" name="miscBillDetail_paidTo" id="miscBillDetail_paidTo" maxlength="25" exilMustEnter="true" exilDataType="exilAnyChar" ></div>
							  </td>
							 </tr>

                             <tr >
							   <td><div align="right" valign="center" class="labelcell">Passed Amount<span class="leadon">*</span></div></td>
							  <td>
								<div class=fieldcell><input class="fieldinput-right" name="voucherDetail_passedAmount" id="voucherDetail_passedAmount" maxlength="16" exilMustEnter="true" exilDataType="exilUnsignedDecimal" exilMax="9999999999999.99"  exilMin="1" ></div>
							  </td>

							  <td><div align="right" valign="center" class="labelcell">Narration</div></td>
							  <td class="fieldinput"><TEXTAREA class=narrationfieldinput onkeypress="return checkNarration(this)" id=voucherHeader_narration name=voucherHeader_narration rows=1 cols=35 exilDataType="exilAnyChar"></TEXTAREA>
							  </td>


							 </tr>
							 <tr  id="statusInfo">
								<td id="statusLabel"><div  align="right" valign="center" class="labelcell">Status</div></td>
								  <td id="StatusText">
									<div class=fieldcell><input class="fieldinput" name="voucherHeader_status" id="voucherHeader_status" ></div>
								</td>
								 <td><div  align="right" valign="center" exilMustEnter="true" class="labelcell">Created By</div></td>
								 <td><div class=fieldcell><input class="fieldinput" name="voucherHeader_createdby" id="voucherHeader_createdby"></div></td>
							</tr>
							 </TBODY>

                              </table>

      <TABLE id="boundarytableGrid" cellSpacing=0 cellPadding=0 width="55%" align=center border=1 NAME="boundarytableGrid">

        <TR class=thStlyle >
          <TD  width="41%"><DIV align=center>Boundary Level</DIV></TD>
          <TD  width="26%"><DIV align=center>Cash In Hand Code</DIV></TD>
          <TD  width="31%"><DIV align=center>Cheque In Hand code</DIV></TD>
          </TR>
        <TR class=normaltext >
         <TD class=columnheader width="41%" exilRetainValue="true"><SPAN align="left" exilTrimLength="15">
			<div class=smallfieldcell><SELECT id="boundaryLevelId" style="WIDTH: 158px; HEIGHT: 21px" name="boundaryLevelId" onChange="getCashChequeInHand(this);"  exilMustEnter="true" exilDataType="exilAlphaNumeric" ></SELECT></div></SPAN> </TD>
          <TD class="columnheader" exilRetainValue="true">
            <DIV class=fieldcell><INPUT class=fieldinput-right id="cashInHand" style="WIDTH: 172px; HEIGHT: 22px" readOnly size=35 name="cashInHand" exilDataType="exilAnyChar"><input type="hidden" id="cashinhandId" name="cashinhandId"></DIV></TD>
          <TD class="columnheader" exilRetainValue="true">
            <DIV class=fieldcell><INPUT class=fieldinput-right id="chequeInHand"  style="WIDTH: 172px; HEIGHT: 22px" readOnly size=35 name="chequeInHand" exilDataType="exilAnyChar"><input type="hidden" id="chequeinhandId" name="chequeinhandId"></DIV></TD>
            </TR></TABLE>

                              <table width="100%" border="0" cellpadding="0" cellspacing="0" align=center ID="Table1">
                                  <tr>
                                    <td>
                                    <table width="100%" border="1" cellpadding="0" cellspacing="0" align=center ID="gridDirectCashPayment">

                                       <tr class="thStlyle" height="25">
                                        <td width="1%"  class="">&nbsp;&nbsp;</td>
                                        <td width="13%"  class=""><div align="center" class="">Function Name</div></td>
                                        <td width="8%" class=""><div align="center" class="">&nbsp;Account Code</div></td>
                                        <td width="25%" class=""><div align="center">Account Head</div></td>
                                        <td width="9%" class=""><div align="center">Amount</div></td>
                                        <td width="15%" class="" style="DISPLAY:none"><div align="center">Cr Amount</div></td>
                                        <td width="15%" class="" style="DISPLAY:none"><div align="center">Narration</div></td>
                                        <td width="5%" class=""><div align="center">Details</div></td>
                                     </tr>
                                     <tr class="smallfieldcell">
                                     <td class="tdStlyle" width="1%"  onClick="changeColor(this,'gridDirectCashPayment');" name="selectTd" id="selectTd"></td>

       								<td>
                                       <input type="hidden" name="cv_fromFunctionCodeId" id="cv_fromFunctionCodeId">
                                       <input class="normaltext" size=10 name="function_code" id="function_code"  style="WIDTH: 125; HEIGHT:
                  19" value="" autocomplete="off" onkeyup="autocompletecodeFunction(this);"  exilDescField="cv_fromFunctionCodeId" exilDataSource="functionIdKey" onBlur="fillNeibrAfterSplit(this,'cv_fromFunctionCodeId'); funClear(this,'chartOfAccounts')" exilInGrid="true">
                  <IMG   id=IMG1 onclick=openSearch1(this,'function')
                  height=22 src="/egi/resources/erp2/images/plus1.gif" width=25 align=top border=0 >
						</td>
						                         <td>
													<INPUT class=fieldinput-right name="chartOfAccounts_glCode" id="chartOfAccounts_glCode" autocomplete="off" onkeyup="autocompletecode(this)" onBlur="fillNeibrAfterSplit(this,'chartOfAccounts_name')" maxlength="20" style="WIDTH: 97px; HEIGHT: 19px" exilDataType    ="exilAlphaNumeric"


                  exilDescField="chartOfAccounts_name" exilDataSource="" exilInGrid="true"><IMG id=IMG1 onclick="openSearch(this,'chartOfAccounts')" height=22 src="/egi/resources/erp2/images/plus1.gif" width=25 align=top border=0 >
						                         </td>
						                         <td>
													<input class="fieldinput-left" NAME="chartOfAccounts_name" id="chartOfAccounts_name" maxlength="50" style="WIDTH:315px; HEIGHT: 19px" readOnly exilDataType="exilAnyChar" readonly size="20">
						                         </td>
						                         <td>
													<input class="fieldinput-right" NAME="voucherDetail_debitAmount" id="voucherDetail_debitAmount" onBlur="colTotal(this,'debitTotal')" maxlength="16" style="WIDTH: 130px; HEIGHT: 19px" size ="19" exilDataType="exilUnsignedDecimal" exilMax="9999999999999.99"  exilMin="0" onKeyDown ="addNewRow('gridDirectCashPayment','chartOfAccounts_glCode')">
						                         </td>
						                         <td style="DISPLAY:none">
													<input class="fieldinput-right" NAME="voucherDetail_creditAmount" id="voucherDetail_creditAmount" onBlur="colTotal(this,'creditTotal')" maxlength="16" style="WIDTH: 139px; HEIGHT: 22px" size ="19" exilDataType="exilUnsignedDecimal" exilMax="9999999999999.99" exilMin="0">
						                         </td>
						                        <td style="DISPLAY:none">
													<input class="fieldinput-left" NAME="voucherDetail_narration" id="voucherDetail_narration" onKeyPress="return checkNarration(this)"  style="WIDTH: 102px; HEIGHT: 19px"
						                  size="12"

                  exilDataType="exilAnyChar">
						                        </td>
						                        <td align="center">
													<A  id=A1 style="WIDTH: 10px; HEIGHT: 19px" onclick ="openDetails(this,'chartOfAccounts_glCode','gridDirectCashPayment','entities_Grid','')"	 href="#" >Click</A>
												</td>
						                        </tr>
		                                       </table></td></tr>
		                 <tr>
					     <td>
                         <table>
							<tr>

								<td colspan="2" align="center"><input type="button"  class="button" value="Delete Row" id="deleteDetail" name="deleteDetail" onclick=" deleteRowTable('gridDirectCashPayment');colAllTotal('voucherDetail_debitAmount','voucherDetail_creditAmount','debitTotal','creditTotal');" /></td>
								<td colspan="2" align="center"><input type="button"  class="button" value="Add Row" id="addDetail" name="addDetail" onclick="addNewRowFromButton('gridDirectCashPayment','chartOfAccounts_glCode,chartOfAccounts_name');" /></td>
							</tr>
						</table>
						</td>
						</tr>
		                                        <tr><td id="auto-row">&nbsp;<td/></tr>
		                                        </td></tr></table>



 <table width="100%" border="0" cellpadding="0" cellspacing="0" ID="gridDBIJ">
                                  <tr>
                                    <td>

                 <table width="100%" border="1" cellpadding="0" cellspacing="0" align=center ID="buttonInTable" >
                                       <tr>
                                        <!--td>
											<span

               style="WIDTH: 100px; HEIGHT: 19px"
                id=SPAN1
                 ></span>
										</td>
                                        <td >
											<span

               style="WIDTH: 100px; HEIGHT: 19px"
                id=SPAN1
                 ></span>
										</td-->
                                        <td align="right" COLSPAN=3 WIDTH="78%">
											<span style ="WIDTH: 475px; HEIGHT: 10px" class="labelcell" id=SPAN1
                 >Total&nbsp;</span>
                                        </td>
                                        <td >
											<div class=smallfieldcell style="width: 130px; height: 19px"><input class="fieldinput-right" size=13 id="debitTotal" name="debitTotal"
            style="WIDTH: 130; HEIGHT: 19" readOnly></div>
										</td>
                                        <td  style="DISPLAY=none">
											 <INPUT class=fieldinput-right id=creditTotal

          style="WIDTH: 139px; HEIGHT: 19px" readOnly size=14
                  name=creditTotal>
                                        </td>
                                        <td  style="DISPLAY=none">
                                        <span

               style="WIDTH: 101px; HEIGHT: 19px"
               ></span>
                                        </td>

                                        <td width="45">
											<span style="WIDTH: 60px; HEIGHT: 19px"

                 id=SPAN1
                 ></span>
										</td>
                                       </tr>

                   </table>
				</td></tr></table>











			<table>
      			<tr >
				<td height="25" colspan="4" valign="bottom" class="smalltext"><p class="smalltext">
					<span class="leadon">*</span>- Mandatory Fields</p>
				</td>
			</tr>
			</table>
			<table border="0" cellpadding="0" cellspacing="0" id=TABLE1  align="center">
				<tbody>
				<tr id="modGrid">
						<td align="center" width=100% colspan=4>
						<input   type="button" class="button" value="Reverse" onclick=modify(); />
						</td>
				</tr>
				<tr id="backbutton" >
					<td width=100% align=center colspan=4>
					<input   type="button" class="button" value="Back" onclick="back(window.self)" />

					</td>
				</tr>
				<tr id="reverseRecord"  style="DISPLAY: none">
					<td align="right"><span   valign="center" class="labelcell"> Voucher Number<SPAN class=leadon>*</SPAN></span>
					</td>
					<td><span class=fieldcell><input  class=fieldcell name="voucherHeader_newVcNo" id="voucherHeader_newVcNo" maxlength="10"   exilDataType="exilAlphaNumeric" style="width:148; height:19"></span>
					</td>
					<td align="right">
						<span   valign="center" class="labelcell" >Voucher Date<span class="leadon">*</span>
					</td>
					<td><span class=smallfieldcell> <INPUT class="smallfieldcell" name="voucherHeader_effDate" exilDataType="exilAnyDate" id   ="voucherHeader_effDate" style="WIDTH: 120x; HEIGHT: 19px" size="13" onkeyup="DateFormat(this,this.value,event,false,'3')" exilCalendar="true"></span></span>
					</td>
					<td><INPUT	 type   =hidden class   ="datefieldinput" name="diffDebit" id="diffDebit" style="WIDTH: 101px; HEIGHT: 19px"	size="13"></SPAN>
					</td>
				</tr>
				<tr>
				  <td colspan=4></td>
				<tr></tr>
				</tbody>
			</table>
						<table align="center" border="0" cellpadding="0" cellspacing="0">
			 				<tr id="submitGrid" style="display:none">
			 						<td width=100% align=center>
				 						<input type="button"  id="revsave" value="Submit" class="button" onclick="return ButtonPress('saveclose');"/>
				 						<input type="button" id="revclose" value="Close" class="button" onclick="window.close();" />
			 						</td>
							</tr>
							</table>
							<table border="0" cellpadding="0" cellspacing="0"  align="center">
										 <tr id="submitGrid2">
										 <td>
										 <input  id="saveandnew" type="button" class="button" value="Save & New" onclick="return ButtonPress('savenew');"/>
										 <input   type="button" class="button" value="Save & Close" onclick="return ButtonPress('saveclose');" />
										 <input   type="button" class="button" value="Cancel" onclick="onClickCancel()" />
										 <input   type="button" class="button" value="Close" onclick=window.close(); />
										 <input   type="button" class="button" value="Show GlEntry" onclick=showglEntry(); />
										 </td>
									</tr></table>
							<table width="97%" border=0 cellpadding="3" cellspacing="0" id="showEntries" name="showEntries" style="DISPLAY: none">
							<tr >
							<td colspan=4>
							<table width="100%" align=center border="0" cellpadding="0" cellspacing="0" >
							<tr  height="25">
							 <TD class=displaydata align=middle ><h4>GLEntry</h4></TD></tr>
							</table>
							</td>
							</tr>
							<tr><td>
							<table width="80%" border="1" cellpadding="0" cellspacing="0" align=center id="entries" name="entries">
							<tr class="thStlyle">
								<td  class=""><div align="center" valign="center" class=""> Account Code</div></td>
								<td  class=""><div align="center" valign="center" class=""> Account Head</div></td>
								<td  class=""><div align="center" valign="center" class=""> Debit </div></td>
								<td  class=""><div align="center" valign="center" class=""> Credit</div></td>
								<td  class=""><div align="center" valign="center" class=""> Narration</div></td>
							</tr>
							<tr class="labelcell">
								<td ><div name="display_Code"  id="display_Code"   readOnly maxLength="10" tabIndex=0>&nbsp;</div></td>
								<td ><div name="display_Head"  id="display_Head"  readOnly maxLength="10" tabIndex=0>&nbsp;</div></td>
								<td ><div name="display_Debit"  id="display_Debit"  readOnly maxLength="16" tabIndex=0>&nbsp;</div></td>
								<td ><div name="display_Credit"  id="display_Credit"  readOnly maxLength="16" tabIndex=0>&nbsp;</div></td>
								<td ><div name="display_Narration" id="display_Narration"  readOnly maxLength="10" tabIndex=0>&nbsp;</div></td>
							</tr>
							</table>
							</td>
							</tr>
						</table>


	<table id="entities_grid" width="20%" style="DISPLAY: none">
		<tr>
			<td></td>
			<td></td>
			<td></td>
			<td></td>
			<td></td>
		</tr>
		<tr>
			<td><input id="grid_detTypeId" name="grid_detTypeId" style="WIDTH: 100px" size="20"></td>
			<td><input id="grid_detKeyId" name="grid_detKeyId" style="WIDTH: 100px" size="20"></td>
			<td><input id="grid_detValue" name="grid_detValue" style="WIDTH: 100px" size="20" ></td>
			<td><input id="grid_rowIndex" name="grid_rowIndex" style="WIDTH: 100px" size="20"></td>
			<td><input id="grid_amount" name="grid_amount" style="WIDTH: 100px" size="20"></td>
			<td><input id="grid_detCode" name="grid_detCode" style="WIDTH: 100px" size="20"></td>
          	<td><input id="grid_rowFunId" name="grid_rowFunId" style="WIDTH: 100px" size="20"></td>
		</tr>
	</table>
</td></tr></table>
</form>
<form><div id='codescontainer'></div></form>
<!-- We will set the "left" position value inside autocompletion method -->
		 <div style="position: absolute;top:170px;width:148px;height:30px" id="menu-popup" >
		 <table id="completeTable" bgcolor="#cae1ff" border="1"/>
		 </div>
</body>
</html>
