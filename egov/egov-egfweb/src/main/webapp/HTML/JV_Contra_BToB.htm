#-------------------------------------------------------------------------------
# eGov suite of products aim to improve the internal efficiency,transparency, 
#      accountability and the service delivery of the government  organizations.
#   
#       Copyright (C) <2015>  eGovernments Foundation
#   
#       The updated version of eGov suite of products as by eGovernments Foundation 
#       is available at http://www.egovernments.org
#   
#       This program is free software: you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation, either version 3 of the License, or
#       any later version.
#   
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#   
#       You should have received a copy of the GNU General Public License
#       along with this program. If not, see http://www.gnu.org/licenses/ or 
#       http://www.gnu.org/licenses/gpl.html .
#   
#       In addition to the terms of the GPL license to be adhered to in using this
#       program, the following additional terms are to be complied with:
#   
#   	1) All versions of this program, verbatim or modified must carry this 
#   	   Legal Notice.
#   
#   	2) Any misrepresentation of the origin of the material is prohibited. It 
#   	   is required that all modified versions of this material be marked in 
#   	   reasonable ways as different from the original version.
#   
#   	3) This license does not grant any rights to any user of the program 
#   	   with regards to rights under trademark law for use of the trade names 
#   	   or trademarks of eGovernments Foundation.
#   
#     In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
#-------------------------------------------------------------------------------
<!doctype html public "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
	<head>
        <SCRIPT LANGUAGE="javascript">
        var l_fromAcc,l_toAcc;
        var sameWindow=0;
        var i=0;
        var sIndex,sValue,sText;
        var sIndexTo=null,sValueTo,sTextTo;
        var initF=0;
        var initT=null;//to check whether its on load
	//	var init=0;//to check whether a/c # in edit mode is initialized

        	function getData() {
           		try {
					var bankBranch_code = PageManager.DataService.getQueryField('bankBranch_branchId');
		  			if (bankBranch_code) {
						var obj=document.getElementById('cv_fromBankId');
						for(var i=0;i<obj.length;i++)
							if(obj.options[i].value==bankBranch_code) {
								obj.options[i].setAttribute('selected',true);
								obj.selectedIndex=i;
								getAccountNumberFrom();
								break;
							}
					}

				} catch(e) {}
			}

           	function onLoadTasks() {
				PageValidator.addCalendars();
				//insertDates('voucherHeader_voucherDate');
				window.cgnSet=false;
				window.data=false;
				window.accFromFilled=true;
				var cgn=PageManager.DataService.getQueryField('cgNumber');
				var sm=PageManager.DataService.getQueryField('showMode');
		 		 if(cgn&& (sm=="modify")){
					/*PageManager.DataService.setQueryField('cgNumber',cgn);
					PageManager.DataService.callDataService('getBTBDetails');
					hideButtons();
					disableControls(0,true);*/
					var fromBankObj=document.getElementById('cv_fromBankId');
					var toBankObj=document.getElementById('cv_toBankId');
					fromBankObj.removeAttribute('exilListSource');
					fromBankObj.setAttribute('exilListSource',"bankAndBranchList");
					toBankObj.removeAttribute('exilListSource');
					toBankObj.setAttribute('exilListSource',"bankAndBranchList");
					document.getElementById('cgnLabel').style.display='block';
					document.getElementById('cgnText').style.display='block';
					PageManager.ListService.callListService();
					PageManager.DataService.callDataService('jvContra');
					document.getElementById('submitGrid').style.display ="none";
					document.getElementById('reverseGrid').style.display="block";
					 document.getElementById('backbutton').style.display="none";
		 		 }
		 		 if(cgn && (sm=="view"))
					 {
					 var fromBankObj=document.getElementById('cv_fromBankId');
					var toBankObj=document.getElementById('cv_toBankId');
					fromBankObj.removeAttribute('exilListSource');
					fromBankObj.setAttribute('exilListSource',"bankAndBranchList");
					toBankObj.removeAttribute('exilListSource');
					toBankObj.setAttribute('exilListSource',"bankAndBranchList");
					document.getElementById('cgnLabel').style.display='block';
					document.getElementById('cgnText').style.display='block';
					PageManager.ListService.callListService();
					PageManager.DataService.callDataService('jvContra');
					document.getElementById('submitGrid').style.display ="none";
					document.getElementById('reverseGrid').style.display="none";
					 document.getElementById('backbutton').style.display='block';
					 }
			// Included by --------Lakshmi ---------
				else if(cgn && (sm=="edit"))
				{
					var fromBankObj=document.getElementById('cv_fromBankId');
					var toBankObj=document.getElementById('cv_toBankId');
					fromBankObj.removeAttribute('exilListSource');
					//fromBankObj.setAttribute('exilListSource',"bankAndBranchList");
					toBankObj.removeAttribute('exilListSource');
					//toBankObj.setAttribute('exilListSource',"bankAndBranchList");
					PageManager.ListService.callListService();
					//PageManager.DataService.callDataService('jvContra');
					PageManager.DataService.callDataService('getBTBDetails');

			  		//------  GUI Configuration  ------
			  		document.getElementById('voucherHeader_voucherNumber').setAttribute('exilDataType','exilAlphaNumeric');
			  		//document.getElementById('voucherHeader_voucherNumber').disabled=true;
			  		document.getElementById("vnum").style.display="block";
			  		document.getElementById('modGrid').style.display='none';
			  		document.getElementById('reverseGrid').style.display ="none";
			  		document.getElementById('saveandnew').style.display ="none";
			  		document.getElementById('cgnLabel').style.display='block';
			  		document.getElementById('cgnText').style.display='block';
			  		document.getElementById('backbutton').style.display='none';
			  		document.getElementById('modeOfExec').value="edit";
			  		document.getElementById('submitGrid').style.display ="block";
		  	   }
		 	if(!cgn){
		 			window.cgnSet=false;
					window.data=false;
					PageManager.DataService.callDataService('jvContra');
					obj=document.getElementById('modGrid').style.display="none";
					obj1=document.getElementById('reverseGrid').style.display="none";
					 document.getElementById('backbutton').style.display="none";

				}
			}

			// --------  Added by Lakshmi to load bank details in edit mode  --------------
						function insertBank()
						{
							var fundObj=document.getElementById('fund_id');
							if(fundObj.selectedIndex==-1)return;
							var fundValue=fundObj.options[fundObj.selectedIndex].value;
							var fromBankObj=document.getElementById('cv_fromBankId');
							var toBankObj=document.getElementById('cv_toBankId');
							fromBankObj.removeAttribute('exilListSource');
							fromBankObj.setAttribute('exilListSource',"bankAndBranchListF");
							toBankObj.removeAttribute('exilListSource');
							toBankObj.setAttribute('exilListSource',"bankAndBranchListT");
							PageManager.DataService.setQueryField('fundValue',fundValue);
							PageManager.DataService.callDataService('bankListForBtoB');

			}

			function afterRefreshPage(dc)
			{
				var cgn=PageManager.DataService.getQueryField('cgNumber');
	   		 	var sm=PageManager.DataService.getQueryField('showMode');
			    if("getBTBDetails"==dc.values['serviceID'] && cgn && (sm=='edit'))
				{
				   var vnum=dc.values['voucherHeader_voucherNumber'];
				   var subVnum=vnum.substring(0,2);
				   document.getElementById("voucherHeader_voucherNumber").value=vnum.substring(2,vnum.length);
		 		   document.getElementById("vnum").value=subVnum;
		 		   if(document.getElementById("oldVoucherDate").value == "")
					{
						document.getElementById("oldVoucherDate").value=formatDate2(dc.values['voucherHeader_voucherDate']);
					}
		 		//alert(document.getElementById("oldVoucherDate").value);
				}
				if(dc.values['databaseDate']!='' && dc.values['serviceID']=='jvContra')
				{
				var dt=dc.values['databaseDate']
				document.getElementById('voucherHeader_voucherDate').value=dt;
				}
				var cgn=PageManager.DataService.getQueryField('cgNumber');
				if(dc.values['serviceID']=='jvContra' && cgn){
					PageManager.DataService.setQueryField('cgNumber',cgn);
					PageManager.DataService.callDataService('getBTBDetails');
					hideButtons();
					disableControls(0,true);
		 		 }
		 		else if(dc.values['serviceID']=='getBTBDetails' || dc.values['serviceID']=='getBranchDetails')
		 		 {
		 			l_fromAcc=dc.values['cv_fromBankAccountId'];
		 			l_toAcc=dc.values['cv_toBankAccountId'];
					var voucherHeader_voucherDate=dc.values['voucherHeader_voucherDate'];
					if(voucherHeader_voucherDate){
						voucherDate=formatDate2(voucherHeader_voucherDate);
						document.getElementById('voucherHeader_voucherDate').value=voucherDate;
					}
					var cv_fromchequeDate=dc.values['cv_fromchequeDate'];

					if(cv_fromchequeDate && cv_fromchequeDate.length!=0){
						cv_fromchequeDate=formatDate2(cv_fromchequeDate);
						document.getElementById('cv_fromchequeDate').value=cv_fromchequeDate;
					}
					if(cv_fromchequeDate=="1-Jan-1900")
					{
						document.getElementById('cv_fromchequeDate').value="";
					}
				/*	var fromBank=dc.values['cv_fromBankId'];
					if(fromBank){
						var obj=document.getElementById('cv_fromBankAccountId');
		 				obj.setAttribute('exilListSource','accountListFrom');
		 				PageManager.DataService.setQueryField('branchId',fromBank);
						PageManager.DataService.callDataService('contraAccNumberF');
					}
					var toBank=dc.values['cv_toBankId'];
					if(toBank){//alert('toBank'+toBank);
						var obj=document.getElementById('cv_toBankAccountId');
		 				obj.setAttribute('exilListSource','accountListTo');
		 				PageManager.DataService.setQueryField('branchId',toBank);
						PageManager.DataService.callDataService('contraAccNumberT');
						}*/
				}else if(dc.values['serviceID']=='contraAccNumberF'){
					highLightAccNo('cv_fromBankAccountId',l_fromAcc);//alert(dc.values['serviceID']);

					getBalanceFrom();
					//accntMod(document.getElementById("cv_fromBankAccountId"));
				}else if(dc.values['serviceID']=='contraAccNumberT'){
					highLightAccNo('cv_toBankAccountId',l_toAcc);

					getBalanceTo();//alert(dc.values['serviceID']);
					//accntModTo(document.getElementById("cv_toBankAccountId"));
				}else{
						if(!window.data) {
							window.data=true;
							getData();
							if(journalVoucher.voucherHeader_voucherNumber.disabled == false)
							journalVoucher.voucherHeader_voucherNumber.focus();
						}
						if(!window.accFromFilled){
							var bank_accNo = PageManager.DataService.getQueryField('bankAccount_accountNumber');
							if(bank_accNo) {
								var obj1=document.getElementById('cv_fromBankAccountId');
								for(i=0;i<obj1.length;i++)
									if(obj1.options[i].value==bank_accNo) {
										obj1.options[i].setAttribute('selected',true);
										break;
									}
								window.accFromFilled=true;
							}
						}
				}
				if((i==0) && (dc.values['serviceID']=='getBTBDetails'))
				{
					//alert("inside the method where type is checking");
					var fromchq=dc.values['cv_fromchq'];
					fromchq=fromchq.toUpperCase();
					var chkButton=document.journalVoucher.modeOfCollection;
					//To set Transaction Mode
				/*	if(fromchq=="C")
					{
						chkButton.options[0].checked=true;
					}*/
					if(fromchq!="C")
					{
						chkButton[1].checked=true;
						document.getElementById("chqNo").innerHTML="Reference No.";
						journalVoucher.cv_fromChequeNumber.setAttribute('exilDataType',"exilAlphaNumeric");
						journalVoucher.cv_fromChequeNumber.removeAttribute('exilMustEnter');
             			journalVoucher.cv_fromchequeDate.removeAttribute('exilMustEnter');
           				document.getElementById("chequeDtCaption").innerHTML="Reference Date";
           				document.getElementById("chqAvail").style.display="none";
					}//Ends setting Transaction Mode

					//To get Bank details depending on Fundid
					insertBank();
					var cgn=PageManager.DataService.getQueryField('cgNumber');
					PageManager.DataService.setQueryField('cgNumber',cgn);
					PageManager.DataService.callDataService('getBranchDetails'); //Ends getting Bank details depending on Fundid
					i++;
					var fromBank=dc.values['cv_fromBankId'];
					if(fromBank){
						var obj=document.getElementById('cv_fromBankAccountId');
		 				obj.setAttribute('exilListSource','accountListFrom');
		 				PageManager.DataService.setQueryField('branchId',fromBank);
						PageManager.DataService.callDataService('contraAccNumberF');
					}
					var toBank=dc.values['cv_toBankId'];
					if(toBank){//alert('toBank'+toBank);
						var obj=document.getElementById('cv_toBankAccountId');
		 				obj.setAttribute('exilListSource','accountListTo');
		 				PageManager.DataService.setQueryField('branchId',toBank);
						PageManager.DataService.callDataService('contraAccNumberT');
						}
				}
				if(dc.values['serviceID']=='contraBalNumberF')
					{
					  document.getElementById('amount_from').value=dc.values['balAvailable'];
    				  accntMod(document.getElementById("cv_fromBankAccountId"));

					}

					if(dc.values['serviceID']=='contraBalNumberG')
					{
						document.getElementById('amount_to').value=dc.values['balAvailable'];//alert('here');
						accntModTo(document.getElementById("cv_toBankAccountId"));

					}
			}
			function beforeRefreshPage(dc) {
			if(dc.values['glCodeName'])
				{
				  glNameCode=dc.values['glCodeName'];
				 showEntry();
				}
				if(!window.cgnSet) {
					if(isNaN(parseInt(dc.values['voucherHeader_cgn']))) return;
					dc.values['voucherHeader_cgn']='BTB'+dc.values['voucherHeader_cgn'];
					window.cgnSet=true;
				}
			}

			function submitAndNew(){
                 sameWindow=1;
                  insert();
                }

			function insert() {
				if(!PageValidator.validateForm()) return;
				//if(!checkChequeDate("cv_fromchequeDate")) return;
				if(journalVoucher.cv_narration.value.length>250) {
					alert('Enter Narration less than 250 Charaters');
					journalVoucher.cv_narration.focus();
					return;
				}
				//if((journalVoucher.cv_fromChequeNumber.value) && (!journalVoucher.cv_fromchequeDate.value))
				//{
				//journalVoucher.cv_fromchequeDate.setAttribute('exilMustEnter','true');
				  // return;
				//}
				document.getElementById('voucherHeader_voucherNumber').disabled=false;
				PageManager.UpdateService.submitForm('jv_BTB');
				//document.getElementById('voucherHeader_voucherNumber').disabled=true;
			}

			function afterUpdateService(dc)	{
			    if(sameWindow == 1){
	               window.location="JV_Contra_BToB.htm";
	               }else{
	               window.close();
	                }
	          sameWindow=0;
	         return true;

			}

			function getAccountNumberFrom() {
				sIndex=null;
				document.getElementById("acc_Desc").value="";
				window.accFromFilled=false;
		 		var control= document.getElementById('cv_fromBankId');
		 		//alert('Bank Selected :'+control.value);
				if(control.selectedIndex == -1) return;
				var obj1=document.getElementById('cv_toBankAccountId');
		 		if(obj1.getAttribute('exilListSource')) obj1.removeAttribute('exilListSource');
				var obj=document.getElementById('cv_fromBankAccountId');
				for(i=obj.length-1;i>=0;i--) obj.remove(i);
		 		obj.setAttribute('exilListSource','accountListFrom');
		 		PageManager.DataService.setQueryField('branchId',control.value);
		 		PageManager.DataService.setQueryField('fundValue',document.getElementById('fund_id').value);
				PageManager.DataService.callDataService('contraAccNumber');
		 	}

		 	function getAccountNumberTo() {
		 		sIndexTo=null;
		 		document.getElementById("acc_DescT").value="";
		 		var control= document.getElementById('cv_toBankId');
				if(control.selectedIndex == -1) return;
				var obj1=document.getElementById('cv_fromBankAccountId');
		 		if(obj1.getAttribute('exilListSource')) obj1.removeAttribute('exilListSource');
				var obj=document.getElementById('cv_toBankAccountId');
				for(i=obj.length-1;i>=0;i--) obj.remove(i);
		 		obj.setAttribute('exilListSource','accountListTo');
		 		PageManager.DataService.setQueryField('branchId',control.value);
		 		PageManager.DataService.setQueryField('fundValue',document.getElementById('fund_id').value);
				PageManager.DataService.callDataService('contraAccNumber');
		 	}
			function getBalanceFrom()
			 {

			   var ctr= document.getElementById('cv_fromBankAccountId');
			   var voucherHeader_voucherDate=document.getElementById('voucherHeader_voucherDate').value;
			  // if((document.getElementById('voucherHeader_voucherDate').length==0) || (document.getElementById('voucherHeader_voucherDate').text == ""))
			  if(!voucherHeader_voucherDate)
			   {
			    	alert("Please select the Voucher Date ");
			    	return;
			   }
			   if(ctr.selectedIndex != -1){
			     var bal_from=ctr.options[ctr.selectedIndex].value;
			     var balance_from=document.getElementById('amount_from');
			     //balance_from.removeAttribute('exilListSource');
			     //balance_from.setAttribute('exilListSource','balanceFrom');
			      PageManager.DataService.setQueryField('voucherHeader_voucherDate',voucherHeader_voucherDate);
			     PageManager.DataService.setQueryField('bal_from',bal_from);
			     PageManager.DataService.callDataService('contraBalNumberF');
			     /*if(initF==0)
			      accntMod(document.getElementById("cv_fromBankAccountId"));
			     initF=1;*/
			   }
			 }
			function getBalanceTo()
			{

			  	 var ctr= document.getElementById('cv_toBankAccountId');
			  	   var voucherHeader_voucherDate=document.getElementById('voucherHeader_voucherDate').value;
			  	  if(!voucherHeader_voucherDate)
			   {
			    	alert("Please select the voucherdate ");
			    	return;
			   }


			   	if(ctr.selectedIndex != -1){
				     var bal_to=ctr.options[ctr.selectedIndex].value;
				     var balance_to=document.getElementById('amount_to');
				     //balance_from.removeAttribute('exilListSource');
				     //balance_from.setAttribute('exilListSource','balanceFrom');
				       PageManager.DataService.setQueryField('voucherHeader_voucherDate',voucherHeader_voucherDate);
				    // PageManager.DataService.setQueryField('bal_to',bal_to);
				     PageManager.DataService.setQueryField('bal_from',bal_to);

				     PageManager.DataService.callDataService('contraBalNumberG');
				    /* if(initT==0)
				      accntModTo(document.getElementById("cv_toBankAccountId"));
					initT=1;*/
				 }
			}
		 	function checkAccountNumberTo() {
		 		getBalanceTo();
		 		//accntModTo(document.getElementById("cv_toBankAccountId"));
		 		var control= document.getElementById('cv_fromBankAccountId');
		 		if(control.selectedIndex == -1) return;
		 		var obj= document.getElementById('cv_fromBankId');
		 		var obj1=document.getElementById('cv_toBankId');
				var ctrl=document.getElementById('cv_toBankAccountId');
				if(obj1.selectedIndex!=-1 && ctrl.selectedIndex != -1)
					if(ctrl.options[ctrl.selectedIndex].text != "") {
						if(obj.options[obj.selectedIndex].text==obj1.options[obj1.selectedIndex].text)
							if(ctrl.options[ctrl.selectedIndex].text==control.options[control.selectedIndex].text) {
								alert("Cannot Transfer to same Account");
								ctrl.value="";
								ctrl.focus();
								return;
						}
					}
		 	}

		 	function checkAccountNumberFrom() {
		 		getBalanceFrom();
		 		//accntMod(document.getElementById("cv_fromBankAccountId"));
		 		var control= document.getElementById('cv_toBankAccountId');
		 		if(control.selectedIndex == -1) return;
		 		var obj= document.getElementById('cv_fromBankId');
		 		var obj1=document.getElementById('cv_toBankId');
				var ctrl=document.getElementById('cv_fromBankAccountId');
				if(obj1.selectedIndex !=-1 && ctrl.selectedIndex != -1)
					if(ctrl.options[ctrl.selectedIndex].text != "") {
						if(obj.options[obj.selectedIndex].text==obj1.options[obj1.selectedIndex].text)
							if(ctrl.options[ctrl.selectedIndex].text==control.options[control.selectedIndex].text) {
								alert("Cannot Transfer to same Account");
								ctrl.value="";
								ctrl.focus();
								return;
						}
					}
		 	}

		function disableControls(frmIndex, isDisable){
			for(var i=0;i<document.forms[frmIndex].length;i++)
			{
				document.forms[frmIndex].elements[i].disabled =isDisable;
				if(PageManager.DataService.getQueryField('showMode')=='view' &&
					document.forms[frmIndex].elements[i].parentNode.parentNode.getAttribute('id')=='backbutton')
					document.forms[frmIndex].elements[i].disabled =false;
				if(PageManager.DataService.getQueryField('showMode')=='modify'
						&& (document.forms[frmIndex].elements[i].parentNode.parentNode.getAttribute('id')=='reverseSubmit' ||
						 document.forms[frmIndex].elements[i].parentNode.parentNode.getAttribute('id')=='reverseGrid' ))
					document.forms[frmIndex].elements[i].disabled =false;
			}
		}
		function modify(){
				var cgn=PageManager.DataService.getQueryField('cgNumber');
		 		if(cgn){
		 			disableControls(0,false);
		 			document.getElementById('modGrid').style.display='none';
		 			document.getElementById('submitGrid').style.display='block';
		 			//document.getElementById ('text1').style.display ='block';
		 	 	}
		}
		function hideButtons(){
			document.getElementById('modGrid').style.display='none';
			document.getElementById('submitGrid').style.display ="none";
			//document.getElementById ('text1').style.display ="none";
		}
		function loadBanks(){
			clearCombo('cv_fromBankId');
			clearCombo('cv_toBankId');
			clearCombo('cv_fromBankAccountId');
			clearCombo('cv_toBankAccountId');
			var fundObj=document.getElementById('fund_id');
			if(fundObj.selectedIndex==-1)return;
			var fundValue=fundObj.options[fundObj.selectedIndex].value;
			var fromBankObj=document.getElementById('cv_fromBankId');
			var toBankObj=document.getElementById('cv_toBankId');
			fromBankObj.removeAttribute('exilListSource');
			fromBankObj.setAttribute('exilListSource',"bankAndBranchListF");
			toBankObj.removeAttribute('exilListSource');
			toBankObj.setAttribute('exilListSource',"bankAndBranchListT");
			PageManager.DataService.setQueryField('fundValue',fundValue);
			PageManager.DataService.callDataService('bankListForBtoB');
		}
		function clearCombo(cId){
				var bCtrl=document.getElementById(cId);
				for(var i=bCtrl.options.length-1;i>=0;i--)
				{
					bCtrl.remove(i);
				}
		}
		function highLightAccNo(objName,valTest){
			  var obj1=document.getElementById(objName);

			  for(i=0;i<obj1.length;i++){
					if(obj1.options[i].value==valTest) {
							obj1.options[i].setAttribute('selected',true);
							break;
					}
			  }
		}

		function reverse()
		{
		var cgn=PageManager.DataService.getQueryField('cgNumber');
		   if(cgn){
			document.getElementById('reverseRecord').style.display='block';
			document.getElementById('reverseSubmit').style.display='block';
			var vcObj=document.getElementById('voucherHeader_newVcNo');
			vcObj.setAttribute('exilMustEnter','true');
			vcObj.disabled=false;
			var vdObj=document.getElementById('voucherHeader_effDate')
			vdObj.setAttribute('exilMustEnter','true');
			vdObj.disabled=false;
			var bcObj=document.getElementById('diffDebit')
			bcObj.disabled=false;
			document.getElementById('modeOfExec').value="modify";
			document.getElementById('submitGrid').style.display ="none";
		}
		}

		function ButtonPress(name)
		{
				if(sm!='modify')
				{
				    if(!checkBalance())
				      return false;

			    }
		 		var dbDate=document.getElementById('databaseDate').value;
				var vhDate=document.getElementById('voucherHeader_voucherDate').value;
				if(compareDate(formatDateToDDMMYYYY1(vhDate),formatDateToDDMMYYYY1(dbDate)) == -1 )
				{
				alert('Voucher Date should be less than or equal to '+dbDate);
				document.getElementById('voucherHeader_voucherDate').focus();
				return false;
				}

					var cgn=PageManager.DataService.getQueryField('cgNumber');
					var sm=PageManager.DataService.getQueryField('showMode');

					if(name.toLowerCase()=='savennew')
					  {
					   submitAndNew();
					  }

					  if(name.toLowerCase()=='savenclose' && sm!="modify" )
					  {
					 // alert('savenclose');
						insert();
					  }

				   	 if(name.toLowerCase()=='savenclose' && sm=="modify" )
				   	 {
				   			var vDate=document.getElementById('voucherHeader_voucherDate').value;
					   		var vdObj=document.getElementById('voucherHeader_effDate').value;
							 if( compareDate(formatDateToDDMMYYYY1(vDate),formatDateToDDMMYYYY1(vdObj)) == -1 )
							 {
							alert("Reversal date cannot be less than original Voucher date!");
							document.getElementById('voucherHeader_effDate').focus();
							 }
							else
							{
							document.getElementById('modeOfExec').disabled=false;
							document.getElementById('voucherHeader_cgn').disabled=false;
							document.getElementById('voucherHeader_voucherNumber').setAttribute('exilDataType','exilAlphaNumeric');
							document.getElementById('tType').disabled=false;
							disableControls(0,false);
							PageManager.UpdateService.submitForm('jv_BTB');

							}
				  	}

		 		}

		function showglEntry()
			{
				hideColumns(0);
				if(!PageValidator.validateForm())
					return false;
				PageManager.DataService.setQueryField("showGlEntries","show");
				var accNumberObj=document.getElementById("cv_fromBankAccountId");
				var accNumberType=accNumberObj.options[accNumberObj.selectedIndex].value
				PageManager.DataService.setQueryField("fromAccountNumberId",accNumberType);
				var accNumberObj1=document.getElementById("cv_toBankAccountId");
				var accNumberType1=accNumberObj1.options[accNumberObj1.selectedIndex].value
				PageManager.DataService.setQueryField("toAccountNumberId",accNumberType1);
				PageManager.DataService.callDataService('jv_BTB');
			}
			function showEntry()
			{
					var trObj;
					var tObj=document.getElementById("showEntries");
					var cr=0,dr=0;
					tObj.style.display="block";
					var tableObj=document.getElementById("entries");
					for(var i=tableObj.rows.length-1;i>=2;i--)
					{
						tableObj.deleteRow(i);
					}
					var Obj=PageManager.DataService.getControlInBranch(tableObj.rows[1],"display_Code");
					trObj=PageManager.DataService.getRow(Obj);
					var iRow=glNameCode.split(";");
					var rowContents=null;tempObj=null;
					for(var i=1;i<(iRow.length)-1;i++)
					{
						rowContents=iRow[i].split("^");
						if(i==1){
						newRow=trObj;
						tempObj1=PageManager.DataService.getControlInBranch(newRow,'display_CodeType');
						tempObj1.innerHTML=rowContents[0];
						tempObj2=PageManager.DataService.getControlInBranch(newRow,'display_Code');
						tempObj2.innerHTML=rowContents[1];
						tempObj3=PageManager.DataService.getControlInBranch(newRow,'display_Head');
						tempObj3.innerHTML=rowContents[2];
						tempObj5=PageManager.DataService.getControlInBranch(newRow,'display_Narration');
						tempObj5.innerHTML=" -";
						}else{
						var newRow=trObj.cloneNode(true);
						newRow=tableObj.tBodies[0].appendChild(newRow);
						tempObj1=PageManager.DataService.getControlInBranch(newRow,'display_CodeType');
						tempObj1.innerHTML=rowContents[0];
						tempObj2=PageManager.DataService.getControlInBranch(newRow,'display_Code');
						tempObj2.innerHTML=rowContents[1];
						tempObj3=PageManager.DataService.getControlInBranch(newRow,'display_Head');
						tempObj3.innerHTML=rowContents[2];
						tempObj5=PageManager.DataService.getControlInBranch(newRow,'display_Narration');
						tempObj5.innerHTML=" -";
						}

					}
					var totalamount=document.getElementById('chequeAmount').value;

					for(var i=1;i<tableObj.rows.length;i++)
					{
						var typeObj=PageManager.DataService.getControlInBranch(tableObj.rows[i],"display_CodeType");
						var type=typeObj.innerHTML;
						if(type =='credit')
						{
							var trObj=PageManager.DataService.getRow(typeObj);
							col1=PageManager.DataService.getControlInBranch(trObj,'display_Credit');
							col1.innerHTML=totalamount;
							col2=PageManager.DataService.getControlInBranch(trObj,'display_Debit');
							col2.innerHTML="0";
						}
					}
					for(var i=1;i<tableObj.rows.length;i++)
					{
						var typeObj=PageManager.DataService.getControlInBranch(tableObj.rows[i],"display_CodeType");
						var type=typeObj.innerHTML;
						if(type =='debit')
						{
							var trObj=PageManager.DataService.getRow(typeObj);
							col1=PageManager.DataService.getControlInBranch(trObj,'display_Credit');
							col1.innerHTML="0";
							col2=PageManager.DataService.getControlInBranch(trObj,'display_Debit');
							col2.innerHTML=totalamount;
						}
					}

					 var dSum=0;
					 var cSum=0;
					for(var i=1;i<tableObj.rows.length;i++)
					{

					  var dObj=PageManager.DataService.getControlInBranch(tableObj.rows[i],"display_Debit");
					  var cObj=PageManager.DataService.getControlInBranch(tableObj.rows[i],"display_Credit");
					 if(!isNaN(parseFloat(dObj.innerHTML)))
					 {
					   var sum=(parseFloat(dObj.innerHTML));
					   dSum=dSum+sum;
					 }
					 if(!isNaN(parseFloat(cObj.innerHTML)))
					 {
					   var sum=(parseFloat(cObj.innerHTML));
					   cSum=cSum+sum;
					 }
					}
					var newRow=trObj.cloneNode(true);
					newRow=tableObj.tBodies[0].appendChild(newRow);
					objt1=PageManager.DataService.getControlInBranch(newRow,'display_Code');
					objt2=PageManager.DataService.getControlInBranch(newRow,'display_Head');
					objt3=PageManager.DataService.getControlInBranch(newRow,'display_Debit');
					objt4=PageManager.DataService.getControlInBranch(newRow,'display_Credit');
					objt5=PageManager.DataService.getControlInBranch(newRow,'display_Narration');
					objt1.innerHTML=" ";
					objt2.innerHTML=" ";
					objt3.innerHTML=dSum;
					objt4.innerHTML=cSum;
					objt5.innerHTML=" ";

				}
				function check(obj)
				{
						if(obj.value=="C" )
						{
								document.getElementById("chqNo").innerHTML="Cheque No.<SPAN class=leadon>*</SPAN>";
								document.getElementById("chequeDtCaption").innerHTML="Cheque Date<SPAN class=leadon>*</SPAN>";
	             				journalVoucher.cv_fromChequeNumber.disabled=false;
	             				journalVoucher.cv_fromchequeDate.disabled=false;
	             				journalVoucher.cv_fromChequeNumber.setAttribute('exilMustEnter','true');
	             				journalVoucher.cv_fromChequeNumber.setAttribute('exilDataType',"exilUnsignedInt");
	             				journalVoucher.cv_fromchequeDate.setAttribute('exilMustEnter','true');
	             				document.getElementById("chqAvail").style.display="block";
	            		}
						else
						{
	            				//journalVoucher.cv_fromChequeNumber.disabled=false;
	             				//journalVoucher.cv_fromchequeDate.disabled=false;
								journalVoucher.cv_fromChequeNumber.removeAttribute('exilMustEnter');
	             				journalVoucher.cv_fromchequeDate.removeAttribute('exilMustEnter');
	             				//journalVoucher.cv_fromChequeNumber.setAttribute('exilMustEnter','true');
	             				journalVoucher.cv_fromChequeNumber.setAttribute('exilDataType',"exilAlphaNumeric");
	             				//journalVoucher.cv_fromchequeDate.setAttribute('exilMustEnter','true');
	             				document.getElementById("chqNo").innerHTML="Reference No.";
	             				document.getElementById("chequeDtCaption").innerHTML="Reference Date";
	             				document.getElementById("chqAvail").style.display="none";
						}
				 }

				function hideColumns(index)
				{
					var table=document.getElementById('entries');
					for(var i=0;i<table.rows.length;i++){
						table.rows[i].cells[index].style.display="none";
					}
			}
			function checkBalance()
			{
			    var amt=document.getElementById('chequeAmount').value;
				var bal=document.getElementById("amount_from").value;
				bal=isNaN(bal)?0:bal;
				var finalBal=bal-amt;
				if(finalBal<0)
				{
				  if(!confirm("WARNING:  Insufficient Balance in Bank-Account"))
				    return false;
				}
				return true;
			}

	    function accntMod(obj)
		{ //alert("f");
			if(obj.selectedIndex==-1)
			 return;
			// ob=document.getElementById('cv_fromBankAccountId');
			 //alert("y");
			 //alert('sIndex: 	'+sIndex);
			if(sIndex && sIndex!=null)
			{//alert('here'+sIndex+" sText"+sText );
					obj.options[sIndex]= new Option(sText,sValue);
			}

			var text=obj.options[obj.selectedIndex].innerHTML;
		    var temp=text.split(" -- ");
			sIndex=obj.selectedIndex;
			//var indx=ob.selectedIndex;
			sValue=obj.options[obj.selectedIndex].value;
			sText=text;
			//alert("from: "+obj.selectedIndex);
		   // alert(sText+" "+obj.options[obj.selectedIndex].text);
		   if(!temp[1])
			  temp[1]=" ";
			document.getElementById("acc_Desc").value=temp[1];

		   try{
			   if(temp[1] && obj.selectedIndex!=-1)//!=null && temp[0]!="") && obj.selectedIndex)
			   {//alert(temp[0]+' : '+obj.selectedIndex);
			   		     obj.options[sIndex].text=temp[0];
			   		     //obj.text=temp[0];
			   }
		   }catch(err){}
		}
		 function accntModTo(obj)
		{//alert("comimg");
			if(obj.selectedIndex==-1)
			 return;
			if(sIndexTo && sIndexTo!=null)
			{
					obj.options[sIndexTo]= new Option(sTextTo,sValueTo);
			}
			//alert(obj.selectedIndex);
			sIndexTo=obj.selectedIndex;
			var text=obj.options[sIndexTo].text;
			//alert("sIndexTo"+sIndexTo);
		    var temp1=text.split(" -- ");

			//alert("sIndexT:"+sIndexTo);
			sValueTo=obj.options[sIndexTo].value;
			sTextTo=text;
			//alert(temp[1]);
			if(!temp1[1])
				 temp1[1]=" ";
			document.getElementById("acc_DescT").value=temp1[1];

			try{
			   if(temp1[1])//!=null && temp[0]!="")
			   {//alert("insert:"+temp1[0]+"sIndexT: "+obj.selectedIndex);
			     obj.options[sIndexTo].text=temp1[0];
			   }
			 }catch(err){}
		}

function nextChqNo()
{
	var obj=document.getElementById("cv_fromBankAccountId");
	var bankBr=document.getElementById("cv_fromBankId");
	if( bankBr.selectedIndex==-1)
	{
	  alert("Select Bank Branch and Account No!!");
	  return;
	}

	if(obj.selectedIndex==-1)
	{
	  alert("Select Account No!!");
	  return;
	}
	var accNo=obj.options[obj.selectedIndex].text;
	var accNoId=obj.options[obj.selectedIndex].value;
	var sRtn =showModalDialog("SearchNextChqNo.html?accntNo="+accNo+"&accntNoId="+accNoId,"","dialogLeft=300;dialogTop=210;dialogWidth=305pt;dialogHeight=300pt;status=no;");
	if(sRtn!=undefined ) document.getElementById("cv_fromChequeNumber").value=sRtn;
}
	function onClickCancel()
	{
	 window.location="JV_Contra_BToB.htm";
	}


		</SCRIPT>

</head>
<body bgcolor="#ffffff" bottommargin="0" topmargin="0" rightmargin="0" leftmargin="0"
	 marginheight="0" marginwidth="0" onLoad="onLoadTasks();" onKeyDown ="CloseWindow(event); " ><!------------------ Header Begins Begins--------------------->
	<form name="journalVoucher">
	<input type="hidden" name="oldVoucherDate" id="oldVoucherDate">
		<input type=hidden name=databaseDate  id=databaseDate>
		<input type=hidden id="modeOfExec" name="modeOfExec" value="new">
		<input type="hidden" name="tType" id="tType" value="C">
		<input type="hidden" name="cgnNum" id="cgnNum">
		<input type="hidden" name="voucherHeader_id" id="voucherHeader_id">
		<table width="100%" border="0" cellpadding="1" cellspacing="0">
			<tr>
				<td valign="top" ><!------------Content begins here ------------------>
					<table width="100%" border="0" cellpadding="3" cellspacing="0" height="295">
        				<TBODY>
							<tr  >
								<td align="right" valign="center" id="cgnLabel" name="cgnLabel" style="DISPLAY: none"><div class="labelcell">CG&nbsp;Number</div></td>
								<td id="cgnText" name="cgnText" style="DISPLAY: none"><span class="fieldcell"><input name="voucherHeader_cgn" class="fieldinput" id="voucherHeader_cgn" readonly ></span></td>
								<td align="right"  ><div class="labelcell">Voucher Number<span class="leadon">*</span></div></td>
								<td ><table cellpadding="0" cellspacing="0"><tr class="fieldcell">
										<td><input  type=text readonly style="WIDTH:25px;" maxlength="2" name="vnum" id="vnum" style="Display:none"></td>
									   <td><input name="voucherHeader_voucherNumber" maxlength="10" class="fieldinput-left" id="voucherHeader_voucherNumber"  exilDataType="exilAlphaNumeric" exilMustEnter="true"  tabindex=""></td></tr></table>
							    </td>
						    </tr>

						<tr >
							<td align="right" valign="center" ><div align="right" class="labelcell">
									 Fund<span class="leadon">*</span></div>
							</td>
							<td>
								<span class="smallfieldcell"><SELECT id="fund_id" class="fieldinput" name="fund_id" onChange="loadBanks()" exilMustEnter="true" exilListSource="fundNameList" tabindex=""></SELECT></span>
							</td>
							<td align="right"  ><div class="labelcell">Voucher Date<SPAN class=leadon>*</SPAN></div></td>
							<td  ><span class="smallfieldcell"><INPUT class="datefieldinput" id="voucherHeader_voucherDate" size="15" name="voucherHeader_voucherDate" onkeyup="DateFormat(this,this.value,event,false,'3')"  exilMustEnter="true" exilDataType="exilAnyDate" exilCalendar="true" tabindex="">&nbsp;</span></td>
						</tr>
						<tr >
							<td align="right" valign="center" ><div align="right" class="labelcell">Financing Source</div>
							</td>
							<td>
								<span class="smallfieldcell"><SELECT id="fundSource_id" class="fieldinput" name="fundSource_id"  exilListSource="fundSourceNameList" tabindex=""></SELECT></span>
							</td>
							<td></td>
							<td></td>
						</tr>

						<tr >
							<td class="fieldinput" ></td>
							<td align="left"  ><div class="labelcell">Transfer From</div></td>
							<td class="fieldinput"  ></td>
							<td align="left"  ><div class="labelcell">Transfer To</div></td>
						</tr>

						<tr >
							<td align="right" valign="center" ><div class="labelcell">Bank<SPAN class=leadon>*</SPAN></div></td>
							<td>
							<span class="smallfieldcell"><SELECT id="cv_fromBankId" name="cv_fromBankId" class="combowidth2" onChange="getAccountNumberFrom();"  exilMustEnter="true" tabindex="" style="width:230; height:21"></SELECT></span></td>
							<td align="right" valign="center"   ><div class="labelcell">Bank<SPAN class=leadon>*</SPAN></div></td>
							<td>
							<div class="smallfieldcell"><SELECT id="cv_toBankId" name="cv_toBankId" class="combowidth2"  onChange="getAccountNumberTo();"  exilMustEnter="true"  exilTrimLength="10" tabindex="" style="width:215; height:21"></SELECT></div></td>
						</tr>

						<tr >
							<td align="right" valign="center"  ><div class="labelcell">Account No.<SPAN class=leadon>*</SPAN></div></td>
							<td><span class="smallfieldcell"><SELECT name="cv_fromBankAccountId" class="fieldinput" id="cv_fromBankAccountId" style="WIDTH: 135px" onChange="checkAccountNumberFrom();" exilDataType="exilAlphaNumeric" exilMustEnter="true" tabindex=""></SELECT></span>
							<span class="smallfieldcell"><input type="text" id="acc_Desc" name="acc_Desc" class="fieldinput"  readonly></span></td>
							<td align="right" valign="center"   ><div class="labelcell">Account No.<SPAN class=leadon>*</SPAN></div></td>
							<td><span class="smallfieldcell"><SELECT name="cv_toBankAccountId" class="fieldinput" id="cv_toBankAccountId" onChange="checkAccountNumberTo();" exilDataType="exilAlphaNumeric" exilMustEnter="true" tabindex="" style="WIDTH: 135px"></SELECT></span>
							<span class="smallfieldcell"><input type="text" id="acc_Desc" name="acc_DescT" class="fieldinput"  readonly></span></td>
						</tr>
						<tr >
							<td align="right" valign="center" ><div align="right" class="labelcell">Balance<span class="leadon">*</span></div></td>
							<td>
                                <span class="fieldcell"><input name="amount_from" align="center"class="fieldinput-right" id="amount_from"  exilMax="9999999999999.99" readonly></span></td>
							<td align="right" valign="center" ><div align="right" class="labelcell">Balance<span class="leadon">*</span></div></td>
							<td >
                                <span class="fieldcell"><input name="amount_to" align="center" class="fieldinput-right" id="amount_to"    readonly></span></td>
				        </tr>
						<tr >
							<td align="right" valign="center"  ><div align="right" class="labelcell"><span class="leadon"><FONT color=#00438c>Mode&nbsp;of&nbsp;Transfer</FONT></span></div></td>
							<td  align="left" colspan="4">
								 <div class="labelcell"><input type="radio" value="C" checked  id="modeOfCollection" name="modeOfCollection" onClick="check(this); " tabindex="">Cheque&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
								<input type="radio" value="O" id="modeOfCollection" name="modeOfCollection" onClick="check(this); " tabindex="">
								Other</div>
							</td>
						</tr>

						<tr >
							<td ><div id="chqNo" name="chqNo" align="right" valign="center" class="labelcell">Cheque No.<SPAN class=leadon>*</SPAN></div></td>
							<td>
							<table >
							<tr><td><span class="fieldcell"><input name="cv_fromChequeNumber" class="fieldinput" id="cv_fromChequeNumber" maxLength="10" exilDataType="exilUnsignedInt" exilMustEnter="true"  tabindex="" ></span></td>
							<td valign="center" title="Show Next Cheque Number"  nowrap id="chqAvail"><A onclick=nextChqNo() href="#" tabindex=""><IMG height=22 src="/egi/resources/erp2/images/arrowright.gif" width=22 ></A></td>

                            </tr>
							</table>
							</td>

							<td align="right" valign="center"   ><div align="right"><div align="right" valign="center" id="chequeDtCaption" name="chequeDtCaption" class="labelcell">Cheque Date<SPAN class=leadon>*</SPAN></div></div></td>
							<td  ><span class="smallfieldcell"><input name="cv_fromchequeDate" class="datefieldinput" id="cv_fromchequeDate" size="15"   onkeyup="DateFormat(this,this.value,event,false,'3')" exilMustEnter="true"  tabindex=""
            					exilDataType="exilAnyDate" exilCalendar="true"></span> </td>
            			</tr>
						<!--tr >
							<td align="right" valign="center" class="labelcell" ><div align="right"><div align="right" valign="center" class="labelcell">Cheque Date<SPAN class=leadon>*</SPAN></div></div></td>
							<td ><input name="cv_fromchequeDate" class="datefieldinput" id="cv_fromchequeDate" size="15"   onkeyup="DateFormat(this,this.value,event,false,'3')"
            exilDataType="exilAnyDate" exilCalendar="true"> </td>
							<td align="right" valign="center" class="labelcell" ><div align="right">&nbsp;</div></td>
							<td >	&nbsp;	</td>
						</tr-->
						<tr >
							<td align="right" valign="center"><div align="right" class="labelcell">Amount<span class="leadon">*</span></div></td>
							<td >
                            <span class="fieldcell"><input name="chequeAmount" class="fieldinput-right" id="chequeAmount" exilDataType="exilSignedDecimal" exilMustEnter="true" maxlength="16" exilMin="1" exilMax="9999999999999.99"  tabindex=""></span></td>
							<td align="right" valign="center" height="43" ><div align="right" class="labelcell">Narration</div></td>
							<td height="43" ><TEXTAREA class=narrationfieldinput id=cv_narration name=cv_narration rows=3 cols=35 exilDataType="exilAnyChar" maxLength="250" tabindex=""></TEXTAREA></td>
						</tr>

						<!--tr >
							<td align="right" valign="center" class="labelcell" height="43"><div align="right">Narration</div></td>
							<td height="43"><TEXTAREA class=narrationfieldinput id=cv_narration name=cv_narration rows=3 cols=35 exilDataType="exilAnyChar" maxLength="250"></TEXTAREA></td>
							<td align="right" valign="center" class="labelcell" height="43"><div align="right">&nbsp;</div></td>
							<td height="43">	&nbsp;	</td>
						</tr-->
						</TBODY>
					</table>
				</td>
			</tr><!--  Buttons for Request Form starts here -->
			<tr >
				<td height="24" colspan="4" valign="bottom"><span class="labelcell"><p class="smalltext"><span class="leadon">*</span>
					- Mandatory Fields</p></span>	</td>
			</tr>
			<tr >
				<td colspan="4" align="middle"><!-- Buttons Start Here -->
					<table border="0" cellpadding="0" cellspacing="0" align="center" id=TABLE1 width="100%">
				<tr >
					<td colspan="4" align="middle"><!-- Buttons Start Here -->
						<table border="0" cellpadding="0" cellspacing="0">
							<tr id="modGrid">
											<td align="right">
											<IMG height=18 src="/egi/resources/erp2/images/Button_leftside.gif" width=6></td>
											<td bgcolor="#fe0000" valign="center" nowrap id="saveandnewb"><A class=buttonprimary onclick=modify();  href="#" tabindex="">Modify</A></td>
											<td id="saveandnewrb">
											<IMG height=18 src="/egi/resources/erp2/images/Button_rightside.gif" width=6></td>
											<td><IMG src="/egi/resources/erp2/images/spacer.gif" width=8></td>

											</tr>
							<table border="0" cellpadding="0" cellspacing="0"  align="center">
							 <tr id="submitGrid">
							 <td>
							 <input  id="saveandnew" type="button" class="button" value="Save & New" onclick="return ButtonPress('savennew');"/>
							 <input   type="button" class="button" value="Save & Close" onclick="return ButtonPress('savenclose');" />
							 <input   type="button" class="button" value="Cancel" onclick="onClickCancel()" />
							 <input   type="button" class="button" value="Close" onclick=window.close(); />
							 <input   type="button" class="button" value="Show GlEntry" onclick=showglEntry(); />
							 </td>
						</tr></table>						</table><!-- Buttons End Here -->

				<table border="0" cellpadding="0" cellspacing="0" align="center" id=TABLE1 width="100%">
				<TBODY>
				<tr >
					<td colspan="4" align="middle"><!-- Buttons Start Here -->
						<table border="0" cellpadding="0" cellspacing="0" id=TABLE1 >
								<tbody>
								<tr id="reverseGrid">
										<td align="center" width=100% colspan=4>
										<input   type="button" class="button" value="Reverse" onclick=reverse(); />
										</td>
								</tr>
								<tr id="backbutton" >
									<td width=100% align=center colspan=4>
									<input   type="button" class="button" value="Back" onclick="back(window.self)" />

									</td>
								</tr>
								<tr id="reverseRecord"  style="DISPLAY: none">
									<td align="right"><span   valign="center" class="labelcell"> Voucher Number<SPAN class=leadon>*</SPAN></span>
									</td>
									<td><span class=fieldcell><input  class=fieldcell name="voucherHeader_newVcNo" id="voucherHeader_newVcNo" maxlength="10"   exilDataType="exilAlphaNumeric" style="width:148; height:19"></span>
									</td>
									<td align="right">
										<span   valign="center" class="labelcell" >Voucher Date<span class="leadon">*</span>
									</td>
									<td><span class=smallfieldcell> <INPUT class="smallfieldcell" name="voucherHeader_effDate" exilDataType="exilAnyDate" id   ="voucherHeader_effDate" style="WIDTH: 120x; HEIGHT: 19px" size="13" onkeyup="DateFormat(this,this.value,event,false,'3')" exilCalendar="true"></span></span>
									</td>
									<td><INPUT	 type   =hidden class   ="datefieldinput" name="diffDebit" id="diffDebit" style="WIDTH: 101px; HEIGHT: 19px"	size="13"></SPAN>
									</td>
								</tr>
								<tr>
								  <td colspan=4></td>
								<tr></tr>
								</tbody>
							</table>
					</td>
				</tr></TBODY></table><!-- Buttons End Here -->
				<table align="center" border="0" cellpadding="0" cellspacing="0">
					 				<tr id="reverseSubmit" style="display:none">
					 						<td width=100% align=center>
						 						<input type="button"  id="revsave" value="Submit" class="button" onclick="return ButtonPress('savenclose');"/>
						 						<input type="button" id="revclose" value="Close" class="button" onclick="window.close();" />
					 						</td>
									</tr>
					</table>

			<table width="100%" border=0 cellpadding="3" cellspacing="0" id="showEntries" name="showEntries" style="DISPLAY: none">
								<tr >
								<td colspan=4>
								<table width="100%" align=center border="0" cellpadding="0" cellspacing="0" >
								<tr  height="25">
								 <TD class=displaydata align=middle ><h4>GLEntry</h4></TD></tr>
								</table>
								</td>
								</tr>
								<tr><td>
								<table width="80%" border="1" cellpadding="0" cellspacing="0" align=center id="entries" name="entries">
								<tr class="thStlyle">
									<td  ><div align="center" valign="center" > Code Type</div></td>
									<td  ><div align="center" valign="center" > Account Code</div></td>
									<td  ><div align="center" valign="center" > Account Head</div></td>
									<td  ><div align="center" valign="center" > Debit </div></td>
									<td  ><div align="center" valign="center" > Credit</div></td>
									<td  ><div align="center" valign="center" > Narration</div></td>
								</tr>
								<tr class="labelcell">
									<td ><div name="display_CodeType"  id="display_CodeType"   readOnly maxLength="10" tabIndex=0>&nbsp;</div></td>
									<td ><div name="display_Code"  id="display_Code"   readOnly maxLength="10" tabIndex=0>&nbsp;</div></td>
									<td ><div name="display_Head"  id="display_Head"  readOnly maxLength="10" tabIndex=0>&nbsp;</div></td>
									<td ><div name="display_Debit"  id="display_Ddebit"  readOnly maxLength="16" tabIndex=0>&nbsp;</div></td>
									<td ><div name="display_Credit"  id="display_Credit"  readOnly maxLength="16" tabIndex=0>&nbsp;</div></td>
									<td ><div name="display_Narration" id="display_Narration"  readOnly maxLength="10" tabIndex=0>&nbsp;</div></td>
								</tr>
								</table>
								</td>
								</tr>
			</table>
	</form>
</body>
</html>

