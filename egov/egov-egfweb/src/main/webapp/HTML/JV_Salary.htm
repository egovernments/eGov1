#-------------------------------------------------------------------------------
# eGov suite of products aim to improve the internal efficiency,transparency, 
#      accountability and the service delivery of the government  organizations.
#   
#       Copyright (C) <2015>  eGovernments Foundation
#   
#       The updated version of eGov suite of products as by eGovernments Foundation 
#       is available at http://www.egovernments.org
#   
#       This program is free software: you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation, either version 3 of the License, or
#       any later version.
#   
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#   
#       You should have received a copy of the GNU General Public License
#       along with this program. If not, see http://www.gnu.org/licenses/ or 
#       http://www.gnu.org/licenses/gpl.html .
#   
#       In addition to the terms of the GPL license to be adhered to in using this
#       program, the following additional terms are to be complied with:
#   
#   	1) All versions of this program, verbatim or modified must carry this 
#   	   Legal Notice.
#   
#   	2) Any misrepresentation of the origin of the material is prohibited. It 
#   	   is required that all modified versions of this material be marked in 
#   	   reasonable ways as different from the original version.
#   
#   	3) This license does not grant any rights to any user of the program 
#   	   with regards to rights under trademark law for use of the trade names 
#   	   or trademarks of eGovernments Foundation.
#   
#     In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
#-------------------------------------------------------------------------------
<!doctype html public "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<script language="javascript">
var isDrillDown=false;
var isIE;
var req2;
var req;
var codeArray=new Array();
var j=-1;
var k=-1;
var acccodeArray,functionArray;
var codeObj,functionObj ;
var yuiflag = new Array();

		 function isRowsEmpty(){
			var table=document.getElementById("earningTable");
			var tCodeObj , tAmtObj;


			for(var i=1;i<table.rows.length;i++)
			{
				tCodeObj=PageManager.DataService.getControlInBranch(table.rows[i],'chartOfAccounts_glCodeearning');
				tAmtObj=PageManager.DataService.getControlInBranch(table.rows[i],'earningAmount');
				if(tCodeObj.value.length>0 && tAmtObj.value.length==0){
				  alert("Fill the Amount");
				  tAmtObj.focus();
				  return true;
				}
				if(tCodeObj.value.length==0 && tAmtObj.value.length>0){
				  alert("Fill the Code");
				  tCodeObj.focus();
				  return true;
				}
			}

			var tAmount=document.getElementById('ernTotalAmount').value;
			if(isNaN(tAmount)||parseInt(tAmount)<=0||tAmount.length==0) {
			  alert("No  Data To Post");
			  tCodeObj=document.getElementById('chartOfAccounts_glCodeearning');
			  tCodeObj.focus();
			  return true;
			}
			return false;
		 }

		 function isDedRowsEmpty(){
			var table=document.getElementById("deductionTable");
			var tCodeObj , tAmtObj;
			for(var i=1;i<table.rows.length;i++)
			{
				tCodeObj=PageManager.DataService.getControlInBranch(table.rows[i],'chartOfAccounts_glCodeduction');
				tAmtObj=PageManager.DataService.getControlInBranch(table.rows[i],'deductionAmount');
				if(tCodeObj.value.length>0 && tAmtObj.value.length==0){
				  alert("Fill the Amount");
				  tAmtObj.focus();
				  return true;
				}
				if(tCodeObj.value.length==0 && tAmtObj.value.length>0){
				  alert("Fill the Code");
				  tCodeObj.focus();
				  return true;
				}
			}
			return false;
		 }

		 function afterRefreshPage(dc)
		 {

				/*if(window.hasQueryString)
				{
					window.hasQueryString=false	;
					if(PageManager.DataService.getQueryField("departmentId")!=null)
						selectControlValue("department_id","departmentId");
					else
						selectControlValue("fund_id","fundId");
				} */

				 var cgn=PageManager.DataService.getQueryField('cgNumber');
				var sm=PageManager.DataService.getQueryField('showMode');
				if("getSalaryDetails"==dc.values['serviceID'] && sm=="edit"  && cgn)
					{
						var vnum=dc.values['voucherHeader_voucherNumber'];
						var subVnum=vnum.substring(0,2);
						document.getElementById("voucherHeader_voucherNumber").value=vnum.substring(2,vnum.length);
						document.getElementById("vnum").value=subVnum;
						 if(document.getElementById("oldVoucherDate").value == "")
					    {
											document.getElementById("oldVoucherDate").value=formatDate2(dc.values['voucherHeader_voucherDate']);
		 				}
		 				//alert(document.getElementById("oldVoucherDate").value);

					}

/*				if("getSalaryDetails"==dc.values['serviceID'] && sm=="edit" && dc.grids['deductionTable'].length>1 && dc.grids['entities_grid'].length>1 && cgn)
				{
						addNodes();
				}
*/
				if(dc.values['serviceID']=='jvsalData')
				{
					if(dc.values['serviceID']!='jvSalaryJournal'){

						var dt=dc.values['databaseDate'];
						//alert("dc.values['databaseDate']---"+dc.values['databaseDate']);
						document.getElementById('voucherHeader_voucherDate').value=dt;
					}
				}

				if(dc.values['serviceID']=='getSalaryDetails'){
					if(dc.grids['deductionTable'].length==0 || dc.grids['deductionTable'].length==1)
					{
						PageManager.DataService.addNewRow('deductionTable');
					}
				}


				var voucherStatus=dc.values['voucherHeader_status'];
				var voucherConfirmed=dc.values['voucherHeader_confirmed'];
				if(voucherConfirmed=='0')
					document.getElementById('voucherHeader_status').value="Unconfirmed";
				else if(voucherConfirmed=='1' && voucherStatus=='0')
					document.getElementById('voucherHeader_status').value="Confirmed";
				else if(voucherStatus=='1')
					document.getElementById('voucherHeader_status').value="Reversed";
				else if(voucherStatus=='2')
				document.getElementById('voucherHeader_status').value="Reversal";

				var voucherHeader_voucherDate=dc.values['voucherHeader_voucherDate'];
				//alert("voucherHeader_voucherDate---"+voucherHeader_voucherDate);
				if(voucherHeader_voucherDate){
					voucherDate=formatDateToDDMMYYYY2(voucherHeader_voucherDate);
					document.getElementById('voucherHeader_voucherDate').value=voucherDate;

				}
				var dTable=dc.grids['deductionTable'];
				var deductionTable=document.getElementById('deductionTable');
				if(dTable){
				for(var i=1;i<dTable.length;i++){
				PageManager.DataService.getControlInBranch(deductionTable.rows[i], 'chartOfAccounts_glCodeduction').value=dTable[i][2];
				PageManager.DataService.getControlInBranch(deductionTable.rows[i], 'chartOfAccounts_namededuction').value=dTable[i][3];
				 }
			   }
		 }
		 function selectControlValue(controlId,paramName)
		 {
			var id=PageManager.DataService.getQueryField(paramName);
			var bCtrl=document.getElementById(controlId);
			for(var i=0;i<bCtrl.options.length;i++)
			{
				if(bCtrl.options[i].value==id)
				{
						bCtrl.options[i].selected=true;
						window.hasQueryString=false;
						break;
				}
			}
		 }
		 function ButtonPress(name)
		 {

			insertBlankRow('entities_grid',1);//insert blank row at position=1
			insertBlankRow('entitiesNew_grid',1);//insert blank row at position=1

		   if(name.toLowerCase()=='savenew') str="new";
		   if(name.toLowerCase()=='saveclose') str="close";
		               var cgn=PageManager.DataService.getQueryField('cgNumber');
		               if(cgn)
		               {
		                disableControls(0,false);
		                if(!checkForFunction_AccountCode('earningTable','cv_fromFunctionCodeId','chartOfAccounts_glCodeearning')) return false;
						if(!checkForFunction_AccountCode('deductionTable','cv_fromFunctionCodeId1','chartOfAccounts_glCodeduction')) return false;

		                }
             else
			{
			   if(PageValidator.validateForm())
		 	   {
				 	/* checking for duplicate account codes */
					if(!checkForFunction_AccountCode('earningTable','cv_fromFunctionCodeId','chartOfAccounts_glCodeearning')) return false;
					if(!checkForFunction_AccountCode('deductionTable','cv_fromFunctionCodeId1','chartOfAccounts_glCodeduction')) return false;

		 			if(!checkDuplicatesAmongTables())return;
		 		//	if(!checkSalaryCode())return;
		 			if(!checkNarration('voucherDetail_narration'))return;
		 			if(isRowsEmpty())return;
		 			if(isDedRowsEmpty())return;
		 			var netPay=document.getElementById('netPay');
		 			if(isNaN(netPay.value)||netPay.value<=0){
		 				alert("Entries Invalid:Net Pay Can't be Less than or equal to zero");
		 				return;
		 			}

		 			disableControls(0,false);

			   }
			   else return;
		   }
		 		var dbDate=document.getElementById('databaseDate').value;
				var vhDate=document.getElementById('voucherHeader_voucherDate').value;
				if(compareDate(formatDateToDDMMYYYY1(vhDate),formatDateToDDMMYYYY1(dbDate)) == -1 )
				{
				alert('Voucher Date should be less than or equal to '+dbDate);
				document.getElementById('voucherHeader_voucherDate').focus();
				return false;
				}
				var sm=PageManager.DataService.getQueryField('showMode');
				if(sm=='modify')
				{
				var effDate=document.getElementById('voucherHeader_effDate').value;
				if(compareDate(formatDateToDDMMYYYY1(effDate),formatDateToDDMMYYYY1(dbDate)) == -1 ){
				alert('Voucher Date should be less than or equal to '+dbDate);
				document.getElementById('voucherHeader_effDate').focus();
				return false;
				}
				}
		   PageManager.UpdateService.submitForm('jvSalaryJournal');

		 }
		 function beforeRefreshPage(dc)
		 {

		 	if(dc.values['glCodeName'])
				{
				  glNameCode=dc.values['glCodeName'];
				 showEntry();
				}
			if(!isNaN(parseInt(dc.values['voucherHeader_cgn'])))
			dc.values['voucherHeader_cgn']='SAL'+dc.values['voucherHeader_cgn'];
		 if(isDrillDown && dc.values['serviceID']=='getSalaryDetails')
		  {
	  	 	dc=createRowIndex(dc,'earningTable','entitiesNew_grid');
	  	 	dc=createRowIndex(dc,'deductionTable','entities_grid');
	  	 	dc=createRowIndex(dc,'netPayTable','entitiesNewPay_grid');
	  	 	//interchange total earning amt and total deduction amt
	  	 	if(dc.values['showMode']==  'view' && dc.values['voucherHeader_status']=='2'){
				var tvar=dc.values['dedTotalAmount'];
				dc.values['dedTotalAmount']=dc.values['ernTotalAmount']='56';
				dc.values['ernTotalAmount']=tvar;
			}
		  }
		 }
		 function afterUpdateService(dc)
		 {
		 	disableControls(0,true);
			if(str=="new")	window.location="JV_Salary.htm";
			if(str=="close") window.close()

		 }

		 function onloadTasks()
		 {
		 	document.getElementById('voucherHeader_voucherNumber').focus();
		 	//document.title="Salary Bill"
			 document.getElementById('reverseSubmit').style.display ="none";
			 PageManager.ListService.callListService();
			  PageManager.DataService.addNewRow('earningTable');
 			 PageManager.DataService.addNewRow('deductionTable');
			 PageManager.DataService.addNewRow('gridSupplierJournal');
			var cgn=PageManager.DataService.getQueryField('cgNumber');
			var sm=PageManager.DataService.getQueryField('showMode');
		 	  if(cgn && (sm=="modify"))
		 	 {
		 		isDrillDown=true;
				PageManager.DataService.setQueryField('cgNumber',cgn);
				PageManager.DataService.callDataService('getSalaryDetails');
				document.getElementById('voucherHeader_voucherDate').removeAttribute('exilDataType','');
				document.getElementById('modGrid').style.display='block';
		 		document.getElementById('submitGrid').style.display ="none";
		 		document.getElementById('voucherHeader_voucherNumber').setAttribute('exilDataType','exilAlphaNumeric');
		 		document.getElementById('cgnLabel').style.display='block';
		 		 document.getElementById('backbutton').style.display="none";

				disableControls(0,true);
		 	 }
		 	 if(cgn && (sm=="view"))
		 	 {
		 	 	isDrillDown=true;
				PageManager.DataService.setQueryField('cgNumber',cgn);
				PageManager.DataService.callDataService('getSalaryDetails');
				document.getElementById('modGrid').style.display='none';
				document.getElementById('submitGrid').style.display ="none";
				document.getElementById('cgnLabel').style.display='block';
				 document.getElementById('backbutton').style.display='block';

				disableControls(0,true);
		 	  }

		else if(cgn && (sm=="edit")){
				isDrillDown=true;
				PageManager.DataService.setQueryField('cgNumber',cgn);
				PageManager.DataService.callDataService('getSalaryDetails');
				document.getElementById('voucherHeader_voucherNumber').setAttribute('exilDataType','exilAlphaNumeric');
				document.getElementById('voucherHeader_voucherDate').setAttribute('exilDataType','');
		  		document.getElementById('modGrid').style.display='none';
		  		document.getElementById('submitGrid').style.display ="none";
		  		document.getElementById('saveandnew').style.display ="none";
		  		document.getElementById('cgnLabel').style.display='block';
		  		//document.getElementById('cgnText').style.display='block';
		  		document.getElementById('backbutton').style.display='none';
		  		//document.getElementById('screenName').innerHTML="Salary Bill -Modify";

		  		edit();

		 	 }



		 	 if(!cgn)
		 	 {
				//var vcNo=document.getElementById("voucherHeader_voucherNumber");
				//vcNo.focus();
				window.hasQueryString=false;
				if(window.location.search.indexOf("?")>=0)
					window.hasQueryString=true;
				// insertDates('voucherHeader_voucherDate');
				//var dt="30-11-2005";
				//document.getElementById('voucherHeader_voucherDate').value=dt;
				 PageManager.DataService.callDataService("jvsalData");
				 PageManager.DataService.callDataService("getNetPayGridTable");
				 obj=document.getElementById('modGrid').style.display="none";
				 document.getElementById('statusInfo').style.display ="none";
				  document.getElementById('backbutton').style.display="none";
			 }

	/*
	 * The following code for account code implements Ajax autocomplete through YUI.
	 *
	 */
	       var type='getAllCoaCodes';
            var url = "../commons/Process.jsp?type=" +type+ " ";
           	var req2 = initiateRequest();
            req2.onreadystatechange = function()
            {
	                  if (req2.readyState == 4)
	                  {
	                      if (req2.status == 200)
	                      {
	                      	var codes2=req2.responseText;
	                      	var a = codes2.split("^");
							var codes = a[0];
							acccodeArray=codes.split("+");
							codeObj = new YAHOO.widget.DS_JSArray(acccodeArray);
	                      }
	                  }
	        };
	        req2.open("GET", url, true);
	        req2.send(null);

		/*
		 * The following code implements Ajax autocomplete through YUI for function name.
		 *
		 */
			  var type='getAllFunctionName';
			  var url1 = "../commons/Process.jsp?type=" +type+ " ";
				var req3 = initiateRequest();

			  req3.onreadystatechange = function()
			  {		//codeObj=null;
					   if (req3.readyState == 4)
					   {
						  if (req3.status == 200)
						  {
							var codes2=req3.responseText;
							var a = codes2.split("^");
								var codes = a[0];
								functionArray=codes.split("+");// alert(functionArray);
								functionObj = new YAHOO.widget.DS_JSArray(functionArray);
						  }
					   }
			   };
			   req3.open("GET", url1, true);
			   req3.send(null);

		 }
		function autocompletecode(obj)
		{

			// set position of dropdown
			var src = obj;
			var target = document.getElementById('codescontainer');
			var posSrc=findPos(src);
			target.style.left=posSrc[0];
			target.style.top=posSrc[1]+25;
			target.style.width=500;

			var currRow=PageManager.DataService.getRow(obj);
			var coaCodeObj = obj;//PageManager.DataService.getControlInBranch(currRow,'chartOfAccounts_glCodeearning');
			//40 --> Down arrow, 38 --> Up arrow
			if(yuiflag[currRow.rowIndex] == undefined)
   			{
						if(event.keyCode != 40 )
						{
							if(event.keyCode != 38 )
							{
									var oAutoComp = new YAHOO.widget.AutoComplete(coaCodeObj,'codescontainer', codeObj);
									oAutoComp.queryDelay = 0;
									oAutoComp.prehighlightClassName = "yui-ac-prehighlight";
									oAutoComp.useShadow = true;
									oAutoComp.maxResultsDisplayed = 15;
   									oAutoComp.useIFrame = true;
							}
						}
						yuiflag[currRow.rowIndex] = 1;
   			}

		}
		 function autocompletecodeFunction(obj)
		{
			 // set position of dropdown
			var src = obj;
			var target = document.getElementById('codescontainer');
			//target.style.position="absolute";
			var posSrc=findPos(src);
			target.style.left=posSrc[0];
			target.style.top=posSrc[1]+25;
			target.style.width=200;

			var currRow=PageManager.DataService.getRow(obj);
			var coaCodeObj = obj;//PageManager.DataService.getControlInBranch(currRow,'function_code');
			//40 --> Down arrow, 38 --> Up arrow
			if(yuiflag[currRow.rowIndex] == undefined)
   			{
				if(event.keyCode != 40 )
				{
					if(event.keyCode != 38 )
					{
						var oAutoComp = new YAHOO.widget.AutoComplete(coaCodeObj,'codescontainer', functionObj);
						oAutoComp.queryDelay = 0;
						oAutoComp.prehighlightClassName = "yui-ac-prehighlight";
						oAutoComp.useShadow = true;
						oAutoComp.maxResultsDisplayed = 15;
   						oAutoComp.useIFrame = true;
					}
				}
				yuiflag[currRow.rowIndex] = 1;
   			}
		}
		 function getAccName1(obj,neibrObjName)
		 {  			var temp = obj.value; temp = temp.split("`-`");
						obj.value=temp[0];
			 			PageManager.DescService.onblur(neibrObjName);
			 			var src=obj;
						var target = document.getElementById('codescontainer');
						var posSrc=findPos(src);
						target.style.left=posSrc[0];
						target.style.top=posSrc[1]+20;
						target.style.width=500;

						//alert(	neibrObjName);
						var currRow=PageManager.DataService.getRow(obj);
						yuiflag[currRow.rowIndex] = undefined;
						neibrObj=PageManager.DataService.getControlInBranch(currRow,neibrObjName);
						//obj=PageManager.DataService.getControlInBranch(obj.parentNode.parentNode,"chartOfAccounts_glCodeearning");

						if(temp[1]==null) return; else 	neibrObj.value = temp[1];
			neibrObj.disabled=true;
		 }

		 function getFunId1(obj,neibrObjName)
		 {
			 var src=obj;
			 PageManager.DescService.onblur(neibrObjName);
			var target = document.getElementById('codescontainer');
			var posSrc=findPos(src);
			target.style.left=posSrc[0];
			target.style.top=posSrc[1]+20;
			target.style.width=500;

			var currRow=PageManager.DataService.getRow(obj);
			yuiflag[currRow.rowIndex] = undefined;
			neibrObj=PageManager.DataService.getControlInBranch(currRow,neibrObjName);
			//obj=PageManager.DataService.getControlInBranch(obj.parentNode.parentNode,"function_code");
			var temp = obj.value; temp = temp.split("`-`");

			obj.value=temp[0];
			if(temp[1]==null) return; else 	neibrObj.value = temp[1];
			neibrObj.disabled=true;

		 }


		 function calculateEarningTotal()
		 {
		 	var table=document.getElementById("earningTable");
			var tAmountObj;
			var tAmount=0;
			tAmountObj=document.getElementsByName('earningAmount');
			for(var i=0;i<tAmountObj.length;i++)
			{
				temp=parseFloat(tAmountObj[i].value);
				if(!isNaN(temp)) tAmount+=temp;
			}
			tAmountObj=document.getElementById('ernTotalAmount');
			if(!isNaN(tAmount)) tAmountObj.value=Math.round(tAmount*100)/100;
			calculateTotal();
		 }
		 function edit(){
				var cgn=PageManager.DataService.getQueryField('cgNumber');
		 		if(cgn){
		 			//document.forms[0].voucherHeader_cgn.disabled=true;
		 			//document.forms[0].voucherHeader_voucherNumber.disabled=true;
		 			document.getElementById("vnum").style.display="block";
		 			document.getElementById('submitGrid').style.display ="block";
					document.getElementById('modeOfExec').value="edit";
					//enableControls(0,false);
		 	 	}
		}

		 function calculateDeductionTotal()
		 {
		 	var table=document.getElementById("deductionTable");
			var tAmountObj;
			var tAmount=0;
			tAmountObj=document.getElementsByName('deductionAmount');
			for(var i=0;i<tAmountObj.length;i++)
			{
				temp=parseFloat(tAmountObj[i].value);
				if(!isNaN(temp)) tAmount+=temp;
			}
			tAmountObj=document.getElementById('dedTotalAmount');
			if(!isNaN(tAmount)) {
			tAmount=Math.round(tAmount*100)/100 ;
			tAmountObj.value=tAmount;
			}
			calculateTotal();
		 }
  function colAllTotalnew(objname1,target1)
  {
  	if(objname1!=null && objname1!='')
	{

  	var a = document.getElementsByName(objname1);

  	var count1 = 0;
  	for(var i = 0; i<=a.length -1;i++) if(a[i].value)
  		count1 += parseFloat(a[i].value);
  		count1=Math.round(count1*100)/100 ;
  		document.getElementById(target1).value = count1;

        }
           calculateEarningTotal();
           calculateDeductionTotal();
      }

		 function calculateTotal()
		 {


			var tNetPayObj=document.getElementById('netPay');
			var ernAmt=parseFloat(document.getElementById('ernTotalAmount').value);
			var dedAmt=parseFloat(document.getElementById('dedTotalAmount').value);
			if(isNaN(ernAmt))ernAmt=0;
			if(isNaN(dedAmt))dedAmt=0;
			var result=ernAmt-dedAmt;
			if(!isNaN(result)){
				result=Math.round(result*100)/100 ;
				tNetPayObj.value=result;
				}
		 }

		 function funClear(obj,tableNo)
		 {
		   if(tableNo==1)
		   {
		   var v =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode,'function_code')
		   var w =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode,'cv_fromFunctionCodeId')

			if(v.value==""){
			v.value="";
			w.value="";
			}

		   }

		   if(tableNo==2)
		   {
		   var v =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode,'function_code1')
		   var w =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode,'cv_fromFunctionCodeId1')

			if(v.value==""){
			v.value="";
			w.value="";
			}
		   }
		   if(tableNo==3)
		   {
		   var v =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode,'function_codepay')
		   var w =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode,'cv_fromFunctionCodeIdpay')

				if(v.value==""){
				v.value="";
				w.value="";
				}
			}

		 }
		 function openSearch(obj,tableNo)
         {
		if(PageManager.DataService.getQueryField('showMode')!=null && (PageManager.DataService.getQueryField('showMode')=='view' || PageManager.DataService.getQueryField('showMode')=='modify')) return false;
		var a = new Array(2);

           var sRtn;
           if (tableNo == 1){
				/*sRtn= showModalDialog("Search.html?screenName=salaryJvEarn",
							"dialogLeft=300;dialogTop=210;dialogWidth=305pt;dialogHeight=300pt;status=no;");
				*/
				sRtn =showModalDialog("Search.html?filterServiceID=9","","dialogLeft=300;dialogTop=210;dialogWidth=305pt;dialogHeight=300pt;status=no;");
			}else if (tableNo == 2){
				/*sRtn= showModalDialog("Search.html?screenName=salaryJvDeduct","",
							"dialogLeft=300;dialogTop=210;dialogWidth=305pt;dialogHeight=300pt;status=no;");
				*/
				sRtn =showModalDialog("Search.html?filterServiceID=10","","dialogLeft=300;dialogTop=210;dialogWidth=305pt;dialogHeight=300pt;status=no;");
			}
           if ( sRtn != '' )
	       {
			 a = sRtn.split("`~`");
			 var x ,y,v,w;
			 if(tableNo==1)
			 {


				/*v =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode.parentNode,'function_code')
				w =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode.parentNode,'cv_fromFunctionCodeId')*/

				x=PageManager.DataService.getControlInBranch(obj.parentNode.parentNode,'chartOfAccounts_glCodeearning');
				y =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode.parentNode,'chartOfAccounts_nameearning');
			 }
			 else
			 {
 				x=PageManager.DataService.getControlInBranch(obj.parentNode,'chartOfAccounts_glCodeduction');
				y =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode.parentNode,'chartOfAccounts_namededuction');
			/*	v =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode.parentNode,'function_code1')
				w =PageManager.DataService.getControlInBranch(obj.parentNode.parentNode.parentNode,'cv_fromFunctionCodeId1')*/

			 }
			 x.value = a[0];
			 y.value = a[1];
			/* if(v.value=="")
			 {
			 v.value = a[3];
			 w.value = a[4];
			 }
			 //alert(w.value);*/

		   }
         }
        function openSearch1(obj, tableName, tableNo){
		if(PageManager.DataService.getQueryField('showMode')!=null && (PageManager.DataService.getQueryField('showMode')=='view' || PageManager.DataService.getQueryField('showMode')=='modify')) return false;
		var a = new Array(2);
		var sRtn;
		var str="";
		if(tableName.toLowerCase()=='function'){
		 str = "Search.html?tableNameForCode=function";

		sRtn= showModalDialog(str,"",
				"dialogLeft=300;dialogTop=210;dialogWidth=305pt;dialogHeight=300pt;status=no;");
		if(sRtn != '')
		{
			a = sRtn.split("`~`");

			if(tableName.toLowerCase() == 'function' && tableNo==1)
			{
				//alert("a 0 value= "+a[0]+" a 1 value = " +a[1]+" a 2 value ="+a[2]);
				var y = PageManager.DataService.getControlInBranch(obj.parentNode,'function_code');
				var x = PageManager.DataService.getControlInBranch(obj.parentNode,'cv_fromFunctionCodeId');

			}

			else
			{
				var y = PageManager.DataService.getControlInBranch(obj.parentNode,'function_code1');
				var x = PageManager.DataService.getControlInBranch(obj.parentNode,'cv_fromFunctionCodeId1');

			}
			y.value = a[1];
			x.value = a[2];

		}
	}
  }
/*  function openSearch2(obj, tableName){
		var a = new Array(2);
		var sRtn;
		var str="";
		if(tableName.toLowerCase()=='function'){
		 str = "Search.html?tableNameForCode=function";

		sRtn= showModalDialog(str,"",
				"dialogLeft=300;dialogTop=210;dialogWidth=305pt;dialogHeight=300pt;status=no;");
		if(sRtn != '')
		{
			a = sRtn.split(",");

			if(tableName.toLowerCase() == 'function')
			{
				//alert("a 0 value= "+a[0]+" a 1 value = " +a[1]+" a 2 value ="+a[2]);
				var y = PageManager.DataService.getControlInBranch(obj.parentNode,'function_code1');
				y.value = a[1];
				var x = PageManager.DataService.getControlInBranch(obj.parentNode,'cv_fromFunctionCodeId1');
				x.value = a[2];

			}
		}
	}
  }*/
         function checkDuplicatesAmongTables()
         {
			var earTable=document.getElementById("earningTable");
			var dedTable=document.getElementById("deductionTable");
			var row1Data,rowData;
			for(var i=1;i<earTable.rows.length;i++){
				row1Data=PageManager.DataService.getControlInBranch(earTable.rows[i],"chartOfAccounts_glCodeearning");
				for(var j=1;j<dedTable.rows.length;j++){
					rowData=PageManager.DataService.getControlInBranch(dedTable.rows[j],"chartOfAccounts_glCodeduction");
					if((row1Data.value.toLowerCase()==rowData.value.toLowerCase())&&rowData.value.length>0){
						alert("Record "+j+" Account Code Of Deductions  Cannot be Same as Record "+i+" of Earnings");
						rowData.value="";
						rowData.focus();
						return false;
					}
				}
			}
			return true;
         }
         function checkSalaryCode(){
			var table=document.getElementById("earningTable");
			var rowData;
			var foundCode=0;
			for(var i=1;i<table.rows.length;i++){
				rowData=PageManager.DataService.getControlInBranch(table.rows[i],"chartOfAccounts_glCodeearning");
				for(var j=0;j<g_salCodesRequired.length;j++){
					if(rowData.value==g_salCodesRequired[j]){
						foundCode++;
					}
				}
			}
			if(foundCode==0){
				alert("please select salary code in earnings");
				return false;
			}else if(foundCode>1){
				alert("select only one salary code");
				return false;
			}
			return true;
		  }
		  function disableControls(frmIndex, isDisable){
			for(var i=0;i<document.forms[frmIndex].length;i++)
			{
				document.forms[frmIndex].elements[i].disabled =isDisable;
				if(PageManager.DataService.getQueryField('showMode')=='view' &&
					document.forms[frmIndex].elements[i].parentNode.parentNode.getAttribute('id')=='backbutton')
					document.forms[frmIndex].elements[i].disabled =false;
				if(PageManager.DataService.getQueryField('showMode')=='modify'
						&& (document.forms[frmIndex].elements[i].parentNode.parentNode.getAttribute('id')=='modGrid' ||
						 document.forms[frmIndex].elements[i].parentNode.parentNode.getAttribute('id')=='reverseSubmit' ))
					document.forms[frmIndex].elements[i].disabled =false;
			}
		}

			function modify(){
				var cgn=PageManager.DataService.getQueryField('cgNumber');
		 		if(cgn){
		 			/*vGrid=document.getElementById('earningTable').cloneNode(true);
		 			new_vGrid=document.body.appendChild(vGrid);
		 			new_vGrid.name= 'voucherDetailGridNew';
		 			new_vGrid.disabled=false;

		 			tGrid=document.getElementById('buttonTable').cloneNode(true);
		 			new_tGrid=document.body.appendChild(tGrid);
		 			new_tGrid.name= 'voucherDetailGridNew';
		 			new_tGrid.disabled=true;

		 			disableControls(0,false);
		 			document.getElementById('modGrid').style.display='none';
		 			document.getElementById('submitGrid').style.display='block';
		 			//document.getElementById ('text1').style.display ='block';*/
						document.getElementById('reverseRecord').style.display='block';
						var vcObj=document.getElementById('voucherHeader_newVcNo');
					vcObj.setAttribute('exilMustEnter','true');
					vcObj.disabled=false;
					var vdObj=document.getElementById('voucherHeader_effDate')
					vdObj.setAttribute('exilMustEnter','true');
						vdObj.disabled=false;

					document.getElementById('modeOfExec').value="modify";
		 			document.getElementById('reverseSubmit').style.display ="block";


		 	 	}
		}

		function onClickCancel()
				{
					window.location = "JV_Salary.htm"
		}
		function hideButtons(){
			document.getElementById('modGrid').style.display='block';
			document.getElementById('submitGrid').style.display ="none";
			//document.getElementById ('text1').style.display ="none";
		}

/*		function checkDuplicatesDeduction(tableId,ctlToSearch)
         {
			var table=document.getElementById(tableId);
			var row1Data,rowData;
			for(var i=1;i<table.rows.length-1;i++){
				row1Data=PageManager.DataService.getControlInBranch(table.rows[i],ctlToSearch);
				for(var j=i+1;j<table.rows.length;j++){
					rowData=PageManager.DataService.getControlInBranch(table.rows[j],ctlToSearch);
					if((row1Data.value.toLowerCase()==rowData.value.toLowerCase())&&rowData.value.length>0){
						if(!checkEntityDuplication(i,j,'entities_grid',''))continue;
						alert("Record "+j+" Account Code  Cannot be Same as Record "+i);
						rowData.value="";
						rowData.focus();
						return false;

					}
				}

			}
			return true;
         }
*/
			function showglEntry()
			{
				hideColumn(0);
				if(!PageValidator.validateForm())
				return false;
				var gltable= document.getElementById("earningTable");
				code=PageManager.DataService.getControlInBranch(gltable.rows[1],'chartOfAccounts_glCodeearning').value;
				if(code)
				{
					PageManager.DataService.setQueryField("showGlEntries","show");
					var earTable= document.getElementById("earningTable");
					var count=1;
					for(var i=1;i<earTable.rows.length;i++)
					{
						earCode=PageManager.DataService.getControlInBranch(earTable.rows[i],'chartOfAccounts_glCodeearning').value;
						if(earCode)
						{
						PageManager.DataService.setQueryField("earningCode"+i,earCode);
						count=count+1;
						}
					}
					PageManager.DataService.setQueryField("recCount",count);
					PageManager.DataService.callDataService('jvSalaryJournal');
				}
				else
				{
					alert("Enter Account code Details");
					return false;
				}
			}
				function showEntry()
				{
					var trObj;var Obj;
					var tObj=document.getElementById("showEntries");
					var cr=0,dr=0;
					tObj.style.display="block";
					var tableObj=document.getElementById("entries");
					var gltable= document.getElementById("earningTable");
					var gltable1= document.getElementById("deductionTable");
					for(var i=tableObj.rows.length-1;i>=2;i--)
					{
						tableObj.deleteRow(i);
					}
					for(var i=1;i<gltable.rows.length;i++)
					{

						code=PageManager.DataService.getControlInBranch(gltable.rows[i],'chartOfAccounts_glCodeearning').value;
						if(code)
						{
						name=PageManager.DataService.getControlInBranch(gltable.rows[i],'chartOfAccounts_nameearning').value;
						amount=PageManager.DataService.getControlInBranch(gltable.rows[i],'earningAmount').value;
						dr=dr+(parseFloat(amount,10));
						Obj=PageManager.DataService.getControlInBranch(tableObj.rows[1],"display_Code");
						trObj=PageManager.DataService.getRow(Obj);
						 if(i==1){
										newRow=trObj;
										objt1=PageManager.DataService.getControlInBranch(newRow,'display_Code');
						 				objt2=PageManager.DataService.getControlInBranch(newRow,'display_Head');
						 				objt3=PageManager.DataService.getControlInBranch(newRow,'display_Debit');
						 				objt4=PageManager.DataService.getControlInBranch(newRow,'display_Credit');
						 				objt5=PageManager.DataService.getControlInBranch(newRow,'display_Narration');
						 				if(code=="") code=" -"; if(name=="") name=" -";
						 				objt1.innerHTML=code;
						 				objt2.innerHTML=name;
						 				objt3.innerHTML=amount;
						 				objt4.innerHTML="0";
										objt5.innerHTML="-"
						 }else{

								 var newRow=trObj.cloneNode(true);
								newRow=tableObj.tBodies[0].appendChild(newRow);
								objt1=PageManager.DataService.getControlInBranch(newRow,'display_Code');
								objt2=PageManager.DataService.getControlInBranch(newRow,'display_Head');
								objt3=PageManager.DataService.getControlInBranch(newRow,'display_Debit');
								objt4=PageManager.DataService.getControlInBranch(newRow,'display_Credit');
								objt5=PageManager.DataService.getControlInBranch(newRow,'display_Narration');
								if(code=="") code=" -"; if(name=="") name=" -";
								objt1.innerHTML=code;
								objt2.innerHTML=name;
								objt3.innerHTML=amount;
								objt4.innerHTML="0";
								objt5.innerHTML="-";
						}
					  }
					}

					for(var i=1;i<gltable1.rows.length;i++)
					{

						code=PageManager.DataService.getControlInBranch(gltable1.rows[i],'chartOfAccounts_glCodeduction').value;
						if(code)
						{
						name=PageManager.DataService.getControlInBranch(gltable1.rows[i],'chartOfAccounts_namededuction').value;
						deductionAmount=PageManager.DataService.getControlInBranch(gltable1.rows[i],'deductionAmount').value;
						cr=cr+parseFloat(deductionAmount,10);
						 		var newRow=trObj.cloneNode(true);
								newRow=tableObj.tBodies[0].appendChild(newRow);
								objt1=PageManager.DataService.getControlInBranch(newRow,'display_Code');
								objt2=PageManager.DataService.getControlInBranch(newRow,'display_Head');
								objt3=PageManager.DataService.getControlInBranch(newRow,'display_Debit');
								objt4=PageManager.DataService.getControlInBranch(newRow,'display_Credit');
								objt5=PageManager.DataService.getControlInBranch(newRow,'display_Narration');
								if(code=="") code=" -"; if(name=="") name=" -";
								objt1.innerHTML=code;
								objt2.innerHTML=name;
								objt3.innerHTML="0";
								objt4.innerHTML=deductionAmount;
								objt5.innerHTML="-";
						}

					}


					var iRow=glNameCode.split(";");
					var rowContents=null;tempObj=null;
					for(var i=1;i<(iRow.length)-1;i++)
					{
						rowContents=iRow[i].split("^");
						if(rowContents[0] == "credit")
						{
						var newRow=trObj.cloneNode(true);
						newRow=tableObj.tBodies[0].appendChild(newRow);
						tempObj1=PageManager.DataService.getControlInBranch(newRow,'display_CodeType');
						tempObj1.innerHTML=rowContents[0];
						tempObj2=PageManager.DataService.getControlInBranch(newRow,'display_Code');
						tempObj2.innerHTML=rowContents[1];
						tempObj3=PageManager.DataService.getControlInBranch(newRow,'display_Head');
						tempObj3.innerHTML=rowContents[2];
						tempObj5=PageManager.DataService.getControlInBranch(newRow,'display_Narration');
						tempObj5.innerHTML=" -";
						}

					}

					totalamount=dr - cr;

					for(var i=1;i<tableObj.rows.length;i++)
					{
						var typeObj=PageManager.DataService.getControlInBranch(tableObj.rows[i],"display_CodeType");
						var type=typeObj.innerHTML;
						if(type == "credit")
						{
							var trObj=PageManager.DataService.getRow(typeObj);
							col1=PageManager.DataService.getControlInBranch(trObj,'display_Credit');
							col1.innerHTML=totalamount;
							col2=PageManager.DataService.getControlInBranch(trObj,'display_Debit');
							col2.innerHTML="0";
						}
					}

					 var dSum=0;
					 var cSum=0;
					for(var i=1;i<tableObj.rows.length;i++)
					{

					  var dObj=PageManager.DataService.getControlInBranch(tableObj.rows[i],"display_Debit");
					  var cObj=PageManager.DataService.getControlInBranch(tableObj.rows[i],"display_Credit");
					 if(!isNaN(parseFloat(dObj.innerHTML)))
					 {
					   var sum=(parseFloat(dObj.innerHTML));
					   dSum=dSum+sum;
					 }
					 if(!isNaN(parseFloat(cObj.innerHTML)))
					 {
					   var sum=(parseFloat(cObj.innerHTML));
					   cSum=cSum+sum;
					 }
					}
					var newRow=trObj.cloneNode(true);
					newRow=tableObj.tBodies[0].appendChild(newRow);
					objt1=PageManager.DataService.getControlInBranch(newRow,'display_Code');
					objt2=PageManager.DataService.getControlInBranch(newRow,'display_Head');
					objt3=PageManager.DataService.getControlInBranch(newRow,'display_Debit');
					objt4=PageManager.DataService.getControlInBranch(newRow,'display_Credit');
					objt5=PageManager.DataService.getControlInBranch(newRow,'display_Narration');
					objt1.innerHTML=" ";
					objt2.innerHTML=" ";
					objt3.innerHTML=dSum;
					objt4.innerHTML=cSum;
					objt5.innerHTML=" ";

			}

	function hideColumn(index)
	{
		var table=document.getElementById('entries');
		for(var i=0;i<table.rows.length;i++){
			table.rows[i].cells[index].style.display="none";
		}
	}

 /* 	function getAccName(event) {
				  		clearTable(document.getElementById("completeTable"));
						PageManager.DescService.onblur(event);
					}

  function getFunId(event) {
				  		clearTable(document.getElementById("completeTable"));
						PageManager.DescService.onblur(event);
			}

/*
	We implement AJAX here. The remaining functions are present in script/jsCommonMethods.js.
	Whenever user enters some value this function will be triggered.
/
//(FOR EARNINGS---FUNCTION CODE)

function autoCompletion1(obj) {
   		var menu=document.getElementById("menu-popup");
		menu.style.setAttribute("left", "0px");
      	var row,nameCell;
      	  	var currRow=PageManager.DataService.getRow(obj);
			var size=codeArray.length-1;
		   	if(codeArray != null)
		   	{
		   		//keyCodes Values
		   		//13 - enter, 8 - backspace, 46 - delete, 40 - down arrow, 38 - up arrow
		   		if(event.keyCode == 13)
		   		{
		   		 getFunId(event);
		   		 return false;
		      		}
		      		if((event.keyCode == 8) || (event.keyCode == 46))
		   			k=-1;
		      		while(event.keyCode == 40 && codeArray[0] != null)	{
		      			if(size<(k+1))
						{
							k=-1;
						}
		      			k++;
		      			PageManager.DataService.getControlInBranch(currRow,'function_code').value=codeArray[k];
						//alert(codeArray[k]);
		      			return false;
		      			}
		     		while(event.keyCode == 38 && codeArray[0] != null)	{
		      			if(k==-1)
								      			{
								      				return false;
								      			}
								      			if(k==0)
								      			{
								      				k=size+1;
								      			}
	     		     k--;
		       	 	PageManager.DataService.getControlInBranch(currRow,'function_code').value=codeArray[k];
		       	 	//alert(codeArray[k]);
	        	 	return false;
		     			}
      }

        function_code=PageManager.DataService.getControlInBranch(currRow,'function_code').value;
   		var type='functionName';
          if (function_code == "") {
              clearTable(document.getElementById("completeTable"));
          } else {
               var url = "../commons/Process.jsp?type=" +type+ "&name=" + function_code+ " ";
	           	var req2 = initiateRequest();
              req2.onreadystatechange = function() {
                  if (req2.readyState == 4) {
                      if (req2.status == 200) {
                      	var codes2=req2.responseText;
                      	paintCodes(codes2,document.getElementById("auto-row"),document.getElementById("menu-popup"),document.getElementById("completeTable"));
                      	  	}
                      	  	else {

                          clearTable(document.getElementById("completeTable"));
                      }
                  }
              };
                   req2.open("GET", url, true);
                   req2.send(null);
          }
   }


//(FOR EARNINGS---ACCOUNT CODE)

function autoCompletion2(obj) {
	var menu=document.getElementById("menu-popup");
		menu.style.setAttribute("left", "135px");
   	var row,nameCell;
	var currRow=PageManager.DataService.getRow(obj);
	var size=codeArray.length-1;
	if(codeArray != null)
	{
		//keyCodes Values
		//13 - enter, 8 - backspace, 46 - delete, 40 - down arrow, 38 - up arrow
		if(event.keyCode == 13)	{
		 	getAccName(event);
			 return false;
   			}
   		if((event.keyCode == 8) || (event.keyCode == 46))
			j=-1;
   		while(event.keyCode == 40 && codeArray[0] != null)	{
   			if(size<(j+1))
						{
						   j=-1;
						  }
		   	j++;
   			PageManager.DataService.getControlInBranch(currRow,'chartOfAccounts_glCodeearning').value=codeArray[j];
  			return false;
   			}
  		while(event.keyCode == 38 && codeArray[0] != null)	{
   				if(j==-1)
					{
						return false;
					}
					if(j==0)
					{
						j=size+1;
					}
	    j--;
    	 	PageManager.DataService.getControlInBranch(currRow,'chartOfAccounts_glCodeearning').value=codeArray[j];
     	 	return false;
  			}
   }


      chartOfAccounts_glCode=PageManager.DataService.getControlInBranch(currRow,'chartOfAccounts_glCodeearning').value;
        var type='coaDetailCode';
       if (chartOfAccounts_glCode == "") {
           clearTable(completeTable);
       } else {
            var url = "../commons/Process.jsp?type=" +type+"&glCode=" + chartOfAccounts_glCode+ " ";
          	var req = initiateRequest();
           req.onreadystatechange = function() {
               if (req.readyState == 4) {
                   if (req.status == 200) {
                   	var codes=req.responseText;
                       paintCodes(codes,document.getElementById("auto-row"),document.getElementById("menu-popup"),document.getElementById("completeTable"));
                     } else {
                       clearTable(completeTable);
                   }
               }
           };
                req.open("GET", url, true);
                req.send(null);
       }
   }

   //(FOR DEDUCTIONS---FUNCTION CODE)

  function autoCompletion3(obj) {
      		var menu=document.getElementById("menu-popup");
   		menu.style.setAttribute("left", "0px");
         	var row,nameCell;
         	  	var currRow=PageManager.DataService.getRow(obj);
				var size=codeArray.length-1;
   		   	if(codeArray != null)
   		   	{
   		   		//keyCodes Values
   		   		//13 - enter, 8 - backspace, 46 - delete, 40 - down arrow, 38 - up arrow
   		   		if(event.keyCode == 13)
   		   		{
   		   		 getFunId(event);
   		   		 return false;
   		      		}
   		      		if((event.keyCode == 8) || (event.keyCode == 46))
   		   			k=-1;
   		      		while(event.keyCode == 40 && codeArray[0] != null)	{
   		      			if(size<(k+1))
						{
								k=-1;
						}
		      			k++;
  		      			PageManager.DataService.getControlInBranch(currRow,'function_code1').value=codeArray[k];
   						//alert(codeArray[k]);
   		      			return false;
   		      			}
   		     		while(event.keyCode == 38 && codeArray[0] != null)	{
   		      			if(k==-1)
					 			{
					  				return false;
					   			}
						if(k==0)
					    			{
					     				k=size+1;
					      			}
	     		     k--;
   		       	 	PageManager.DataService.getControlInBranch(currRow,'function_code1').value=codeArray[k];
   		       	 	//alert(codeArray[k]);
   	        	 	return false;
   		     			}
         }

           function_code1=PageManager.DataService.getControlInBranch(currRow,'function_code1').value;
      		var type='functionName';
             if (function_code1 == "") {
                 clearTable(document.getElementById("completeTable"));
             } else {
                  var url = "../commons/Process.jsp?type=" +type+ "&name=" + function_code1+ " ";
   	           	var req2 = initiateRequest();
                 req2.onreadystatechange = function() {
                     if (req2.readyState == 4) {
                         if (req2.status == 200) {
                         	var codes2=req2.responseText;
                         	paintCodes(codes2,document.getElementById("auto-row2"),document.getElementById("menu-popup"),document.getElementById("completeTable"));
                         	  	}
                         	  	else {

                             clearTable(document.getElementById("completeTable"));
                         }
                     }
                 };
                      req2.open("GET", url, true);
                      req2.send(null);
             }
      }


   //(FOR DEDUCTIONS---ACCOUNT CODE)

   function autoCompletion4(obj) {
    var menu=document.getElementById("menu-popup");
		menu.style.setAttribute("left", "140px");
   	var row,nameCell;
   	var currRow=PageManager.DataService.getRow(obj);
	var size=codeArray.length-1;
   	if(codeArray != null)
   	{
   		//keyCodes Values
   		//13 - enter, 8 - backspace, 46 - delete, 40 - down arrow, 38 - up arrow
   		if(event.keyCode == 13)	{
   		 	getAccName(event);
   			 return false;
      			}
      		if((event.keyCode == 8) || (event.keyCode == 46))
   			j=-1;
      		while(event.keyCode == 40 && codeArray[0] != null)	{
      			if(size<(j+1))
							{
							   j=-1;
							  }
		   	j++;
      			PageManager.DataService.getControlInBranch(currRow,'chartOfAccounts_glCodeduction').value=codeArray[j];
     			return false;
      			}
     		while(event.keyCode == 38 && codeArray[0] != null)	{
      			if(j==-1)
						{
							return false;
						}
						if(j==0)
						{
							j=size+1;
						}
	    j--;
       	 	PageManager.DataService.getControlInBranch(currRow,'chartOfAccounts_glCodeduction').value=codeArray[j];
        	 	return false;
     			}
      }


         chartOfAccounts_glCode=PageManager.DataService.getControlInBranch(currRow,'chartOfAccounts_glCodeduction').value;
           var type='coaDetailCode';
          if (chartOfAccounts_glCode == "") {
              clearTable(completeTable);
          } else {
               var url = "../commons/Process.jsp?type=" +type+"&glCode=" + chartOfAccounts_glCode+ " ";
             	var req = initiateRequest();
              req.onreadystatechange = function() {
                  if (req.readyState == 4) {
                      if (req.status == 200) {
                      	var codes=req.responseText;
                          paintCodes(codes,document.getElementById("auto-row2"),document.getElementById("menu-popup"),document.getElementById("completeTable"));
                        } else {
                          clearTable(completeTable);
                      }
                  }
              };
                   req.open("GET", url, true);
                   req.send(null);
          }
   }
*/
				/*
   		function paintCodes1(responseText) {
       	clearTable(completeTable);
    var a = responseText.split("^");
   	var codes = a[0];
   	codeArray=codes.split("+");
   	var accCodes=codeArray[0];
   	if (accCodes != null) {
       	var menu = document.getElementById("auto-row2");
       	var autorow = document.getElementById("menu-popup");
       	autorow.style.top = getElementY(menu) + "px";
       	completeTable = document.getElementById("completeTable");
       	completeTable.setAttribute("bordercolor", "white");;
           completeTable.setAttribute("bordercolor", "black");
           completeTable.setAttribute("border", "1");
       } else {
           clearTable(completeTable);
       }
   	var i=0;
   	while(codeArray[i] != null){
   	var accountcodes = codeArray[i];
   	appendCodes(accountcodes,completeTable);
   	i++;
   				}
					}

			*/

function addNodes()
{
		tbody1=document.getElementById("entities_grid");
		tbody1=tbody1.firstChild;
		newRow=tbody1.rows[1].cloneNode(true);
		tbody1.appendChild(newRow);

}


 </script>
</head>
<body bgcolor="#ffffff" bottommargin="0" topmargin="0" rightmargin="0" leftmargin="0" marginheight="0" marginwidth="0" onload="onloadTasks();PageValidator.addCalendars();" onKeyDown ="CloseWindow(event); "><!------------------ Header Begins Begins--------------------->
<table><tr><td><!--div id="main"><div id="m2"><div id="m3" -->
<form name="journalVoucher">
	<input  type="hidden" id="glCode" name="glCode"><!-- newly added -->
	<input type="hidden" name="funidvalue" id="funidvalue"><!-- newly added -->

	<input type="hidden" name="budgetCheckRequired" id="budgetCheckRequired" value="true">
	<input type="hidden" name="modeOfExec" id="modeOfExec" value="new " />
	<input type="hidden" name="tType" id="tType" value="J">
	<input type="hidden" name="cgnNum" id="cgnNum">
	<input type="hidden" name="voucherHeader_id" id="voucherHeader_id">
	<input type="hidden" name="databaseDate" id="databaseDate">
	<input type="hidden" name="oldVoucherDate" id="oldVoucherDate">


	<table width="100%" border=0 cellpadding="1" cellspacing="0">
			<tr>
			<td valign="top"><!------------Content begins here ------------------>
						<table width="100%" border=0 cellpadding="3" cellspacing="0" align=center>
        <TBODY>

							<tr  id="cgnLabel" name="cgnLabel" style="DISPLAY: none">
									<td align="right" valign="center" ><div align="right" class="labelcell"> CG&nbsp;Number</div>
									</td>
									<td>
										<span class="fieldcell"><input  class="fieldinput" name="voucherHeader_cgn" id="voucherHeader_cgn" readOnly maxLength=10></span>
									</td>
									<td></td>
									<td></td>
							</tr>

							<tr >
									<td align="right" valign="center"><div align="right" class="labelcell">Voucher Number<span class="leadon">*</span></div>
									</td>
									<td width="25%"><table cellpadding="0" cellspacing="0"><tr>
											<td class=smallfieldcell><input  type=text readonly style="WIDTH:25px; HEIGHT: 20px" maxlength="2" name="vnum" id="vnum" style="Display:none"></td>
											<td class=fieldcell><input class="fieldinput" name="voucherHeader_voucherNumber" id="voucherHeader_voucherNumber" maxlength="10" exilDataType="exilAlphaNumeric" exilMustEnter="true" size="20" tabindex=1 ></tr></table>
									</td>

									<td align="right" valign="center" ><div align="right" class="labelcell"> Voucher Date<span class="leadon">*</span> </div>
									</td>
									<td >
										<span class="smallfieldcell"><input name="voucherHeader_voucherDate" class="datefieldinput" id="voucherHeader_voucherDate" maxlength="11" tabindex=1 onkeyup="DateFormat(this,this.value,event,false,'3')"
											exilMustEnter="true"  exilDataType="exilAnyDate"  exilCalendar="true"></span>

									</td>

							</tr>

							<tr >
									<td align="right" valign="center" >
									<div align="right" class="labelcell"> <span class="leadon"><FONT color=#00438c>Month</FONT>*</span></div>
									</td>
									<td ><span class="smallfieldcell">
									<select class="fieldinput" name="month_id" id="month_id" maxLength="50" exilDataType="exilAlphaNumeric" tabindex=1 exilMustEnter="true">
										<option value="4" selected>April</option>
										<option value="5">May</option>
										<option value="6">June</option>
										<option value="7">July</option>
										<option value="8">August</option>
										<option value="9">September</option>
										<option value="10">October</option>
										<option value="11">November</option>
										<option value="12">December</option>
										<option value="1"> January</option>
										<option value="2">February</option>
										<option value="3">March</option>
									</select></span>
									</td>
									<td align="right" valign="center" ><div align="right" class="labelcell"> Financial
            year<span class="leadon">*</span> </div>
									</td>
									<td ><span class="smallfieldcell">
										<select name="financialYear_id" tabindex=1 class="fieldinput" id="financialYear_id"
										 exilMustEnter="true" exilListSource="financialYearList">
										</select></span>
									</td>
							</tr>

							<tr >
							<!--		<td align="right" valign="center" ><div align="right" class="normaltext"> Function<span class="leadon">*</span></div>
									</td>
									<td  >
										<SELECT name="department_id" id="department_id"
											            class="fieldinput" exilMustEnter="true" exilListSource="jvsal_department">
										</SELECT>
									</td> -->

									<td align="right" valign="center" ><div align="right" class="labelcell"> Fund&nbsp;<span class="leadon">*</span></div></td>
									<td ><span class="smallfieldcell">
									<SELECT name="fund_id" id="fund_id" class="fieldinput" tabindex=1 exilMustEnter="true" exilListSource="jvsal_fundName">
									</SELECT></span> </td>

									<td align="right" valign="center" ><div align="right" class="labelcell"> Financing Source</div></td>
									<td><span class="smallfieldcell">
									<SELECT name="fundSource_id" id="fundSource_id" tabindex=1 class="fieldinput" exilListSource="jvsal_fundSourceName">
									</SELECT></span> </td>


							<tr >
							  		<td align="right" valign="center" ><div align="right" class="labelcell">
							  		<div align="right">Narration</div></div>
							  		</td>
							  		<td ><TEXTAREA class=narrationfieldinput id=voucherDetail_narration name=voucherDetail_narration rows=3 cols=40 tabindex=1 exilDataType="exilAnyChar"></TEXTAREA></td>
									<td align="right" valign="center" class="normaltext"><div align="right"> </div></td>
							 		 <td  >&nbsp;
							  		</td>
							 </tr>
							<tr  id="statusInfo">
												<td id="statusLabel" align="right"><div  align="right" valign="center" class="labelcell">Status</div></td>
												  <td id="StatusText" ><span class="fieldcell">
													<input class="fieldinput" name="voucherHeader_status" id="voucherHeader_status" ></span>
												</td>
												 <td align="right"><div  align="right" valign="center" class="labelcell" exilMustEnter="true">Created By</div></td>
												 <td><span class="fieldcell"><input class="fieldinput" name="voucherHeader_createdby" id="voucherHeader_createdby" readonly></span></td>
							</tr>
							 <tr >
							  		<td align="middle" colspan=4 >&nbsp;
							  		</td>
							 </tr>

     						 <tr >
							  		<td align="middle" colspan=4  class=thStlyle>
							  		<div class=>EARNINGS</div>
							  		</td>
							 </tr></TBODY>

                        </table>

                        <table width="100%" border="0" cellpadding="0" cellspacing="0" ID="Table1">
                          <tr>
                              <td>
                              <table width="100%" border="1" cellpadding="0" cellspacing="0" ID="earningTable" align="center" style="WIDTH: 507px" >

                             	  <tr class="rowheader">
                                        <td width="1%"  class="thStlyle">&nbsp;&nbsp;</td>
                             	  		<td width="15%"  class="thStlyle">Function Name</td>
                                	    <td width="10%" height=34 class="thStlyle">Account Code</td>
                                    	<td width="30%" class="thStlyle"><div align="center">Account Head</div></td>
	                                    <td width="15%" class="thStlyle"><div align="center"> Amount</div></td>
	                                    <td width="5%" class="thStlyle"><div align="center"> Details</div></td>

    	                          </tr>
                                  <tr class="smallfieldcell">
                                  <td class="tdStlyle" width="1%"  onClick="changeColor(this,'earningTable');" name="selectTd" id="selectTd"></td>

        <!-- FROM THIS FOR FUNCTION NAME,ACCOUNT CODE (EARNINGS)-->
                                   <td class="columnheader"><span>
                                   		<input type="hidden" name="earning_voucherLineId" id="earning_voucherLineId">
                                       <input type="hidden" name="cv_fromFunctionCodeId" id="cv_fromFunctionCodeId">
                                       <input class="normaltext" size=10 name="function_code" id="function_code" tabindex=1 style="WIDTH: 99px; HEIGHT:
                  19px" value="" autocomplete="off" onkeyup="autocompletecodeFunction(this);"  exilDescField="cv_fromFunctionCodeId" exilDataSource="functionIdKey" onBlur="getFunId1(this,'cv_fromFunctionCodeId');funClear(this,1)" exilInGrid="true"><IMG   id=IMG1 onclick=openSearch1(this,'function',1)
                  height=22 src="/egi/resources/erp2/images/plus1.gif" width=25 align=top border=0 >

								<!--	<input NAME="function_code" id="function_code" size=16 style="WIDTH: 240px" readOnly maxLength="50" exilDataType="exilAnyChar"></span>

									<input type="hidden" name="cv_fromFunctionCodeId" id="cv_fromFunctionCodeId">-->


										</td>

                                  	<td class="columnheader"><span><input NAME="chartOfAccounts_glCodeearning" id  ="chartOfAccounts_glCodeearning" tabindex=1 size=12 style="WIDTH: 55px" autocomplete="off" onkeyup="autocompletecode(this,'chartOfAccounts_nameearning');"
                                  		onBlur="getAccName1(this,'chartOfAccounts_nameearning')" maxLength="50" exilDataType ="exilAlphaNumeric" exilInGrid="true" exilDataSource=""
                                  		exilDescField="chartOfAccounts_nameearning"><IMG  id=IMG1  onclick=openSearch(this,1); height=22 src="/egi/resources/erp2/images/plus1.gif" width=25 align=top border=0 ></span></td>

        <!-- UP TO THIS FOR FUNCTION NAME,ACCOUNT CODE (EARNINGS)-->

                                  <td class="columnheader"><span><input NAME="chartOfAccounts_nameearning" id="chartOfAccounts_nameearning" size=16 style="WIDTH: 390px" tabindex=-1 readOnly maxLength="50" exilDataType="exilAnyChar"></span></td>
                                    <td class="columnheader"><span><input NAME="earningAmount" ID   ="earningAmount" tabindex=1 size=8 class="fieldinput-right" onKeyUp="calculateEarningTotal()" onKeyDown="addNewRow('earningTable','chartOfAccounts_glCodeearning,earningAmount');"
                                        maxLength="16" exilDataType="exilUnsignedDecimal" exilMax="9999999999999.99" exilMin="0"></span></td>
                  				  	<td><A  id=A1 style="WIDTH: 10px; HEIGHT: 19px" onclick ="openDetails(this,'chartOfAccounts_glCodeearning','salaryjournal','entitiesNew_grid','new_')" tabindex=1 href="#" >Click</A></td>

                  				  </tr>
                              </table>
                             <!-- <tr><td id="auto-row">&nbsp;<td/></tr>-->
					<tr  align="left"  >
					<td>
					<table width=30%>
                            <tr>
								<td colspan="2" align="right"><input type="button"  class="button" value="Delete Row" id="deleteDetail" tabindex=1 name="deleteDetail" onclick=" deleteRowTable('earningTable'); return colAllTotalnew('earningAmount','ernTotalAmount');" /></td>
								<td colspan="2" align="left"><input type="button"  class="button" value="Add Row" id="addDetail" name="addDetail1" tabindex=1 onclick="addNewRowFromButton('earningTable','chartOfAccounts_glCodeearning','chartOfAccounts_nameearning');" /></td>

							</tr>
						</table>
                    </td>
                    </tr>
                             </td>
                          </tr>
						  <tr>
							  <td>
								<table width="100%" border="1" cellpadding="0" cellspacing="0" ID="ernTotalTable" align="center" style="WIDTH: 507px" >
                             	  <tr >
                                  	<td class="normaltext" colspan="2" align=right><span class="normaltext" align="right" style="WIDTH: 565px"  ><div class=labelcell>Total Earnings&nbsp;</div></span></td>
                                    <td><span class="smallfieldcell"><input  class=fieldcell NAME="ernTotalAmount" ID="ernTotalAmount" size=8 style="WIDTH: 136px; TEXT-ALIGN: right" disabled tabindex=-1></span></td>
                  				  	<td><span style="WIDTH: 45px; HEIGHT: 19px" id=SPAN1></span></td>
                  				  </tr>
    	                        </table>
								</td>
						  </tr>
						  <tr >
								<td align="middle" colspan=4 >&nbsp;</td>
						  </tr>
     					  <tr >
							  	<td align="middle" colspan=4 class=thStlyle><b><FONT size=2>DEDUCTIONS</FONT></b>&nbsp;</td>
						  </tr>
                      </table>
                      <table width="100%" border="0" cellpadding="0" cellspacing="0" ID="Table1">
                      	<tr>
                        	<td>
                        		<table width="100%" border="1" cellpadding="0" cellspacing="0" ID="deductionTable" align="center" style="WIDTH: 507px" >
                                	<tr class="rowheader">
                                	<td width="1%"  class="thStlyle">&nbsp;&nbsp;</td>

                                		<td width="10%"  class="thStlyle"><div align="center" class="">Function Name</div></td>
                                    	<td width="10%" height="34" class="thStlyle"><div align="center" class="">Account Code</div></td>
                                        <td width="30%" class="thStlyle"><div align="center">Account Head</div></td>
                                        <td width="15%" class="thStlyle"><div align="center"> Amount</div></td>
                                        <td width="5%" class="thStlyle"><div align="center"> Details</div></td>

                                    </tr>
                                    <tr class="smallfieldcell">
                                    <td class="tdStlyle" width="1%"  onClick="changeColor(this,'deductionTable');" name="selectTd" id="selectTd"></td>

         <!-- FROM THIS FOR FUNCTION NAME,ACCOUNT CODE (DEDUCTIONS)-->
                                    	<td>
                                    	<input type="hidden" name="deduction_voucherLineId" id="deduction_voucherLineId">
                                       <input type="hidden" name="cv_fromFunctionCodeId1" id="cv_fromFunctionCodeId1">
                                       <input class="normaltext" size=10 name="function_code1" id="function_code1" tabindex=1 style="WIDTH: 109px; HEIGHT:
                  19px" value="" autocomplete="off" onkeyup="autocompletecodeFunction(this);"  exilDescField="cv_fromFunctionCodeId1" exilDataSource="functionIdKey" onBlur="getFunId1(this,'cv_fromFunctionCodeId1');funClear(this,2)" exilInGrid="true"><IMG   id=IMG1 onclick=openSearch1(this,'function',2)
                  height=22 src="/egi/resources/erp2/images/plus1.gif" width=25 align=top border=0 >
										</td>
                                  		<td class="columnheader"><span><input NAME="chartOfAccounts_glCodeduction" id="chartOfAccounts_glCodeduction" tabindex=1 size=12 style="WIDTH: 55px" autocomplete="off" onkeyup="autocompletecode(this);"
                  							onBlur="getAccName1(this,'chartOfAccounts_namededuction')" maxLength="50" exilDataType ="exilAlphaNumeric" exilInGrid="true" exilDataSource=""
                  							exilDescField="chartOfAccounts_namededuction"><IMG id=IMG2 onclick=openSearch(this,2); height=22 src="/egi/resources/erp2/images/plus1.gif" width=25 align=top border=0 ></span></td>

        <!-- UP TO THIS FOR FUNCTION NAME,ACCOUNT CODE (DEDUCTIONS)-->


                                        <td class="columnheader"><span ><input NAME="chartOfAccounts_namededuction" id  ="chartOfAccounts_namededuction" tabindex=-1 size=16 style="WIDTH: 390px" readOnly maxLength="50" exilDataType="exilAnyChar"></span></td>
                                        <td class="columnheader"><span ><input NAME="deductionAmount" ID="deductionAmount" size=8 align="right" class="fieldinput-right" onKeyUp="calculateDeductionTotal()" tabindex=1 onKeyDown="addNewRow('deductionTable','chartOfAccounts_glCodeduction,deductionAmount')"
                                         	maxLength="16" exilDataType="exilUnsignedDecimal" exilMax="9999999999999.99" exilMin="0"></span></td>
								  		<td><A  id=A1 style="WIDTH: 10px; HEIGHT: 19px" onclick ="openDetails(this,'chartOfAccounts_glCodeduction','salaryjournal','entities_grid','')" tabindex=1 href="#" >Click</A></td>
                  				  	</tr>
                                </table>
                    <tr  align="left" >
					<td>
					<table width=30%>
                            <tr>

								<td colspan="2" align="right"><input type="button"  class="button" value="Delete Row" id="deleteDetail" name="deleteDetail1" tabindex=1 onclick=" deleteRowTable('deductionTable');return colAllTotalnew('deductionAmount','dedTotalAmount');" /></td>
								<td colspan="2" align="left"><input type="button"  class="button" value="Add Row" id="addDetail" name="addDetail" tabindex=1 onclick="addNewRowFromButton('deductionTable','chartOfAccounts_glCodeduction','chartOfAccounts_namededuction');" /></td>
							</tr>
					</table>
					</td>
					</tr>
                           </td>
                       </tr>
                       <tr>
							<td>
								<table width="100%" border="1" cellpadding="0" cellspacing="0" ID="dedTotalTable" align="center" style="WIDTH: 507px" >
	                             	<tr >
                                  		<td class="normaltext" colspan="2" align=right><span class="normaltext" align="right" style="WIDTH: 575px"  ><div class=labelcell>Total Deductions&nbsp;</div></span></td>
                                        <td ><span class="smallfieldcell"><input class=fieldcell NAME="dedTotalAmount" ID="dedTotalAmount" size=8 tabindex=-1 style="WIDTH: 136px; TEXT-ALIGN: right" disabled></span></td>
	                				    <td><span style="WIDTH: 45px; HEIGHT: 19px" id=SPAN1></span></td>

                  				  	</tr>
    	                         </table>
							</td>
						</tr>
						<tr >
							  	<td align="middle" colspan=4 class=thStlyle><b><FONT size=2>Net Pay</FONT></b>&nbsp;</td>
						  </tr>
						<tr>
						<td>
                        		<table width="100%" border="1" cellpadding="0" cellspacing="0" ID="netPayTable" align="center" style="WIDTH: 507px" >
                                	<tr class="rowheader">
                                	<td width="1%"  class="thStlyle">&nbsp;&nbsp;</td>

                                		<td width="10%"  class="thStlyle"><div align="center" class="">Function Name</div></td>
                                    	<td width="10%" height="34" class="thStlyle"><div align="center" class="">Account Code</div></td>
                                        <td width="30%" class="thStlyle"><div align="center">Account Head</div></td>
                                        <td width="15%" class="thStlyle"><div align="center"> Amount</div></td>
                                        <td width="5%" class="thStlyle"><div align="center"> </div></td>

                                    </tr>
                                    <tr class="smallfieldcell">
                                    <td class="tdStlyle" width="1%"  onClick="changeColor(this,'netPayTable');" name="selectTd" ></td>

                                    	<td>
                                    	<input type="hidden" name="netPay_voucherLineId" id="netPay_voucherLineId">
                                       <input type="hidden" name="cv_fromFunctionCodeIdpay" id="cv_fromFunctionCodeIdpay">
                                       <input class="normaltext" size=10 name="function_codepay" id="function_codepay" tabindex=1 style="WIDTH: 109px; HEIGHT:
                  19px" value="" autocomplete="off" onkeyup="autocompletecodeFunction(this);"  exilDescField="cv_fromFunctionCodeIdpay" exilDataSource="functionIdKey" onBlur="getFunId1(this,'cv_fromFunctionCodeIdpay');funClear(this,3)" exilInGrid="true"><!-- <IMG   id=IMG1 onclick=openSearch1(this,'function',2)
                  height=22 src="/egi/resources/erp2/images/plus1.gif" width=25 align=top border=0 > -->
										</td>
                                  		<td class="columnheader"><span><input NAME="chartOfAccounts_glCodenetPay" id="chartOfAccounts_glCodenetPay" size=12 style="WIDTH: 55px" autocomplete="off" tabindex=1 onkeyup="autocompletecode(this);"
                  							onBlur="getAccName1(this,'chartOfAccounts_namenetPay')" maxLength="50" exilDataType ="exilAlphaNumeric" exilInGrid="true" exilDataSource=""
                  							exilDescField="chartOfAccounts_namenetPay"><!-- <IMG id=IMG2 onclick=openSearch(this,2); height=22 src="/egi/resources/erp2/images/plus1.gif" width=25 align=top border=0 > --></span></td>
                                        <td class="columnheader"><span ><input NAME="chartOfAccounts_namenetPay" id  ="chartOfAccounts_namenetPay" size=16 tabindex=-1 style="WIDTH: 440px" readOnly maxLength="50" exilDataType="exilAnyChar"></span></td>
                                        <td class="columnheader"><span ><input NAME="netPay" ID="netPay" size=8 align="right" class="fieldinput-right"
                                         	maxLength="16" tabindex=-1 exilDataType="exilUnsignedDecimal" exilMax="9999999999999.99" exilMin="0"></span></td>
								<td><A  id=A1 style="WIDTH: 10px; HEIGHT: 19px" onclick ="openDetails(this,'chartOfAccounts_glCodenetPay','salaryjournal','entitiesNewPay_grid','newPay_')" tabindex=1	 href="#" >Click</A></td>
                  				  	</tr>
                                </table>

						</tr>
						<tr>
							    <td>
								<table border="1" cellpadding="0" cellspacing="0"  align="center" style="WIDTH: 600px" >

                             	  <tr class="normaltext" style="display:none">
                                  		<td class="normaltext" colspan="2" align=right><span class="normaltext" align="right" style="WIDTH: "  >Net Total</span>
                                  		</td>

                                        <td class="columnheader"><span>
                                        <input  class=fieldcell NAME="netTotalPay" ID="netTotalPay" size=8   style="WIDTH: 136px; TEXT-ALIGN:  right" disabled
											 align="right"
                 ></span></td>
                    				<td></td>
                  				  </tr>

    	                          </table>
								</td> <div id="codescontainer"></div>
							</tr>
                       </table></td></tr>
             	<tr >
					<td height="25" colspan="4" valign="bottom" class="smalltext"><p class="smalltext"><span class="leadon">*</span>
						- Mandatory Fields</p>
					</td>

			 	</tr><!--  Buttons for Request Form starts here -->

				   			<tr >
								<td colspan="4" align="middle"><!-- Buttons Start Here -->
									<table border="0" cellpadding="0" cellspacing="0">
											<tr id="modGrid">
										<td align="center" width=100% colspan=4>
										<input   type="button" class="button" value="Reverse" tabindex=1 onclick=modify(); />
										</td>
								</tr>
								<tr id="backbutton" >
									<td width=100% align=center colspan=4>
									<input   type="button" class="button" value="Back" tabindex=1 onclick="back(window.self)" />

									</td>
								</tr>
								<tr id="reverseRecord"  style="DISPLAY: none">
									<td align="right"><span   valign="center" class="labelcell"> Voucher Number<SPAN class=leadon>*</SPAN></span>
									</td>
									<td><span class=fieldcell><input  class=fieldcell name="voucherHeader_newVcNo" id="voucherHeader_newVcNo" maxlength="10"   exilDataType="exilAlphaNumeric" style="width:148; height:19"></span>
									</td>
									<td align="right">
										<span   valign="center" class="labelcell" >Voucher Date<span class="leadon">*</span>
									</td>
									<td><span class=smallfieldcell> <INPUT class="smallfieldcell" name="voucherHeader_effDate" exilDataType="exilAnyDate" id   ="voucherHeader_effDate" style="WIDTH: 120x; HEIGHT: 19px" size="13" onkeyup="DateFormat(this,this.value,event,false,'3')" exilCalendar="true"></span></span>
									</td>
									<td><INPUT	 type   =hidden class   ="datefieldinput" name="diffDebit" id="diffDebit" style="WIDTH: 101px; HEIGHT: 19px"	size="13"></SPAN>
									</td>
								</tr>

											<table border="0" cellpadding="0" cellspacing="0">
											<tr id="submitGrid">
												<td>
													 <input  id="saveandnew" type="button" class="button" tabindex=1 value="Save & New" onclick="return ButtonPress('savenew');"/>
													 <input   type="button" class="button" value="Save & Close" tabindex=1 onclick="return ButtonPress('saveclose');" />
													 <input   type="button" class="button" value="Cancel" tabindex=1 onclick="onClickCancel()" />
													 <input   type="button" class="button" value="Close" tabindex=1 onclick=window.close(); />
													 <input   type="button" class="button" value="Show GlEntry" tabindex=1 onclick=showglEntry(); />
												</td>
										</tr></table>
								<table align="center" border="0" cellpadding="0" cellspacing="0">
					 				<tr id="reverseSubmit">
				 						<td width=100% align=center>
					 						<input type="button"  id="revsave" value="Submit" class="button" tabindex=1 onclick="return ButtonPress('saveclose');"/>
					 						<input type="button" id="revclose" value="Close" class="button" tabindex=1 onclick="window.close();" />
				 						</td>
									</tr>
								</table>


							<table width="100%" border=0 cellpadding="3" cellspacing="0" id="showEntries" name="showEntries" style="DISPLAY: none">
													<tr >
													<td colspan=4>
													<table width="100%" align=center border="0" cellpadding="0" cellspacing="0" >
													<tr  height="25">
													 <TD class=displaydata align=center ><h4>GLEntry</h4></TD></tr>
													</table>
													</td>
													</tr>
													<tr><td>
													<table width="80%" border="1" cellpadding="0" cellspacing="0" align=center id="entries" name="entries">
													<tr class="rowheader">
														<td class="thStlyle" ><div align="center" valign="center" class=""> Code Type</div></td>
														<td  class="thStlyle"><div align="center" valign="center" class=""> Account Code</div></td>
														<td  class="thStlyle"><div align="center" valign="center" class=""> Account Head</div></td>
														<td  class="thStlyle"><div align="center" valign="center" class=""> Debit </div></td>
														<td  class="thStlyle"><div align="center" valign="center" class=""> Credit</div></td>
														<td  class="thStlyle"><div align="center" valign="center" class=""> Narration</div></td>
													</tr>
													<tr class="labelcell">
														<td ><div name="display_CodeType"  id="display_CodeType"   readOnly maxLength=10 tabIndex=0></div></td>
														<td ><div name="display_Code"  id="display_Code"   readOnly maxLength=10 tabIndex=0>&nbsp;</div></td>
														<td ><div name="display_Head"  id="display_Head"  readOnly maxLength=10 tabIndex=0>&nbsp;</div></td>
														<td ><div name="display_Debit"  id="display_Debit"  readOnly maxLength=16 tabIndex=0>&nbsp;</div></td>
														<td ><div name="display_Credit"  id="display_Credit"  readOnly maxLength=16 tabIndex=0>&nbsp;</div></td>
														<td ><div name="display_Narration" id="display_Narration"  readOnly maxLength=10 tabIndex=0>&nbsp;</div></td>
													</tr>
													</table>
													</td>
													</tr>
						</table>

					<table id="entities_grid" width="20%" style="DISPLAY: none">
		<tr>
			<td>entities_grid</td>
			<td></td>
			<td></td>
			<td></td>
			<td></td>
		</tr>
		<tr>
			<td><input id="grid_detTypeId" name="grid_detTypeId" style="WIDTH: 100px" size="20"></td>
			<td><input id="grid_detKeyId" name="grid_detKeyId" style="WIDTH: 100px" size="20"></td>
			<td><input id="grid_detValue" name="grid_detValue" style="WIDTH: 100px" size="20" ></td>
			<td><input id="grid_rowIndex" name="grid_rowIndex" style="WIDTH: 100px" size="20"></td>
          	<td><input id="grid_amount" name="grid_amount" style="WIDTH: 100px" ></td>
			 <td><input id="grid_detCode" name="grid_detCode" style="WIDTH: 100px"></td>
		</tr>
	</table>
	<table id="entitiesNew_grid" width="20%" style="DISPLAY: none">
		<tr>
			<td>entitiesNew_grid</td>
			<td></td>
			<td></td>
			<td></td>
		</tr>
		<tr>
			<td><input id="new_grid_detTypeId" name="new_grid_detTypeId" style="WIDTH: 100px"></td>
			<td><input id="new_grid_detKeyId" name="new_grid_detKeyId" style="WIDTH: 100px"></td>
			<td><input id="new_grid_detValue" name="new_grid_detValue" style="WIDTH: 100px"></td>
			<td><input id="new_grid_rowIndex" name="new_grid_rowIndex" style="WIDTH: 100px"></td>
			<td><input id="new_grid_amount" name="new_grid_amount" style="WIDTH: 100px"></td>
			<td><input id="new_grid_detCode" name="new_grid_detCode" style="WIDTH: 100px"</td>

		</tr>
	</table>
	<table id="entitiesNewPay_grid" width="20%" style="Display:none">
		<tr>
			<td>entitiesNewPay_grid</td>
			<td></td>
			<td></td>
			<td></td>
			<td></td>
			<td></td>
		</tr>
		<tr>
			<td><input id="newPay_grid_detTypeId" name="newPay_grid_detTypeId" style="WIDTH: 100px"></td>
			<td><input id="newPay_grid_detKeyId" name="newPay_grid_detKeyId" style="WIDTH: 100px"></td>
			<td><input id="newPay_grid_detValue" name="newPay_grid_detValue" style="WIDTH: 100px"></td>
			<td><input id="newPay_grid_rowIndex" name="newPay_grid_rowIndex" style="WIDTH: 100px"></td>
			<td><input id="newPay_grid_amount" name="newPay_grid_amount" style="WIDTH: 100px"></td>
     		 <td><input id="newPay_grid_detCode" name="newPay_grid_detCode" style="WIDTH: 100px"</td>

		</tr>
	</table>


</form>
<!-- We will set the "left" position value inside autocompletion method -->
	<div style="position: absolute; top:168px;width:117px;height:32px; left:521px" id="menu-popup" >
		<table id="completeTable" bgcolor="#cae1ff" border="1"/>
	</div>
</body>
</html>
