<?xml version="1.0"?>
<!--
  eGov suite of products aim to improve the internal efficiency,transparency,
     accountability and the service delivery of the government  organizations.
  
      Copyright (C) <2015>  eGovernments Foundation
  
      The updated version of eGov suite of products as by eGovernments Foundation
      is available at http://www.egovernments.org
  
      This program is free software: you can redistribute it and/or modify
      it under the terms of the GNU General Public License as published by
      the Free Software Foundation, either version 3 of the License, or
      any later version.
  
      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License for more details.
  
      You should have received a copy of the GNU General Public License
      along with this program. If not, see http://www.gnu.org/licenses/ or
      http://www.gnu.org/licenses/gpl.html .
  
      In addition to the terms of the GPL license to be adhered to in using this
      program, the following additional terms are to be complied with:
  
  	1) All versions of this program, verbatim or modified must carry this
  	   Legal Notice.
  
  	2) Any misrepresentation of the origin of the material is prohibited. It
  	   is required that all modified versions of this material be marked in
  	   reasonable ways as different from the original version.
  
  	3) This license does not grant any rights to any user of the program
  	   with regards to rights under trademark law for use of the trade names
  	   or trademarks of eGovernments Foundation.
  
    In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
-->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated Jul 19, 2007 2:57:28 PM by Hibernate Tools 3.2.0.b9 -->
<hibernate-mapping>
	<class name="org.egov.works.models.estimate.AbstractEstimate"
		table="EGW_ABSTRACTESTIMATE">
		<id name="id" type="long">
			<column name="ID" />
			<generator class="sequence">
				<param name="sequence">SEQ_EGW_ABSTRACTESTIMATE</param>
			</generator>
		</id>
		
		<property name="estimateNumber" type="string" >
			<column name="ESTIMATE_NUMBER" length="256" unique="true" not-null="true" />
		</property>
		<property name="estimateDate" type="date">
			<column name="ESTIMATE_DATE" length="7" not-null="true" />
		</property>		
		<property name="name" type="string">
			<column name="NAMEOFWORK" length="1024" not-null="true" /> 
		</property>
		<property name="description" type="string">
			<column name="DESCRIPTION" length="1024" not-null="true"/>
		</property>
		<many-to-one name="ward" class="org.egov.infra.admin.master.entity.Boundary">
			<column name="JURISDICTION" not-null="true"/>
		</many-to-one>
		<many-to-one name="type"
			class="org.egov.works.models.masters.NatureOfWork" fetch="select">
			<column name="NATUREOFWORK" not-null="true"/>
		</many-to-one>
		<property name="location" type="string">
			<column name="LOCATION" length="250" /> 
		</property>
		<property name="latitude">
			<column name="LATITUDE"  />
		</property>
		<property name="longitude">
			<column name="LONGITUDE" />
		</property>
		<many-to-one name="parentCategory"
			class="org.egov.commons.EgwTypeOfWork" fetch="select"> 
			<column name="WORK_TYPE" />
		</many-to-one>
		<many-to-one name="category"
			class="org.egov.commons.EgwTypeOfWork" fetch="select">
			<column name="WORK_SUBTYPE" />
		</many-to-one>
		<many-to-one name="userDepartment"
			class="org.egov.infra.admin.master.entity.Department" fetch="select">
			<column name="USER_DEPARTMENT" not-null="true"/>
		</many-to-one>
		<many-to-one name="executingDepartment"
			class="org.egov.infra.admin.master.entity.Department" fetch="select">
			<column name="EXECUTING_DEPARTMENT" not-null="true"/>
		</many-to-one>
		<component name="workValue">
			<property name="value" type="double" precision="2"
				scale="20" column="WORK_VALUE"  />
		</component>
		<component name="estimateValue">
			<property name="value" type="double" precision="2"
				scale="20" column="ESTIMATE_VALUE"  />
		</component>
		<many-to-one name="estimatePreparedBy"
			class="org.egov.pims.model.PersonalInformation">
			<column name="PREPAREDBY" not-null="true"/>
		</many-to-one>
		<many-to-one name="fundSource" class="org.egov.commons.Fundsource" fetch="select">
			<column name="FUNDSOURCE_ID" not-null="true"/>
		</many-to-one>
		<property name="documentNumber" type="long">
            <column name="DOCUMENT_NUMBER"/>
        </property>		
		<many-to-one name="egwStatus" column="STATUS_ID" /> 		
		<many-to-one name="state" class="org.egov.infra.workflow.entity.State"
			cascade="all">
			<column name="STATE_ID" />
		</many-to-one>
		<property name="budgetApprNo" type="string">
			<column name="BUDGETAPPRNO" length="256" />
		</property>	
		<property name="budgetApprDate" type="date">
			<column name="BUDGET_APPRN_DATE" length="7" />
		</property>
		<property name="budgetAvailable">
			<column name="BUDGETAVAILABLE" />
		</property>	
		<property name="budgetRejectionNo" type="string">
			<column name="BUDGETREJECTIONNO" length="256" />
		</property>
		<many-to-one name="depositCode"
			class="org.egov.works.models.masters.DepositCode" fetch="select">
			<column name="DESPOSITCODE_ID" />
		</many-to-one>
		<many-to-one name="projectCode" column="PROJECTCODE_ID"
			class="org.egov.works.models.estimate.ProjectCode" >
		</many-to-one>
		<many-to-one name="parent" column="PARENTID" />
		<property name="approvedDate" type="date">
			<column name="APPROVED_DATE" length="7" />
		</property>	
		<property name="isCopiedEst" type="string">
			<column name="IS_COPIED_EST" length="1" />
		</property>	
		
		<many-to-one name="createdBy" class="org.egov.infra.admin.master.entity.User" column="CREATEDBY" fetch="select" not-null="true" />
		<many-to-one name="modifiedBy" class="org.egov.infra.admin.master.entity.User" column="MODIFIEDBY" fetch="select"/>
		<property name="createdDate" column="CREATEDDATE" type="timestamp" not-null="true" />
		<property column="MODIFIEDDATE" name="modifiedDate" type="timestamp" />
		
		<list name="multiYearEstimates" cascade="all,delete-orphan">
			<key column="abstractestimate_id" not-null="true" />
			<list-index column="multiyear_estimate_index" />
			<one-to-many
				class="org.egov.works.models.estimate.MultiYearEstimate" />
		</list>
		<list name="activities" cascade="all,delete-orphan">
			<key column="abstractestimate_id" not-null="true" />
			<list-index column="estimate_activity_index" />
			<one-to-many
				class="org.egov.works.models.estimate.Activity" />
		</list>
		<list name="assetValues" cascade="all,delete-orphan">
			<key column="abstractestimate_id" not-null="true" />
			<list-index column="estimate_asset_index" />
			<one-to-many
				class="org.egov.works.models.estimate.AssetsForEstimate" />
		</list>
		<list name="overheadValues" cascade="all,delete-orphan">
			<key column="abstractestimate_id" not-null="true" />
			<list-index column="estimate_overhead_index" />
			<one-to-many
				class="org.egov.works.models.estimate.OverheadValue" />
		</list>	
		<list name="financialDetails" cascade="all,delete-orphan">
			<key column="abstractestimate_id" not-null="true" />
			<list-index column="estimate_findtl_index" />
			<one-to-many
				class="org.egov.works.models.estimate.FinancialDetail" />
		</list>
		<set name="abstractEstimateAppropriations" inverse="true" >
			<key column="ABSTRACTESTIMATE_ID" />
			<one-to-many class="org.egov.works.models.estimate.AbstractEstimateAppropriation"  />
		</set>
		<list name="estimatePhotographsList" cascade="all,delete-orphan">
			<key column="abstractestimate_id" not-null="true" />
			<list-index column="est_photo_index" />
			<one-to-many
				class="org.egov.works.models.estimate.EstimatePhotographs" />
		</list>		
	</class>
	
	<query name="MY_NEW_ESTIMATES">
		<![CDATA[
     	from AbstractEstimate as ae where ae.parent is null and ae.egwStatus.code='CREATED' and ae.createdBy=?
    ]]>
	</query>
	<query name="MY_APPROVAL_PENDING_ESTIMATES">
		<![CDATA[
     	from AbstractEstimate as ae where ae.parent is null and ae.state.owner.id=? and ae.egwStatus.code='CREATED' and ae.state.nextAction!=''
    ]]>
	</query>
	<query name="MY_REJECTED_ESTIMATES">
		<![CDATA[
     	from AbstractEstimate as ae where ae.parent is null and ae.state.owner.id=? and ae.egwStatus.code='REJECTED'
    ]]>
	</query>
	<query name="ALL_ESTIMATES_BY_STATUS">
		<![CDATA[
     	from AbstractEstimate as ae where ae.parent is null and ae.egwStatus.code=? order by ae.executingDepartment.name
    ]]>
	</query>
	<query name="ALL_ESTIMATES_BY_EXECUTINGDEPARTMENT">
		<![CDATA[
     	from AbstractEstimate as ae where ae.parent is null and ae.egwStatus.code=? and ae.executingDepartment.name = ? order by ae.executingDepartment.name
    ]]>
	</query>
	<query name="MY_TECH_SANCTIONED_ESTIMATES">
		<![CDATA[
     	from AbstractEstimate as ae where ae.parent is null and ae.state.owner.id=? and ae.egwStatus.code='TECH_SANCTIONED'
    ]]>
	</query>
	<query name="MY_CANCELLED_ESTIMATES">
		<![CDATA[
     	from AbstractEstimate as ae where ae.parent is null and ae.state.owner.id=? and ae.egwStatus.code='CANCELLED'
    ]]>
	</query>
	<query name="getAbEstimateListById">
		<![CDATA[
     	from AbstractEstimate ab where ab.id in(:param_0)
    	]]>
	</query>
	<query name="REVISION_ESTIMATES_BY_ESTID">
		<![CDATA[
     	from AbstractEstimate ae where ae.parent.id=? and ae.egwStatus.code='APPROVED' order by ae.id 
    ]]>
	</query>
	<query name="GET_UNCANCELLED_ESTIMATES_FOR_RATECONTRACT">
		<![CDATA[
     	from AbstractEstimate where  egwStatus.code!='CANCELLED' and rateContract.id = ? and id!=? and createdDate < ? 
    ]]>
	</query>
	<query name="REVISION_ESTIMATES_BY_ESTID_WOID">
		<![CDATA[
     	from AbstractEstimate ae where ae.parent.id=? and ae.egwStatus.code='APPROVED' and 
     	EXISTS (select woe.estimate.id from WorkOrderEstimate woe where woe.estimate.id = ae.id and woe.workOrder.parent.id = ?) order by ae.id 
    ]]>
	</query>
</hibernate-mapping>
